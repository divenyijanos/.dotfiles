1484653066105:width = 10, height = 6
1484653066106:)
1484653066106:}
1484653070072:generateRelativeData(campaign_summary, measure = measure, window_size = 5) %>%
1484653070073:.[relative_measure < 1.15] %>%
1484653070074:plotRelativeEvolution(
1484653070074:trendlines = T, measure = measure, time_var = 'send_day',
1484653070074:color = group_by,
1484653070075:prior_change_dates = F, sto_line = T, sto_text = T, text_position = 0.93) +
1484653070075:theme_bw(base_family = 'Times', base_size = 14) +
1484653070075:labs(x = 'campaign send day', y = 'uplift of STO open rate') +
1484653070076:ggtitle('Uplift of STO open rate compared to control group',
1484653070076:subtitle = 'measured on contacts receiving campaigns throughout the whole period') +
1484653070076:scale_y_continuous(labels = scales::percent_format()) +
1484653070077:theme(plot.title = element_text(face = 'bold'), text = element_text(family = 'Yanone Kaffeesatz Regular'))
1484653070406:myggsave('prezi_relative_open_rate.png')
1484653120726:myggsave <- function(plot_name) {
1484653120727:if (!dir.exists(file.path('figure', customer))) {
1484653120728:dir.create(file.path('figure', customer))
1484653120729:}
1484653120730:ggsave(
1484653120730:file.path('figure', customer, str_c(customer, Sys.Date(), plot_name, sep = '_')),
1484653120731:width = 10.67, height = 6
1484653120732:)
1484653120733:}
1484653122869:myggsave('prezi_relative_open_rate.png')
1484653294815:refetch <- TRUE
1484653295668:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484655232941:unique_contacts <- unique(program_data[, .(segment, contact_id)])
1484655233588:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484655233934:common_contacts <- program_data[, .N, by = .(segment, contact_id)] %>%
1484655233935:.[N == n_campaigns, .(segment, contact_id)]
1484655236040:if (customer == 'batiwiz') {
1484655236041:# append new programs
1484655236042:na_program_data <- getCampaignDataForCustomer(customer, 'NA-TD120', refetch = refetch)
1484655236042:a_program_data <- getCampaignDataForCustomer(customer, 'A-TD120', refetch = refetch)
1484655236043:common_dates <- as.Date(
1484655236043:intersect(
1484655236043:unique(a_program_data$send_day),
1484655236044:unique(na_program_data$send_day))
1484655236044:, origin = '1970-01-01'
1484655236044:)
1484655236045:a_filtered <- a_program_data[send_day %in% common_dates]
1484655236045:na_filtered <- na_program_data[send_day %in% common_dates]
1484655236045:program_data <- rbindlist(list(program_data, na_filtered, a_filtered))
1484655236046:}
1484658248542:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484658249672:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484658250472:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484658250641:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484658251130:contactlist <- stable_contactlist
1484658253171:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484658253171:merge(contactlist, by = c('contact_id', 'segment'))
1484658279512:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484658280091:n_past_campaigns %>% ggplot(aes(x = N)) +
1484658280092:geom_histogram(binwidth = 5) +
1484658280093:scale_x_continuous(breaks = seq(0,90,5))
1484658695173:past_campaign_num_limit <- quantile(n_past_campaigns$N, 0.1)
1484658695739:past_campaign_num_limit <- 66
1484658696778:all_data <- merge(
1484658696779:all_data,
1484658696780:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484658696780:by = c('contact_id', 'segment')
1484658696780:)
1484658699496:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484658796864:campaign_summary <- calculateCampaignSummary(all_data)
1484658856296:generateRelativeData(campaign_summary, measure = measure, window_size = 5) %>%
1484658856297:.[relative_measure < 1.15] %>%
1484658856298:plotRelativeEvolution(
1484658856298:trendlines = T, measure = measure, time_var = 'send_day',
1484658856299:color = group_by,
1484658856299:prior_change_dates = F, sto_line = T, sto_text = T, text_position = 0.93) +
1484658856299:theme_bw(base_family = 'Times', base_size = 14) +
1484658856300:labs(x = 'campaign send day', y = 'uplift of STO open rate') +
1484658856300:ggtitle('Uplift of STO open rate compared to control group',
1484658856300:subtitle = 'measured on contacts receiving campaigns throughout the whole period') +
1484658856301:scale_y_continuous(labels = scales::percent_format()) +
1484658856301:theme(plot.title = element_text(face = 'bold'), text = element_text(family = 'Yanone Kaffeesatz Regular'))
1484658885472:font_import()
1484658945244:fonts()
1484658961470:generateRelativeData(campaign_summary, measure = measure, window_size = 5) %>%
1484658961471:.[relative_measure < 1.15] %>%
1484658961472:plotRelativeEvolution(
1484658961472:trendlines = T, measure = measure, time_var = 'send_day',
1484658961472:color = group_by,
1484658961473:prior_change_dates = F, sto_line = T, sto_text = T, text_position = 0.93) +
1484658961473:theme_bw(base_family = 'Times', base_size = 14) +
1484658961473:labs(x = 'campaign send day', y = 'uplift of STO open rate') +
1484658961474:ggtitle('Uplift of STO open rate compared to control group',
1484658961474:subtitle = 'measured on contacts receiving campaigns throughout the whole period') +
1484658961474:scale_y_continuous(labels = scales::percent_format()) +
1484658961475:theme(plot.title = element_text(face = 'bold'), text = element_text(family = 'Canaro Medium'))
1484659000468:addSTOline <- function(start_date = NULL, sto_line = TRUE, sto_text = TRUE, prior_changes = TRUE, text_position = 0.8) {
1484659000470:plot_list <- list()
1484659000471:if (sto_line) {
1484659000472:date_df <- data.table(x = start_date, y = text_position)
1484659000472:plot_list <- list(
1484659000473:plot_list,
1484659000473:geom_vline(
1484659000474:data = date_df,
1484659000475:aes(xintercept = as.numeric(x)),
1484659000475:color = 'black', linetype = 'dashed'
1484659000476:)
1484659000476:)
1484659000477:if (sto_text) {
1484659000478:plot_list <- list(
1484659000478:plot_list,
1484659000479:geom_text(
1484659000479:data = data.frame(x = start_date, y = text_position),
1484659000480:aes(x, y, label = 'Start of STO', family = 'Canaro Medium'),
1484659000481:color = 'black', hjust = 1.1
1484659000482:)
1484659000482:)
1484659000483:}
1484659000483:}
1484659000483:if (prior_changes) {
1484659000484:plot_list <- list(
1484659000485:plot_list,
1484659000486:geom_vline(
1484659000486:data = data.table(date = as.numeric(as.Date(PRIOR_CHANGE_DATES))),
1484659000487:aes(xintercept = date),
1484659000488:color = 'black', linetype = 'dotted'
1484659000489:)
1484659000489:)
1484659000490:}
1484659000491:plot_list
1484659000492:}
1484659008671:generateRelativeData(campaign_summary, measure = measure, window_size = 5) %>%
1484659008672:.[relative_measure < 1.15] %>%
1484659008673:plotRelativeEvolution(
1484659008673:trendlines = T, measure = measure, time_var = 'send_day',
1484659008673:color = group_by,
1484659008674:prior_change_dates = F, sto_line = T, sto_text = T, text_position = 0.93) +
1484659008674:theme_bw(base_family = 'Times', base_size = 14) +
1484659008674:labs(x = 'campaign send day', y = 'uplift of STO open rate') +
1484659008675:ggtitle('Uplift of STO open rate compared to control group',
1484659008675:subtitle = 'measured on contacts receiving campaigns throughout the whole period') +
1484659008675:scale_y_continuous(labels = scales::percent_format()) +
1484659008676:theme(plot.title = element_text(face = 'bold'), text = element_text(family = 'Canaro Medium'))
1484659009066:myggsave('prezi_relative_open_rate.png')
1484659961443:packrat::restore(prompt = FALSE)
1484660000064:install.packages('emsmetricr')
1484660006816:install.packages('emsmetricr', type = 'source')
1484660029943:packrat::snapshot(prompt = FALSE)
1484667505134:source('global.R')
1484667534761:customer <- "batiwiz"
1484667534764:program <- "NA-TD120"
1484667542399:past_contact_dt <- getBanditNumbersForPast(customer, program)
1484668451952:fread('data/batiwiz_NA-TD120.csv')
1484668472306:fread('data/batiwiz_NA-TD120.csv')[913916]
1484671534920:dt <- data.table(x = c(1, 2, 3), a1 = c(T, F , T), a2 = c(T, F, F), a3 = c(T, T, T))
1484671535961:dt
1484671565088:dt[, Reduce(`+`, .SD), .SDcols = c('a1', 'a2', 'a3')]
1484671570595:dt[, y:= Reduce(`+`, .SD), .SDcols = c('a1', 'a2', 'a3')]
1484671576432:dt[, y := Reduce(`+`, .SD), .SDcols = c('a1', 'a2', 'a3')][]
1484671590779:dt[, y := Reduce(`+`, .SD), .SDcols = grep("a.", names(dt), value = T)][]
1484897761828:source('global.R')
1484897762887:customer <- 'batiwiz'
1484897762887:program <- 'TD120'
1484897768049:refetch <- F
1484897768981:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484897771709:unique_contacts <- unique(program_data[, .(segment, contact_id)])
1484897772033:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484897772105:common_contacts <- program_data[, .N, by = .(segment, contact_id)] %>%
1484897772106:.[N == n_campaigns, .(segment, contact_id)]
1484897772369:reportStatistics(
1484897772369:customer, program_data,
1484897772370:unique_contacts, common_contacts,
1484897772371:check_pairwise_common = FALSE
1484897772371:)
1484897783812:customer <- 'batiwiz'
1484897784437:program <- 'TD120'
1484897784989:all_data <- readAllData(customer, program)
1484898451289:all_data[, .N, by = send_day]
1484898480428:all_data[, .N, keyby = send_day]
1484899118352:all_data[segment == 'sto']
1484899137975:all_data[segment == 'past']
1484899142071:all_data[period == 'past']
1484899183704:all_data[campaign_id %in% c(1108991, 603561, 609085, 613914)]
1484899201116:all_data[campaign_id %in% c(1108991, 603561, 609085, 613914)] %>%
1484899201116:.[, .(n = .N), by = .(period, send_day, send_hour)]
1484899253840:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899253840:.[, .(n = .N), by = .(period, send_day, send_hour)]
1484899271253:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899271253:.[, .(n = .N), by = .(period, send_day, send_hour)] %>%
1484899271254:.[order(send_hour)]
1484899317240:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899317240:.[, .(n = .N), by = .(period, send_day, send_hour)] %>%
1484899317241:.[, .(period, send_hour, share = n/.N), by = period]
1484899329499:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899329499:.[, .(n = .N), by = .(period, send_day, send_hour)] %>%
1484899329501:.[, .(period, send_hour, share = n/sum(n)), by = period]
1484899345739:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899345739:.[, .(n = .N), by = .(period, send_hour)] %>%
1484899345740:.[, .(period, send_hour, share = n/sum(n)), by = period]
1484899376449:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899376450:.[, .(n = .N), by = .(period, send_hour)] %>%
1484899376451:.[, .(period, send_hour, share = n/sum(n)), by = period] %>%
1484899376451:ggplot(aes(x = send_hour, y = n)) +
1484899376452:geom_col()
1484899384106:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899384106:.[, .(n = .N), by = .(period, send_hour)] %>%
1484899384107:.[, .(period, send_hour, share = n/sum(n)), by = period] %>%
1484899384107:ggplot(aes(x = send_hour, y = share)) +
1484899384108:geom_col()
1484899394678:all_data[campaign_id %in% c(1108991, 603030, 603561, 609085, 613914)] %>%
1484899394678:.[, .(n = .N), by = .(period, send_hour)] %>%
1484899394679:.[, .(period, send_hour, share = n/sum(n)), by = period] %>%
1484899394679:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484899394680:geom_col()
1484900189752:all_data <- readAllData('batiwiz', 'test')
1484900225312:all_data <- readAllData('batiwiz', 'TD120')
1484900347724:all_data %>%
1484900347724:.[, .(n = .N), by = .(period, send_hour)] %>%
1484900347725:.[, campaign_index := seq(1, .N), by = .(period, campaign_id)]
1484900370476:all_data %>%
1484900370477:.[, .(n = .N), by = .(period, campaign_id, send_hour)]
1484900397500:all_data %>%
1484900397501:.[, .(n = .N), by = .(period, campaign_id, send_hour)] %>%
1484900397502:.[, campaign_index := seq(1, .N), by = .(period, campaign_id)]
1484900404405:all_data %>%
1484900404406:.[, .(n = .N), by = .(period, campaign_id, send_hour)] %>%
1484900404407:.[, campaign_index := seq(1, .N), by = .(period, campaign_id)] %>% .[]
1484900405455:.[, .(period, send_hour, share = n/sum(n)), by = period] %>%
1484900405456:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484900405457:geom_col()
1484900532822:?max()
1484900550209:max(1:30)
1484900552487:max(1:30, 5)
1484900672067:all_data %>%
1484900672067:.[, .(n = .N), by = .(period, campaign_id, send_hour)] %>%
1484900672068:.[, order(unique(campaign_id))] %>% .[]
1484900721155:last_10_campaigns <- getCampaignsForProgram('batiwiz', 'TD120')
1484900730183:last_10_campaigns
1484900751395:last_10_campaigns <- all_data[, .(period, campaign_id, send_day)] %>%
1484900751396:unique()
1484900756384:last_10_campaigns
1484900779272:last_10_campaigns[, .N, by=period]
1484900817679:last_10_campaigns <- all_data[, .(period, campaign_id, send_day)] %>%
1484900817680:unique() %>%
1484900817680:.[order(send_day), tail(.SD, 10), by = period]
1484900823234:last_10_campaigns
1484900856975:all_data %>%
1484900856975:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484900856976:.[, .(n = .N), by = .(period, send_hour)]
1484900878492:all_data %>%
1484900878493:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484900878494:.[, .(n = .N), by = .(period, send_hour)] %>%
1484900878494:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period]
1484900885807:all_data %>%
1484900885808:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484900885809:.[, .(n = .N), by = .(period, send_hour)] %>%
1484900885809:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484900885809:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484900885810:geom_col()
1484900908872:all_data %>%
1484900908873:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484900908874:.[, .(n = .N), by = .(period, send_hour)] %>%
1484900908874:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484900908874:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484900908874:geom_col(position = 'dodge')
1484900922689:all_data %>%
1484900922689:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484900922690:.[, .(n = .N), by = .(period, send_hour)] %>%
1484900922690:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484900922691:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484900922691:geom_col(position = 'identity')
1484900949297:all_data %>%
1484900949298:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484900949298:.[, .(n = .N), by = .(period, send_hour)]
1484900988597:all_data %>%
1484900988597:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id')
1484901029368:all_data %>%
1484901029368:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901029369:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901029370:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901029371:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901029371:geom_col(position = 'identity')
1484901093486:all_data %>%
1484901093487:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901093488:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901093488:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901093488:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901093489:geom_col(position = 'identity')
1484901094535:labs(y = 'number of sends', x = 'day') +
1484901094535:theme(legend.position = 'bottom') +
1484901094536:scale_fill_manual(
1484901094537:values = c('s1' = "#6984D1", 's2' = "#32D17E", 's3' = "#10A5A1")
1484901094537:)) +
1484901094537:scale_y_continuous(labels = scales::comma)
1484901130449:all_data %>%
1484901130450:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901130451:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901130451:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901130451:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901130452:geom_col(position = 'identity')
1484901131519:labs(y = 'number of sends', x = 'day') +
1484901131519:theme(legend.position = 'bottom') +
1484901131520:scale_fill_manual(values = c('past' = "#6984D1", 'sto' = "#32D17E")) +
1484901131520:scale_y_continuous(labels = scales::comma)
1484901152192:all_data %>%
1484901152193:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901152194:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901152195:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901152196:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901152197:geom_col(position = 'identity') +
1484901152197:labs(y = 'number of sends', x = 'day') +
1484901152197:theme(legend.position = 'bottom') +
1484901152198:scale_fill_manual(values = c('past' = "#6984D1", 'sto' = "#32D17E")) +
1484901152198:scale_y_continuous(labels = scales::comma)
1484901202224:all_data %>%
1484901202224:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901202225:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901202225:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901202226:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901202227:geom_col(position = 'identity') +
1484901202227:labs(y = 'share of sends', x = 'send hour') +
1484901202228:theme_bw(base_size = 14) +
1484901202228:theme(legend.position = 'bottom') +
1484901202228:scale_fill_manual(values = c('past' = "#6984D1", 'sto' = "#32D17E")) +
1484901202229:scale_y_continuous(labels = scales::percent)
1484901243991:all_data %>%
1484901243991:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901243992:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901243992:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901243993:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901243993:geom_col(position = 'identity') +
1484901243993:labs(y = 'share of sends', x = 'send hour') +
1484901243994:theme_bw(base_size = 14) +
1484901243994:theme(legend.position = 'bottom') +
1484901243994:scale_fill_manual(
1484901243995:guide = guide_legend(''),
1484901243995:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901243996:) +
1484901243997:scale_y_continuous(labels = scales::percent)
1484901292226:all_data %>%
1484901292226:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901292227:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901292228:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901292228:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901292229:geom_col(position = 'identity') +
1484901292229:labs(y = 'share of sends', x = 'send hour') +
1484901292230:theme_bw(base_size = 14) +
1484901292230:theme(legend.position = 'bottom') +
1484901292231:scale_fill_manual(
1484901292232:guide = guide_legend(''),
1484901292233:labels = c('before', 'after'),
1484901292234:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901292234:) +
1484901292235:scale_y_continuous(labels = scales::percent)
1484901309513:all_data %>%
1484901309514:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901309515:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901309516:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901309516:ggplot(aes(x = send_hour, y = share, fill = period), alpha = 0.5) +
1484901309517:geom_col(position = 'identity') +
1484901309518:labs(y = 'share of sends', x = 'send hour') +
1484901309519:theme_bw(base_size = 14) +
1484901309519:theme(legend.position = 'bottom') +
1484901309519:scale_fill_manual(
1484901309520:guide = guide_legend(''),
1484901309520:labels = c('before', 'after'),
1484901309521:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901309521:) +
1484901309522:scale_y_continuous(labels = scales::percent)
1484901325144:all_data %>%
1484901325145:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901325145:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901325146:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901325146:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901325146:geom_col(position = 'identity', alpha = 0.5) +
1484901325147:labs(y = 'share of sends', x = 'send hour') +
1484901325147:theme_bw(base_size = 14) +
1484901325147:theme(legend.position = 'bottom') +
1484901325148:scale_fill_manual(
1484901325148:guide = guide_legend(''),
1484901325149:labels = c('before', 'after'),
1484901325150:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901325151:) +
1484901325152:scale_y_continuous(labels = scales::percent)
1484901421953:all_data %>%
1484901421954:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901421955:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901421956:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901421957:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901421957:geom_col(position = position_dodge(width = 0.5), alpha = 0.5) +
1484901421957:labs(y = 'share of sends', x = 'send hour') +
1484901421958:theme_bw(base_size = 14) +
1484901421958:theme(legend.position = 'bottom') +
1484901421959:scale_fill_manual(
1484901421959:guide = guide_legend(''),
1484901421959:labels = c('before', 'after'),
1484901421960:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901421960:) +
1484901421961:scale_y_continuous(labels = scales::percent)
1484901476279:all_data %>%
1484901476279:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901476280:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901476281:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901476281:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901476281:geom_col() +
1484901476282:facet_wrap(~ period) +
1484901476282:labs(y = 'share of sends', x = 'send hour') +
1484901476282:theme_bw(base_size = 14) +
1484901476283:theme(legend.position = 'bottom') +
1484901476283:scale_fill_manual(
1484901476283:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901476284:) +
1484901476284:scale_y_continuous(labels = scales::percent)
1484901489628:all_data %>%
1484901489628:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901489629:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901489630:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901489630:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901489630:geom_col() +
1484901489631:facet_wrap(~ period) +
1484901489631:labs(y = 'share of sends', x = 'send hour') +
1484901489631:theme_bw(base_size = 14) +
1484901489632:theme(legend.position = 'bottom') +
1484901489632:scale_fill_manual(
1484901489632:guide = guide_legend(''),
1484901489633:labels = c('before', 'after'),
1484901489633:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901489634:) +
1484901489634:scale_y_continuous(labels = scales::percent)
1484901502241:all_data %>%
1484901502243:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901502243:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901502244:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901502244:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901502244:geom_col() +
1484901502245:facet_wrap(~ period, ncol = 1) +
1484901502245:labs(y = 'share of sends', x = 'send hour') +
1484901502245:theme_bw(base_size = 14) +
1484901502246:theme(legend.position = 'bottom') +
1484901502246:scale_fill_manual(
1484901502246:guide = guide_legend(''),
1484901502247:labels = c('before', 'after'),
1484901502247:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901502248:) +
1484901502248:scale_y_continuous(labels = scales::percent)
1484901577083:all_data %>%
1484901577084:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901577084:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901577085:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901577085:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901577085:geom_col() +
1484901577086:facet_wrap(~ period, ncol = 1) +
1484901577086:labs(y = 'share of sends', x = 'send hour') +
1484901577086:theme_bw(base_size = 14) +
1484901577087:theme(
1484901577087:legend.position = 'bottom',
1484901577087:strip.background = element_blank(),
1484901577088:strip.text.x = element_blank()
1484901577088:) +
1484901577089:scale_fill_manual(
1484901577089:guide = guide_legend(''),
1484901577089:labels = c('before', 'after'),
1484901577090:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901577090:) +
1484901577090:scale_y_continuous(labels = scales::percent)
1484901597429:all_data %>%
1484901597429:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901597430:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901597430:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901597431:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901597431:geom_col() +
1484901597431:facet_wrap(~ period, ncol = 1) +
1484901597432:labs(y = 'share of sends', x = 'send hour') +
1484901597432:theme_bw(base_size = 14) +
1484901597432:theme(
1484901597433:legend.position = 'bottom',
1484901597433:strip.background = element_blank(),
1484901597433:strip.text.x = element_blank()
1484901597434:) +
1484901597434:scale_fill_manual(
1484901597435:guide = guide_legend(''),
1484901597435:labels = c('before', 'after'),
1484901597436:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901597436:) +
1484901597436:scale_y_continuous(labels = scales::percent) +
1484901597437:scale_x_continuous(breaks = seq(0, 22, 2))
1484901648724:all_data %>%
1484901648724:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901648725:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901648726:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901648726:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901648726:geom_col() +
1484901648727:facet_wrap(~ period, ncol = 1) +
1484901648727:scale_y_continuous(labels = scales::percent) +
1484901648727:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901648728:labs(y = 'share of sends', x = 'send hour') +
1484901648728:theme_bw(base_size = 14) +
1484901648728:theme(
1484901648729:legend.position = 'bottom',
1484901648730:strip.background = element_blank(),
1484901648731:strip.text.x = element_blank()
1484901648731:) +
1484901648732:scale_fill_manual(
1484901648732:guide = guide_legend(''),
1484901648732:labels = c('before', 'after'),
1484901648733:values = c('past' = "#32D17E", 'sto' = "#6984D1")
1484901648733:)
1484901660135:all_data %>%
1484901660136:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901660137:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901660137:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901660137:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901660138:geom_col() +
1484901660138:facet_wrap(~ period, ncol = 1) +
1484901660139:scale_y_continuous(labels = scales::percent) +
1484901660139:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901660139:labs(y = 'share of sends', x = 'send hour') +
1484901660140:theme_bw(base_size = 14) +
1484901660140:theme(
1484901660140:legend.position = 'bottom',
1484901660141:strip.background = element_blank(),
1484901660141:strip.text.x = element_blank()
1484901660141:) +
1484901660142:scale_fill_manual(
1484901660142:guide = guide_legend(''),
1484901660142:labels = c('before', 'after'),
1484901660143:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901660143:)
1484901705043:all_data %>%
1484901705044:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901705044:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901705045:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901705045:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901705045:geom_col() +
1484901705046:facet_wrap(~ period, ncol = 1) +
1484901705046:scale_y_continuous(labels = scales::percent) +
1484901705046:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901705047:labs(y = 'share of sends', x = 'send hour') +
1484901705047:theme_bw(base_size = 14) +
1484901705048:theme(
1484901705049:legend.position = 'bottom',
1484901705050:strip.background = element_blank(),
1484901705050:sstrip.text.x = element_blank(),
1484901705051:text = element_text(family = 'Canaro Medium')
1484901705052:) +
1484901705052:scale_fill_manual(
1484901705052:guide = guide_legend(''),
1484901705053:labels = c('before', 'after'),
1484901705053:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901705054:)
1484901713178:all_data %>%
1484901713179:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901713180:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901713180:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901713180:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901713181:geom_col() +
1484901713181:facet_wrap(~ period, ncol = 1) +
1484901713182:scale_y_continuous(labels = scales::percent) +
1484901713183:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901713183:labs(y = 'share of sends', x = 'send hour') +
1484901713184:theme_bw(base_size = 14) +
1484901713185:theme(
1484901713186:legend.position = 'bottom',
1484901713186:strip.background = element_blank(),
1484901713186:strip.text.x = element_blank(),
1484901713187:text = element_text(family = 'Canaro Medium')
1484901713187:) +
1484901713188:scale_fill_manual(
1484901713188:guide = guide_legend(''),
1484901713188:labels = c('before', 'after'),
1484901713189:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901713190:)
1484901767270:all_data %>%
1484901767270:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901767271:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901767271:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901767271:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901767272:geom_col() +
1484901767272:facet_wrap(~ period, ncol = 1) +
1484901767272:scale_y_continuous(labels = scales::percent) +
1484901767273:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901767273:labs(y = 'share of sends', x = 'send hour') +
1484901767273:theme_bw(base_size = 14) +
1484901767274:theme(
1484901767274:legend.position = 'bottom',
1484901767274:text = element_text(family = 'Canaro Medium')
1484901767275:) +
1484901767275:scale_fill_manual(
1484901767276:guide = FALSE
1484901767276:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901767276:)
1484901773131:all_data %>%
1484901773131:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901773132:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901773133:.[, .(period, send_hour = floor(send_hour/2)*2, share = n/sum(n)), by = period] %>%
1484901773133:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901773134:geom_col() +
1484901773135:facet_wrap(~ period, ncol = 1) +
1484901773136:scale_y_continuous(labels = scales::percent) +
1484901773137:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901773138:labs(y = 'share of sends', x = 'send hour') +
1484901773138:theme_bw(base_size = 14) +
1484901773139:theme(
1484901773139:legend.position = 'bottom',
1484901773139:text = element_text(family = 'Canaro Medium')
1484901773140:) +
1484901773140:scale_fill_manual(
1484901773141:guide = FALSE,
1484901773141:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901773142:)
1484901814167:all_data %>%
1484901814168:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901814169:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901814169:.[, .(
1484901814170:period = ifelse(period == 'past', 'before', 'after'),
1484901814171:send_hour = floor(send_hour/2)*2,
1484901814172:share = n/sum(n)
1484901814172:), by = period
1484901814173:] %>%
1484901814173:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484901814174:geom_col() +
1484901814174:facet_wrap(~ period, ncol = 1) +
1484901814175:scale_y_continuous(labels = scales::percent) +
1484901814175:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901814175:labs(y = 'share of sends', x = 'send hour') +
1484901814176:theme_bw(base_size = 14) +
1484901814176:theme(
1484901814177:legend.position = 'bottom',
1484901814177:text = element_text(family = 'Canaro Medium')
1484901814178:) +
1484901814178:scale_fill_manual(
1484901814178:guide = FALSE,
1484901814179:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901814180:)
1484901824821:all_data %>%
1484901824821:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901824822:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901824822:.[, .(
1484901824823:period = ifelse(period == 'past', 'before', 'after'),
1484901824823:send_hour = floor(send_hour/2)*2,
1484901824823:share = n/sum(n)
1484901824824:), by = period
1484901824824:]
1484901868217:all_data %>%
1484901868218:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901868218:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901868219:.[, .(
1484901868219:before_after = ifelse(period == 'past', 'before', 'after'),
1484901868219:send_hour = floor(send_hour/2)*2,
1484901868220:share = n/sum(n)
1484901868220:), by = period
1484901868220:] %>%
1484901868221:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484901868221:geom_col() +
1484901868222:facet_wrap(~ before_after, ncol = 1) +
1484901868223:scale_y_continuous(labels = scales::percent) +
1484901868223:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901868224:labs(y = 'share of sends', x = 'send hour') +
1484901868225:theme_bw(base_size = 14) +
1484901868226:theme(
1484901868226:legend.position = 'bottom',
1484901868227:text = element_text(family = 'Canaro Medium')
1484901868227:) +
1484901868228:scale_fill_manual(
1484901868229:guide = FALSE,
1484901868230:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901868230:)
1484901894585:all_data %>%
1484901894586:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901894587:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901894587:.[, .(
1484901894587:before_after = ifelse(period == 'past', 'Before', 'After'),
1484901894588:send_hour = floor(send_hour/2)*2,
1484901894588:share = n/sum(n)
1484901894588:), by = period
1484901894589:] %>%
1484901894590:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484901894591:geom_col() +
1484901894591:facet_wrap(~ before_after, ncol = 1) +
1484901894592:scale_y_continuous(labels = scales::percent) +
1484901894593:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901894594:labs(y = 'Share of sends', x = 'Send hour') +
1484901894594:theme_bw(base_size = 14) +
1484901894595:theme(
1484901894595:legend.position = 'bottom',
1484901894596:text = element_text(family = 'Canaro Medium')
1484901894597:) +
1484901894597:scale_fill_manual(
1484901894598:guide = FALSE,
1484901894599:values = c('past' = "#6984D1", 'sto' = "#32D17E")
1484901894600:)
1484901901738:all_data %>%
1484901901739:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901901740:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901901741:.[, .(
1484901901741:before_after = ifelse(period == 'past', 'Before', 'After'),
1484901901742:send_hour = floor(send_hour/2)*2,
1484901901743:share = n/sum(n)
1484901901743:), by = period
1484901901744:]
1484901921545:all_data %>%
1484901921545:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901921546:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901921547:.[, .(
1484901921547:before_after = ifelse(period == 'past', 'Before', 'After'),
1484901921547:send_hour = floor(send_hour/2)*2,
1484901921548:share = n/sum(n)
1484901921548:), by = period
1484901921548:] %>%
1484901921549:ggplot(aes(x = send_hour, y = share, fill = before_after))
1484901969155:all_data %>%
1484901969155:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901969156:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901969156:.[, .(
1484901969156:send_hour = floor(send_hour/2)*2,
1484901969157:share = n/sum(n)
1484901969157:), by = period
1484901969158:] %>%
1484901969158:.[, period := ifelse(period == 'past', 'Before', 'After')]
1484901996149:all_data %>%
1484901996150:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484901996151:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484901996151:.[, .(
1484901996151:before_after = ifelse(period == 'past', 'Before', 'After'),
1484901996152:send_hour = floor(send_hour/2)*2,
1484901996152:share = n/sum(n)
1484901996152:), by = period
1484901996153:] %>%
1484901996153:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484901996153:geom_col() +
1484901996154:facet_wrap(~ before_after, ncol = 1) +
1484901996154:scale_y_continuous(labels = scales::percent) +
1484901996154:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484901996155:labs(y = 'Share of sends', x = 'Send hour') +
1484901996155:theme_bw(base_size = 14) +
1484901996155:theme(
1484901996156:legend.position = 'bottom',
1484901996156:text = element_text(family = 'Canaro Medium')
1484901996157:) +
1484901996157:scale_fill_manual(
1484901996157:guide = FALSE,
1484901996158:values = c('before' = "#6984D1", 'after' = "#32D17E")
1484901996158:)
1484902014127:all_data %>%
1484902014127:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902014129:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902014129:.[, .(
1484902014130:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902014130:send_hour = floor(send_hour/2)*2,
1484902014131:share = n/sum(n)
1484902014132:), by = period
1484902014132:]
1484902028339:all_data %>%
1484902028340:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902028341:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902028341:.[, .(
1484902028341:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902028342:send_hour = floor(send_hour/2)*2,
1484902028342:share = n/sum(n)
1484902028342:), by = period
1484902028343:] %>%
1484902028343:ggplot(aes(x = send_hour, y = share, fill = before_after))
1484902034638:all_data %>%
1484902034639:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902034640:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902034640:.[, .(
1484902034640:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902034641:send_hour = floor(send_hour/2)*2,
1484902034641:share = n/sum(n)
1484902034641:), by = period
1484902034641:] %>%
1484902034642:ggplot(aes(x = send_hour, y = share, fill = period))
1484902049830:all_data %>%
1484902049830:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902049831:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902049832:.[, .(
1484902049832:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902049833:send_hour = floor(send_hour/2)*2,
1484902049833:share = n/sum(n)
1484902049833:), by = period
1484902049833:] %>%
1484902049834:ggplot(aes(x = send_hour, y = share))
1484902057327:all_data %>%
1484902057328:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902057329:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902057329:.[, .(
1484902057331:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902057332:send_hour = floor(send_hour/2)*2,
1484902057333:share = n/sum(n)
1484902057333:), by = period
1484902057334:]
1484902106570:all_data %>%
1484902106570:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902106571:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902106572:.[, .(
1484902106572:send_hour = floor(send_hour/2)*2,
1484902106572:share = n/sum(n)
1484902106573:), by = period
1484902106573:] %>%
1484902106573:.[, period := ifelse(period == 'past', 'Before', 'After')] %>%
1484902106574:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484902106574:geom_col() +
1484902106574:facet_wrap(~ period, ncol = 1) +
1484902106575:scale_y_continuous(labels = scales::percent) +
1484902106575:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484902106575:labs(y = 'Share of sends', x = 'Send hour') +
1484902106576:theme_bw(base_size = 14) +
1484902106576:theme(
1484902106576:legend.position = 'bottom',
1484902106577:text = element_text(family = 'Canaro Medium')
1484902106577:) +
1484902106577:scale_fill_manual(
1484902106578:guide = FALSE,
1484902106578:values = c('before' = "#6984D1", 'after' = "#32D17E")
1484902106579:)
1484902118362:all_data %>%
1484902118363:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902118364:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902118364:.[, .(
1484902118364:send_hour = floor(send_hour/2)*2,
1484902118365:share = n/sum(n)
1484902118365:), by = period
1484902118366:] %>%
1484902118366:.[, period := ifelse(period == 'past', 'Before', 'After')] %>% .[]
1484902132376:all_data %>%
1484902132376:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902132377:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902132377:.[, .(
1484902132377:send_hour = floor(send_hour/2)*2,
1484902132378:share = n/sum(n)
1484902132378:), by = period
1484902132378:] %>%
1484902132379:.[, period := ifelse(period == 'past', 'Before', 'After')] %>% .[] %>%
1484902132379:ggplot(aes(x = send_hour, y = share, fill = period))
1484902155113:all_data %>%
1484902155114:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902155115:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902155115:.[, .(
1484902155115:send_hour = floor(send_hour/2)*2,
1484902155115:share = n/sum(n)
1484902155116:), by = period
1484902155116:] %>%
1484902155117:# .[, period := ifelse(period == 'past', 'Before', 'After')] %>% .[] %>%
1484902155117:ggplot(aes(x = send_hour, y = share, fill = period))
1484902184059:all_data %>%
1484902184059:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902184060:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902184061:.[, .(
1484902184061:send_hour = floor(send_hour/2)*2,
1484902184061:share = n/sum(n)
1484902184061:), by = period
1484902184062:] %>%
1484902184062:.[, period := ifelse(period == 'past', 'Before', 'After')] %>%
1484902184062:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484902184063:geom_col()
1484902190196:all_data %>%
1484902190197:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902190198:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902190198:.[, .(
1484902190198:send_hour = floor(send_hour/2)*2,
1484902190199:share = n/sum(n)
1484902190199:), by = period
1484902190199:] %>%
1484902190199:.[, period := ifelse(period == 'past', 'Before', 'After')] %>%
1484902190200:ggplot(aes(x = send_hour, y = share, fill = period)) +
1484902190200:geom_col() +
1484902190201:facet_wrap(~ period, ncol = 1) +
1484902190201:scale_y_continuous(labels = scales::percent) +
1484902190201:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484902190202:labs(y = 'Share of sends', x = 'Send hour') +
1484902190203:theme_bw(base_size = 14) +
1484902190204:theme(
1484902190205:legend.position = 'bottom',
1484902190206:text = element_text(family = 'Canaro Medium')
1484902190206:) +
1484902190207:scale_fill_manual(
1484902190207:guide = FALSE,
1484902190208:values = c('before' = "#6984D1", 'after' = "#32D17E")
1484902190209:)
1484902211741:all_data %>%
1484902211741:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902211742:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902211742:.[, .(
1484902211743:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902211743:send_hour = floor(send_hour/2)*2,
1484902211743:share = n/sum(n)
1484902211744:), by = period
1484902211744:] %>%
1484902211744:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484902211745:geom_col()
1484902228589:all_data %>%
1484902228590:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902228591:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902228591:.[, .(
1484902228591:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902228592:send_hour = floor(send_hour/2)*2,
1484902228592:share = n/sum(n)
1484902228592:), by = period
1484902228593:] %>%
1484902228593:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484902228593:geom_col() +
1484902228594:facet_wrap(~ before_after, ncol = 1) +
1484902228594:scale_y_continuous(labels = scales::percent) +
1484902228595:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484902228595:labs(y = 'Share of sends', x = 'Send hour') +
1484902228595:theme_bw(base_size = 14) +
1484902228596:theme(
1484902228596:legend.position = 'bottom',
1484902228597:text = element_text(family = 'Canaro Medium')
1484902228597:) +
1484902228597:scale_fill_manual(
1484902228598:guide = FALSE,
1484902228598:values = c('Before' = "#6984D1", 'After' = "#32D17E")
1484902228599:)
1484902266999:ggsave('figure/webinar/send_time_distribution.png')
1484902319482:all_data %>%
1484902319483:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902319484:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902319484:.[, .(
1484902319484:before_after = ifelse(period == 'past', 'Before', 'After'),
1484902319485:send_hour = floor(send_hour/2)*2,
1484902319485:share = n/sum(n)
1484902319485:), by = period
1484902319486:] %>%
1484902319486:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484902319486:geom_col() +
1484902319487:facet_wrap(~ before_after, ncol = 1, scales = 'free_y') +
1484902319487:scale_y_continuous(labels = scales::percent) +
1484902319488:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484902319488:labs(y = 'Share of sends', x = 'Send hour') +
1484902319488:theme_bw(base_size = 14) +
1484902319489:theme(
1484902319489:legend.position = 'bottom',
1484902319490:text = element_text(family = 'Canaro Medium')
1484902319491:) +
1484902319492:scale_fill_manual(
1484902319493:guide = FALSE,
1484902319494:values = c('Before' = "#6984D1", 'After' = "#32D17E")
1484902319494:)
1484902417371:?ordered
1484902438080:all_data %>%
1484902438080:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902438081:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902438081:.[, .(
1484902438082:before_after = ordered(ifelse(period == 'past', 'Before', 'After'), levels = c('Before', 'After')),
1484902438082:send_hour = floor(send_hour/2)*2,
1484902438082:share = n/sum(n)
1484902438083:), by = period
1484902438083:] %>%
1484902438083:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484902438084:geom_col() +
1484902438084:facet_wrap(~ before_after, ncol = 1, scales = 'free_y') +
1484902438084:scale_y_continuous(labels = scales::percent) +
1484902438085:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484902438085:labs(y = 'Share of sends', x = 'Send hour') +
1484902438085:theme_bw(base_size = 14) +
1484902438086:theme(
1484902438086:legend.position = 'bottom',
1484902438087:text = element_text(family = 'Canaro Medium')
1484902438087:) +
1484902438087:scale_fill_manual(
1484902438088:guide = FALSE,
1484902438088:values = c('Before' = "#6984D1", 'After' = "#32D17E")
1484902438089:)
1484902482313:all_data %>%
1484902482313:merge(last_10_campaigns[, .(campaign_id)], by = 'campaign_id') %>%
1484902482314:.[segment == 'sto', .(n = .N), by = .(period, send_hour)] %>%
1484902482315:.[, .(
1484902482316:before_after = ordered(ifelse(period == 'past', 'Before', 'After'), levels = c('Before', 'After')),
1484902482317:send_hour = floor(send_hour/2)*2,
1484902482318:share = n/sum(n)
1484902482318:), by = period
1484902482319:] %>%
1484902482319:ggplot(aes(x = send_hour, y = share, fill = before_after)) +
1484902482319:geom_col() +
1484902482320:facet_wrap(~ before_after, nrow = 1, scales = 'free_y') +
1484902482320:scale_y_continuous(labels = scales::percent) +
1484902482320:scale_x_continuous(breaks = seq(0, 22, 2)) +
1484902482321:labs(y = 'Share of sends', x = 'Send hour') +
1484902482321:theme_bw(base_size = 14) +
1484902482322:theme(
1484902482322:legend.position = 'bottom',
1484902482323:text = element_text(family = 'Canaro Medium')
1484902482324:) +
1484902482325:scale_fill_manual(
1484902482325:guide = FALSE,
1484902482326:values = c('Before' = "#6984D1", 'After' = "#32D17E")
1484902482326:)
1484902532642:ggsave('figure/webinar/send_time_distribution.png', width = 8, height = 6)
1484902581353:ggsave('figure/webinar/send_time_distribution.png', width = 10.67, height = 6)
1484903280879:customer <- 'lesara'
1484903281476:program <- 'NL_male'
1484903297578:refetch <- TRUE
1484903303745:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484903351648:getCampaignsForProgram(customer, program, refetch = refetch)
1484905519381:customer <- 'lesara'
1484905519871:program <- 'NL_male'
1484905524456:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484905537756:campaigns <- getCampaignsForProgram(customer, program, refetch = refetch) %>%
1484905537756:convertSendDayToDate()
1484905568135:getCampaignsForProgram(customer, program, refetch = refetch)
1484905584309:program_properties <- SETTINGS[[customer]]$programs[[program]]
1484905588400:program_properties
1484905615418:source('global.R')
1484905617474:program_properties <- SETTINGS[[customer]]$programs[[program]]
1484905619458:program_properties
1484905629614:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484905649250:program_data
1484905654382:program_data[, .N, by = campaign_id]
1484905729525:program_data[, .N, by = .(campaign_id, send_day, segment)]
1484906161128:source('global.R')
1484906188274:getCampaignsForProgram('lesra', 'test')
1484906291832:unique_contacts <- unique(program_data[, .(segment, contact_id)])
1484906293127:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484906294090:common_contacts <- program_data[, .N, by = .(segment, contact_id)] %>%
1484906294091:.[N == n_campaigns, .(segment, contact_id)]
1484906295281:reportStatistics(
1484906295282:customer, program_data,
1484906295283:unique_contacts, common_contacts,
1484906295283:check_pairwise_common = FALSE
1484906295283:)
1484906309919:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484906310219:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484906310524:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484906310962:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484906349313:contactlist <- unique_contactlist
1484906354382:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484906354383:merge(contactlist, by = c('contact_id', 'segment'))
1484906499088:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484906500350:n_past_campaigns %>% ggplot(aes(x = N)) +
1484906500350:geom_histogram(binwidth = 5) +
1484906500352:scale_x_continuous(breaks = seq(0,90,5))
1484906518817:past_campaign_num_limit <- quantile(n_past_campaigns$N, 0.1)
1484906561373:group_by <- NULL
1484906563317:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484906563317:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484906611573:contactlist <- first_contactlist
1484906617662:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484906617662:merge(contactlist, by = c('contact_id', 'segment'))
1484906625462:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484906626367:n_past_campaigns %>% ggplot(aes(x = N)) +
1484906626368:geom_histogram(binwidth = 5) +
1484906626369:scale_x_continuous(breaks = seq(0,90,5))
1484906632696:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484906632699:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484906638257:all_data %>% getRecipientShareForContactlist(contactlist) %>%
1484906638258:plotEvolution(measure = 'recipient_share', se = FALSE)
1484906667305:all_data %>% getRecipientShareForContactlist(contactlist, unique = TRUE) %>%
1484906667305:plotEvolution(measure = 'recipient_share', se = FALSE)
1484906745920:all_data[period == 'sto', min(send_day)]
1484906766099:all_data[period == 'sto' & segment == 'sto', min(send_day)]
1484906834328:min(program_data$send_day)
1484906983815:getListOfFirstSTOReceivers <- function(program_data) {
1484906983816:start_date <- min(program_data$send_day)
1484906983816:program_data %>%
1484906983817:.[send_day == start_date, .(contact_id, segment)] %>%
1484906983817:unique()
1484906983817:}
1484906983818:getListOfLastSTOReceivers <- function(program_data) {
1484906983818:end_date <- max(program_data$send_day)
1484906983819:program_data %>%
1484906983819:.[send_day == end_date, .(contact_id, segment)] %>%
1484906983819:unique()
1484906983820:}
1484906990005:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484906990730:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484906992380:contactlist <- first_contactlist
1484906993478:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484906993479:merge(contactlist, by = c('contact_id', 'segment'))
1484907005965:all_data <- readAllData(customer, program)
1484907009545:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484907009546:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484907013143:all_data %>% getRecipientShareForContactlist(contactlist) %>%
1484907013144:plotEvolution(measure = 'recipient_share', se = FALSE)
1484907014384:all_data %>% getRecipientShareForContactlist(contactlist, unique = TRUE) %>%
1484907014384:plotEvolution(measure = 'recipient_share', se = FALSE)
1484907044348:plotSendTimeDistributionEvolution(all_data[period == 'sto' & segment == 'sto'])
1484907076659:campaign_summary <- calculateCampaignSummary(all_data)
1484907079611:measure <- 'open_rate'
1484907081155:campaign_summary %>%
1484907081156:smoothMeasureWithWindow(measure, window_size = 1) %>%
1484907081157:plotEvolution(measure = measure) +
1484907081157:scale_y_continuous(labels = scales::percent_format())
1484907130156:generateRelativeData(campaign_summary, measure = measure) %>%
1484907130157:plotRelativeEvolution(
1484907130158:trendlines = F, measure = measure, color = group_by, text_position = 0.9
1484907130159:) +
1484907130159:coord_cartesian(ylim = c(0.9, 1.2))
1484907176589:contactlist <- unique_contactlist
1484907178000:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484907178001:merge(contactlist, by = c('contact_id', 'segment'))
1484907185815:generateRelativeData(campaign_summary, measure = measure) %>%
1484907185816:plotRelativeEvolution(
1484907185817:trendlines = F, measure = measure, color = group_by, text_position = 0.9
1484907185817:) +
1484907185817:coord_cartesian(ylim = c(0.9, 1.2))
1484907214414:campaign_summary <- calculateCampaignSummary(all_data)
1484907219386:generateRelativeData(campaign_summary, measure = measure) %>%
1484907219386:plotRelativeEvolution(
1484907219387:trendlines = F, measure = measure, color = group_by, text_position = 0.9
1484907219388:) +
1484907219389:coord_cartesian(ylim = c(0.9, 1.2))
1484907239119:campaign_summary
1484907254884:campaign_summary[period == 'sto', .(campaign_id, open_rate)]
1484907260138:campaign_summary[period == 'sto', .(send_day, open_rate)]
1484907267382:campaign_summary[period == 'sto', .(send_day, segment, open_rate)]
1484907319186:names(campaign_summary)
1484907537642:head(all_data)
1484907592648:all_data[, .N, by = period]
1484907600485:all_data[period == "sto"]
1484908129692:all_data[period == "sto"][, .(sum(opened) / (.N - sum(bounced)))]
1484908363982:paste0(c("NL", "FR"), c("male", "female"))
1484908740881:if (customer == 'batiwiz') {
1484908740881:# append new programs
1484908740882:na_program_data <- getCampaignDataForCustomer(customer, 'NA-TD120', refetch = refetch)
1484908740883:a_program_data <- getCampaignDataForCustomer(customer, 'A-TD120', refetch = refetch)
1484908740883:common_dates <- as.Date(
1484908740883:intersect(
1484908740883:unique(a_program_data$send_day),
1484908740884:unique(na_program_data$send_day))
1484908740884:, origin = '1970-01-01'
1484908740884:)
1484908740885:a_filtered <- a_program_data[send_day %in% common_dates]
1484908740885:na_filtered <- na_program_data[send_day %in% common_dates]
1484908740886:program_data <- rbindlist(list(program_data, na_filtered, a_filtered))
1484908740886:} else if (customer == "lesara") {
1484908740887:vec_all_programs <- c("NL_male", "NL_female", "FR_male", "FR_female")
1484908740888:program_data <- map(
1484908740889:vec_all_programs,
1484908740890:~{ getCampaignDataForCustomer(customer, ., refetch = refetch)}
1484908740890:) %>% rbindlist()
1484908740891:}
1484909157377:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484909158277:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484909159144:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484909160224:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484909172636:contactlist <- first_contactlist
1484909179969:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484909179970:merge(contactlist, by = c('contact_id', 'segment'))
1484909395475:program <- 'FR_male'
1484909401596:program <- 'FR_female'
1484909404097:refetch <- TRUE
1484909404824:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484909496815:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484909497432:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484909497843:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484909498622:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484909499725:contactlist <- first_contactlist
1484909500121:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484909500122:merge(contactlist, by = c('contact_id', 'segment'))
1484909622222:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484909622223:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484909636966:all_data %>% getRecipientShareForContactlist(contactlist) %>%
1484909636968:plotEvolution(measure = 'recipient_share', se = FALSE)
1484909650781:all_data %>% getRecipientShareForContactlist(contactlist, unique = TRUE) %>%
1484909650782:plotEvolution(measure = 'recipient_share', se = FALSE)
1484909666308:if (FALSE) {
1484909666309:segments <- unique(all_data[, segment]) %>%
1484909666310:ifelse('control' %in% ., c(., 'both'), .)
1484909666311:pw_common_contacts <- sapply(
1484909666311:c('sto', 'control', 'both'),
1484909666312:function(s) {
1484909666313:getCommonContactMatrix(all_data[period == 'sto'], s, order_by_weekday = F)
1484909666314:},
1484909666314:simplify = FALSE
1484909666315:)
1484909666315:plotHeatmapOfCommonContacts(pw_common_contacts$sto)
1484909666316:plotHeatmapOfCommonContacts(pw_common_contacts$control)
1484909666317:plotHeatmapOfCommonContacts(pw_common_contacts$both)
1484909666317:}
1484909670488:plotSendTimeDistributionEvolution(all_data[period == 'sto' & segment == 'sto'])
1484909686564:plotSendTimeDistributionEvolution(program_data)
1484909693319:plotSendTimeDistributionEvolution(program_data, position = 'fill')
1484909704184:campaign_summary <- calculateCampaignSummary(all_data)
1484909706369:if (customer == 'luisaviaroma') {
1484909706370:campaign_summary <- calculateCampaignSummary(all_data, campaign_condition = 'n > 5000')
1484909706371:}
1484909709343:measure <- 'open_rate'
1484909716524:campaign_summary %>%
1484909716524:smoothMeasureWithWindow(measure, window_size = 1) %>%
1484909716525:plotEvolution(measure = measure) +
1484909716525:scale_y_continuous(labels = scales::percent_format())
1484909727331:campaign_summary %>%
1484909727331:smoothMeasureWithWindow(measure, window_size = 1) %>%
1484909727332:plotEvolution(measure = measure, smooth = TRUE) +
1484909727332:scale_y_continuous(labels = scales::percent_format())
1484909746911:generateRelativeData(campaign_summary, measure = measure) %>%
1484909746911:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484910002238:reportStatistics(
1484910002238:customer, program_data,
1484910002239:unique_contacts, common_contacts,
1484910002239:check_pairwise_common = FALSE
1484910002240:)
1484910073539:View(unique_contacts)
1484910085251:rm("unique_contacts")
1484910097294:rm("common_contacts")
1484910105583:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484910106056:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484910106490:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484910106490:.[N == n_campaigns, .(segment, contact_id)]
1484910107075:reportStatistics(
1484910107076:customer, program_data,
1484910107077:unique_contactlist, common_contactlist,
1484910107077:check_pairwise_common = FALSE
1484910107077:)
1484910156788:contactlist <- common_contactlist
1484910161771:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484910161772:merge(contactlist, by = c('contact_id', 'segment'))
1484910222116:campaign_summary <- calculateCampaignSummary(all_data)
1484910227263:measure <- 'open_rate'
1484910230856:campaign_summary %>%
1484910230856:smoothMeasureWithWindow(measure, window_size = 1) %>%
1484910230857:plotEvolution(measure = measure) +
1484910230857:scale_y_continuous(labels = scales::percent_format())
1484910242192:generateRelativeData(campaign_summary, measure = measure) %>%
1484910242192:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484910285496:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484910285496:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484910290832:all_data %>% getRecipientShareForContactlist(contactlist) %>%
1484910290833:plotEvolution(measure = 'recipient_share', se = FALSE)
1484910293506:all_data %>% getRecipientShareForContactlist(contactlist, unique = TRUE) %>%
1484910293507:plotEvolution(measure = 'recipient_share', se = FALSE)
1484910308312:measure <- 'click_rate'
1484910314755:generateRelativeData(campaign_summary, measure = measure) %>%
1484910314755:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484910345004:calculateMedianDistance(all_data) %>% plotMedianHoursToOpen(prior_change_dates = FALSE)
1484910358564:calculateMedianDistance(all_data) %>%
1484910358564:generateRelativeData(measure = 'median_hours_to_open') %>%
1484910358565:plotRelativeEvolution(trendlines = F, measure = 'median send-open distance (hours)', color = 'weekday')
1484910421109:calculateMedianDistance(all_data) %>%
1484910421111:generateRelativeData(measure = 'median_hours_to_open') %>%
1484910421111:plotRelativeEvolution(trendlines = F, measure = 'median send-open distance (hours)')
1484914765984:customer <- 'lesara'
1484914766448:program <- 'NL_female'
1484914772210:refetch <- F
1484914772786:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484914778349:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484914778763:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484914779124:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484914779124:.[N == n_campaigns, .(segment, contact_id)]
1484914779530:reportStatistics(
1484914779531:customer, program_data,
1484914779532:unique_contactlist, common_contactlist,
1484914779532:check_pairwise_common = FALSE
1484914779532:)
1484914781520:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484914781797:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484914782116:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484914783632:contactlist <- common_contactlist
1484914789402:contactlist <- first_contactlist
1484914792439:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484914792439:merge(contactlist, by = c('contact_id', 'segment'))
1484914956007:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484914956008:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484914962731:all_data %>% getRecipientShareForContactlist(contactlist, unique = TRUE) %>%
1484914962731:plotEvolution(measure = 'recipient_share', se = FALSE)
1484914977252:campaign_summary <- calculateCampaignSummary(all_data)
1484914983752:generateRelativeData(campaign_summary, measure = measure) %>%
1484914983753:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484915164896:campaign_summary
1484915173735:all_data[, mean(bounced)]
1484915184808:all_data[, mean(bounced), by= segment]
1484915191211:all_data[period == 'sto', mean(bounced), by= segment]
1484915215436:calculateActivitySummary <- function(dt, by, initial_n_hours = Inf) {
1484915215436:dt[bounced == FALSE
1484915215437:,
1484915215438:.(
1484915215438:open_rate = mean(opened & hours_to_open <= initial_n_hours),
1484915215438:open_rate_sd = sd(opened & hours_to_open <= initial_n_hours),
1484915215439:num_open = sum(opened & hours_to_open <= initial_n_hours),
1484915215439:click_rate = mean(clicked & hours_to_click <= initial_n_hours),
1484915215439:click_rate_sd = sd(clicked & hours_to_click <= initial_n_hours),
1484915215440:num_click = sum(clicked & hours_to_open <= initial_n_hours),
1484915215440:click_to_open_rate = sum(clicked & hours_to_click <= initial_n_hours)/sum(opened & hours_to_open <= initial_n_hours),
1484915215441:n = .N
1484915215441:),
1484915215441:by = by
1484915215442:]
1484915215442:}
1484915224353:campaign_summary <- calculateCampaignSummary(all_data)
1484915228995:campaign_summary
1484915230643:campaign_summary
1484915279076:first_contactlist
1484915288875:first_contactlist[, .N, by = segment]
1484915399196:all_data
1484915408863:all_data
1484915421025:all_data[, uniqueN(contact_id), by = segment]
1484915424106:first_contactlist[, .N, by = segment]
1484915527969:campaign_summary %>%
1484915527969:merge(all_data[, .(n_in_segment = uniqueN(contact_id)), by = segment], by = 'segment') %>%
1484915527970:generateRelativeData(measure = num_open / n_in_segment)
1484916044211:campaign_summary
1484916051630:calculateActivitySummary <- function(dt, by, initial_n_hours = Inf) {
1484916051630:contacts_in_segments <- dt[, .(n_in_segment = uniqueN(contact_id)), by = segment]
1484916051631:num_columns <- c('num_open', 'num_click')
1484916051632:dt[bounced == FALSE
1484916051632:,
1484916051633:.(
1484916051634:open_rate = mean(opened & hours_to_open <= initial_n_hours),
1484916051635:open_rate_sd = sd(opened & hours_to_open <= initial_n_hours),
1484916051635:num_open = sum(opened & hours_to_open <= initial_n_hours),
1484916051636:click_rate = mean(clicked & hours_to_click <= initial_n_hours),
1484916051638:click_rate_sd = sd(clicked & hours_to_click <= initial_n_hours),
1484916051639:num_click = sum(clicked & hours_to_open <= initial_n_hours),
1484916051641:click_to_open_rate = sum(clicked & hours_to_click <= initial_n_hours)/sum(opened & hours_to_open <= initial_n_hours),
1484916051642:n = .N
1484916051644:),
1484916051645:by = by
1484916051646:] %>%
1484916051647:merge(contacts_in_segments, by = 'segment') %>%
1484916051648:.[, (num_columns) := lapply(.SD/n_in_segment), .SDcols = num_columns]
1484916051649:}
1484916059782:calculateCampaignSummary <- function(campaign_data, initial_n_hours = Inf, contact_condition = 'TRUE', campaign_condition = 'TRUE', base_by = c('period', 'segment', 'send_day'), additional_by = NULL) {
1484916059783:by <- c(base_by, additional_by)
1484916059784:campaign_data %>%
1484916059785:.[eval(parse(text = contact_condition))] %>%
1484916059786:calculateActivitySummary(by = by, initial_n_hours = initial_n_hours) %>%
1484916059787:.[eval(parse(text = campaign_condition))] %>%
1484916059789:addWeekdayToDt_() %>%
1484916059790:addWeekendToSummary_()
1484916059791:}
1484916065772:campaign_summary <- calculateCampaignSummary(all_data)
1484916114007:calculateActivitySummary <- function(dt, by, initial_n_hours = Inf) {
1484916114008:contacts_in_segments <- dt[, .(n_in_segment = uniqueN(contact_id)), by = segment]
1484916114010:num_columns <- c('num_open', 'num_click')
1484916114011:dt[bounced == FALSE
1484916114011:,
1484916114012:.(
1484916114013:open_rate = mean(opened & hours_to_open <= initial_n_hours),
1484916114014:open_rate_sd = sd(opened & hours_to_open <= initial_n_hours),
1484916114014:num_open = sum(opened & hours_to_open <= initial_n_hours),
1484916114015:click_rate = mean(clicked & hours_to_click <= initial_n_hours),
1484916114016:click_rate_sd = sd(clicked & hours_to_click <= initial_n_hours),
1484916114016:num_click = sum(clicked & hours_to_open <= initial_n_hours),
1484916114017:click_to_open_rate = sum(clicked & hours_to_click <= initial_n_hours)/sum(opened & hours_to_open <= initial_n_hours),
1484916114018:n = .N
1484916114019:),
1484916114020:by = by
1484916114021:] %>%
1484916114023:merge(contacts_in_segments, by = 'segment') %>%
1484916114024:.[, (num_columns) := lapply(.SD, function(x) x/n_in_segment), .SDcols = num_columns]
1484916114026:}
1484916118357:campaign_summary <- calculateCampaignSummary(all_data)
1484916123832:campaign_summary
1484916124968:campaign_summary
1484916383947:campaign_summary %>%
1484916390192:measure <- 'num_open'
1484916390605:campaign_summary %>%
1484916391081:generateRelativeData(measure = measure) %>%
1484916391571:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484916429643:all_data
1484916606737:customer <- 'lesara'
1484916606738:program <- 'FR_female'
1484916606739:# collect data ----------------------------------------------------------------
1484916606739:refetch <- F
1484916607704:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484916610167:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484916610573:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484916610871:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484916611216:.[N == n_campaigns, .(segment, contact_id)]
1484916612008:reportStatistics(
1484916613321:customer, program_data,
1484916613781:unique_contactlist, common_contactlist,
1484916614073:check_pairwise_common = FALSE
1484916614439:)
1484916844326:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484916849986:contactlist <- first_contactlist
1484916853345:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484916853946:merge(contactlist, by = c('contact_id', 'segment'))
1484916861828:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484916863512:n_past_campaigns %>% ggplot(aes(x = N)) +
1484916863959:geom_histogram(binwidth = 5) +
1484916864470:scale_x_continuous(breaks = seq(0,90,5))
1484916877386:n_past_campaigns[N == 0]
1484916888077:n_past_campaigns[, .N, by = N]
1484916891447:n_past_campaigns[, .N, keyby = N]
1484917261674:past_campaign_num_limit <- 10
1484917262589:all_data <- merge(
1484917262590:all_data,
1484917262592:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484917262592:by = c('contact_id', 'segment')
1484917262593:)
1484917279984:reportStatistics(
1484917279985:customer, program_data,
1484917279985:unique_contactlist, common_contactlist,
1484917279986:check_pairwise_common = FALSE
1484917279986:)
1484917334492:past_campaign_num_limit <- 10
1484917336781:all_data <- merge(
1484917336782:all_data,
1484917336783:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484917336783:by = c('contact_id', 'segment')
1484917336783:)
1484917340124:all_data
1484917363612:all_data[, uniqueN(contact_id), by = segment]
1484917379762:all_data[, uniqueN(contact_id), by = .(campaign_id, segment)]
1484917390861:all_data[period == 'sto', uniqueN(contact_id), by = .(campaign_id, segment)]
1484917406215:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484917406216:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484917416689:campaign_summary <- calculateCampaignSummary(all_data)
1484917419830:measure <- 'open_rate'
1484917432572:generateRelativeData(campaign_summary, measure = measure) %>%
1484917432572:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484917463335:measure <- 'num_open'
1484917464018:campaign_summary %>%
1484917464691:generateRelativeData(measure = measure) %>%
1484917465924:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484917545427:customer <- 'lesara'
1484917545842:program <- 'FR_male'
1484917547449:refetch <- F
1484917548746:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484917550838:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484917551185:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484917551495:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484917552273:.[N == n_campaigns, .(segment, contact_id)]
1484917553241:reportStatistics(
1484917553974:customer, program_data,
1484917554347:unique_contactlist, common_contactlist,
1484917554639:check_pairwise_common = FALSE
1484917554909:)
1484917556892:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484917559376:contactlist <- first_contactlist
1484917561374:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484917562977:merge(contactlist, by = c('contact_id', 'segment'))
1484919689481:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484919691055:past_campaign_num_limit <- 10
1484919692448:all_data <- merge(
1484919692916:all_data,
1484919693194:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484919693542:by = c('contact_id', 'segment')
1484919693944:)
1484919708977:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484919708978:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484919714076:all_data %>% getRecipientShareForContactlist(contactlist) %>%
1484919715731:plotEvolution(measure = 'recipient_share', se = FALSE)
1484919721156:all_data %>% getRecipientShareForContactlist(contactlist, unique = TRUE) %>%
1484919722598:plotEvolution(measure = 'recipient_share', se = FALSE)
1484919730831:plotSendTimeDistributionEvolution(all_data[period == 'sto' & segment == 'sto'])
1484919736693:campaign_summary <- calculateCampaignSummary(all_data)
1484919746717:measure <- 'open_rate'
1484919747684:campaign_summary %>%
1484919748731:smoothMeasureWithWindow(measure, window_size = 1) %>%
1484919751393:plotEvolution(measure = measure) +
1484919751853:scale_y_continuous(labels = scales::percent_format())
1484919759167:measure <- 'open_rate'
1484919763272:generateRelativeData(campaign_summary, measure = measure) %>%
1484919763744:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484919789078:measure <- 'num_open'
1484919789460:campaign_summary %>%
1484919789776:generateRelativeData(measure = measure) %>%
1484919790071:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484919824908:plotRelativeEvolution <- function(relative_data, measure = 'open_rate', time_var = 'send_day', color = NULL, facet = NULL, cols = NULL, trendlines = TRUE, prior_change_dates = TRUE, sto_line = TRUE, sto_text = TRUE, text_position = 0.8, offset = 2) {
1484919824909:p <- relative_data[send_day < Sys.Date() - offset] %>%
1484919824910:ggplot(aes_string(x = time_var, y = 'relative_measure')) +
1484919824911:geom_hline(yintercept = 1, linetype = 'dashed')
1484919824912:if (is.null(color)) {
1484919824913:p <- p +
1484919824914:geom_line(col = "#40877E") +
1484919824914:geom_point(fill = "#40877E", colour = 'white', size = 3, pch = 21)
1484919824916:} else {
1484919824918:p <- p +
1484919824920:geom_point(aes_string(color = color)) +
1484919824922:geom_line(aes_string(color = color))
1484919824924:}
1484919824925:if (trendlines) {
1484919824926:p <- p + geom_smooth(aes(group = send_day < relative_data[period == 'past', max(send_day)]), method = 'lm', col = "#40877E", size = 0.5, se = F)
1484919824927:}
1484919824928:if (!is.null(facet)) {
1484919824929:p <- p + facet_wrap(as.formula(paste('~', facet)), ncol = cols, scales = 'free_x')
1484919824930:}
1484919824932:p + addSTOline(
1484919824934:start_date = relative_data[period == 'past', max(send_day)],
1484919824935:sto_line, sto_text, prior_change_dates, text_position
1484919824937:) +
1484919824938:labs(x = time_var, y = str_c('relative', str_replace_all(measure, '_', ' '), sep = ' ')) +
1484919824940:scale_color_discrete(guide = guide_legend(nrow = 1)) +
1484919824942:theme(legend.position = 'bottom') +
1484919824943:theme_bw()
1484919824945:}
1484919829878:campaign_summary %>%
1484919832733:generateRelativeData(measure = measure) %>%
1484919834820:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484919853145:plotRelativeEvolution <- function(relative_data, measure = 'open_rate', time_var = 'send_day', color = NULL, facet = NULL, cols = NULL, trendlines = TRUE, prior_change_dates = TRUE, sto_line = TRUE, sto_text = TRUE, text_position = 0.8, offset = 2) {
1484919853146:p <- relative_data[send_day < Sys.Date() - offset] %>%
1484919853147:ggplot(aes_string(x = time_var, y = 'relative_measure')) +
1484919853147:geom_hline(yintercept = 1, linetype = 'dashed')
1484919853148:if (is.null(color)) {
1484919853148:p <- p +
1484919853149:geom_line(col = "#40877E") +
1484919853149:geom_point(fill = "#40877E", colour = 'white', size = 3, pch = 21)
1484919853150:} else {
1484919853151:p <- p +
1484919853151:geom_point(aes_string(color = color)) +
1484919853152:geom_line(aes_string(color = color))
1484919853152:}
1484919853153:if (trendlines) {
1484919853155:p <- p + geom_smooth(aes(group = send_day < relative_data[period == 'past', max(send_day)]), method = 'lm', col = "#40877E", size = 0.5, se = F)
1484919853156:}
1484919853156:if (!is.null(facet)) {
1484919853157:p <- p + facet_wrap(as.formula(paste('~', facet)), ncol = cols, scales = 'free_x')
1484919853157:}
1484919853158:p + addSTOline(
1484919853159:start_date = relative_data[period == 'past', max(send_day)],
1484919853159:sto_line, sto_text, prior_change_dates, text_position
1484919853160:) +
1484919853160:labs(x = time_var, y = str_c('relative', str_replace_all(measure, '_', ' '), sep = ' ')) +
1484919853161:scale_color_discrete(guide = guide_legend(nrow = 1)) +
1484919853161:theme(legend.position = 'bottom', text = element_text(family = 'Canaro Medium')) +
1484919853162:theme_bw()
1484919853163:}
1484919858163:measure <- 'num_open'
1484919858164:campaign_summary %>%
1484919858165:generateRelativeData(measure = measure) %>%
1484919858165:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484919868161:plotRelativeEvolution <- function(relative_data, measure = 'open_rate', time_var = 'send_day', color = NULL, facet = NULL, cols = NULL, trendlines = TRUE, prior_change_dates = TRUE, sto_line = TRUE, sto_text = TRUE, text_position = 0.8, offset = 2) {
1484919868162:p <- relative_data[send_day < Sys.Date() - offset] %>%
1484919868162:ggplot(aes_string(x = time_var, y = 'relative_measure')) +
1484919868163:geom_hline(yintercept = 1, linetype = 'dashed')
1484919868164:if (is.null(color)) {
1484919868164:p <- p +
1484919868165:geom_line(col = "#40877E") +
1484919868165:geom_point(fill = "#40877E", colour = 'white', size = 3, pch = 21)
1484919868166:} else {
1484919868167:p <- p +
1484919868169:geom_point(aes_string(color = color)) +
1484919868170:geom_line(aes_string(color = color))
1484919868172:}
1484919868174:if (trendlines) {
1484919868175:p <- p + geom_smooth(aes(group = send_day < relative_data[period == 'past', max(send_day)]), method = 'lm', col = "#40877E", size = 0.5, se = F)
1484919868177:}
1484919868177:if (!is.null(facet)) {
1484919868178:p <- p + facet_wrap(as.formula(paste('~', facet)), ncol = cols, scales = 'free_x')
1484919868179:}
1484919868180:p + addSTOline(
1484919868180:start_date = relative_data[period == 'past', max(send_day)],
1484919868181:sto_line, sto_text, prior_change_dates, text_position
1484919868182:) +
1484919868183:labs(x = time_var, y = str_c('relative', str_replace_all(measure, '_', ' '), sep = ' ')) +
1484919868185:scale_color_discrete(guide = guide_legend(nrow = 1)) +
1484919868186:theme(legend.position = 'bottom', text = element_text(family = 'Canaro Medium')) +
1484919868186:theme_bw()
1484919868187:}
1484919870644:measure <- 'num_open'
1484919870645:campaign_summary %>%
1484919870646:generateRelativeData(measure = measure) %>%
1484919870646:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484919912608:plotRelativeEvolution <- function(relative_data, measure = 'open_rate', time_var = 'send_day', color = NULL, facet = NULL, cols = NULL, trendlines = TRUE, prior_change_dates = TRUE, sto_line = TRUE, sto_text = TRUE, text_position = 0.8, offset = 2) {
1484919912609:p <- relative_data[send_day < Sys.Date() - offset] %>%
1484919912610:ggplot(aes_string(x = time_var, y = 'relative_measure')) +
1484919912611:geom_hline(yintercept = 1, linetype = 'dashed')
1484919912611:if (is.null(color)) {
1484919912612:p <- p +
1484919912613:geom_line(col = "#40877E") +
1484919912613:geom_point(fill = "#40877E", colour = 'white', size = 3, pch = 21)
1484919912614:} else {
1484919912615:p <- p +
1484919912615:geom_point(aes_string(color = color)) +
1484919912616:geom_line(aes_string(color = color))
1484919912617:}
1484919912618:if (trendlines) {
1484919912618:p <- p + geom_smooth(aes(group = send_day < relative_data[period == 'past', max(send_day)]), method = 'lm', col = "#40877E", size = 0.5, se = F)
1484919912620:}
1484919912622:if (!is.null(facet)) {
1484919912623:p <- p + facet_wrap(as.formula(paste('~', facet)), ncol = cols, scales = 'free_x')
1484919912625:}
1484919912626:p + addSTOline(
1484919912628:start_date = relative_data[period == 'past', max(send_day)],
1484919912629:sto_line, sto_text, prior_change_dates, text_position
1484919912630:) +
1484919912631:labs(x = time_var, y = str_c('relative', str_replace_all(measure, '_', ' '), sep = ' ')) +
1484919912632:scale_color_discrete(guide = guide_legend(nrow = 1)) +
1484919912633:theme(legend.position = 'bottom', text = element_text(family = 'Canaro Medium')) +
1484919912634:theme_bw()
1484919912635:}
1484919922410:measure <- 'num_open'
1484919922411:campaign_summary %>%
1484919922412:generateRelativeData(measure = measure) %>%
1484919922412:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484919939675:measure <- 'num_open'
1484919939676:campaign_summary %>%
1484919939676:generateRelativeData(measure = measure) %>%
1484919939677:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) + theme(text = element_text(family = 'Canaro Medium'))
1484919965997:plotRelativeEvolution <- function(relative_data, measure = 'open_rate', time_var = 'send_day', color = NULL, facet = NULL, cols = NULL, trendlines = TRUE, prior_change_dates = TRUE, sto_line = TRUE, sto_text = TRUE, text_position = 0.8, offset = 2) {
1484919965998:p <- relative_data[send_day < Sys.Date() - offset] %>%
1484919965998:ggplot(aes_string(x = time_var, y = 'relative_measure')) +
1484919965999:geom_hline(yintercept = 1, linetype = 'dashed')
1484919966000:if (is.null(color)) {
1484919966000:p <- p +
1484919966001:geom_line(col = "#40877E") +
1484919966001:geom_point(fill = "#40877E", colour = 'white', size = 3, pch = 21)
1484919966002:} else {
1484919966003:p <- p +
1484919966003:geom_point(aes_string(color = color)) +
1484919966004:geom_line(aes_string(color = color))
1484919966006:}
1484919966007:if (trendlines) {
1484919966009:p <- p + geom_smooth(aes(group = send_day < relative_data[period == 'past', max(send_day)]), method = 'lm', col = "#40877E", size = 0.5, se = F)
1484919966011:}
1484919966012:if (!is.null(facet)) {
1484919966014:p <- p + facet_wrap(as.formula(paste('~', facet)), ncol = cols, scales = 'free_x')
1484919966015:}
1484919966015:p + addSTOline(
1484919966016:start_date = relative_data[period == 'past', max(send_day)],
1484919966017:sto_line, sto_text, prior_change_dates, text_position
1484919966017:) +
1484919966019:labs(x = time_var, y = str_c('relative', str_replace_all(measure, '_', ' '), sep = ' ')) +
1484919966020:scale_color_discrete(guide = guide_legend(nrow = 1)) +
1484919966021:theme_bw() +
1484919966022:theme(legend.position = 'bottom', text = element_text(family = 'Canaro Medium'))
1484919966023:}
1484919975113:measure <- 'num_open'
1484919975114:campaign_summary %>%
1484919975115:generateRelativeData(measure = measure) %>%
1484919975115:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484920086518:customer <- 'lesara'
1484920087050:program <- 'NL_female'
1484920088824:refetch <- F
1484920089915:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484920093556:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484920093824:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484920094071:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484920094271:.[N == n_campaigns, .(segment, contact_id)]
1484920094663:reportStatistics(
1484920095107:customer, program_data,
1484920095318:unique_contactlist, common_contactlist,
1484920095517:check_pairwise_common = FALSE
1484920095853:)
1484920101492:# stable contactlist: first & last STO receivers
1484920102019:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484920105173:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484920105726:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484920106948:contactlist <- first_contactlist
1484920108196:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484920108589:merge(contactlist, by = c('contact_id', 'segment'))
1484920113376:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484920113655:past_campaign_num_limit <- 10
1484920114365:all_data <- merge(
1484920114885:all_data,
1484920115107:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484920115372:by = c('contact_id', 'segment')
1484920115829:)
1484920116769:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484920140368:customer <- 'lesara'
1484920140735:program <- 'NL_female'
1484920141470:all_data <- readAllData(customer, program)
1484920144292:group_by <- NULL
1484920145583:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1484920145984:plotEvolution(measure = 'number_of_emails', se = FALSE)
1484920153084:campaign_summary <- calculateCampaignSummary(all_data)
1484920154574:measure <- 'open_rate'
1484920162519:generateRelativeData(campaign_summary, measure = measure) %>%
1484920162945:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484920197100:campaign_summary
1484920210214:campaign_summary[period == 'sto', n]
1484920218086:campaign_summary[period == 'sto', .(segment, send_day, n)]
1484920235206:measure <- 'num_open'
1484920235638:campaign_summary %>%
1484920236302:generateRelativeData(measure = measure) %>%
1484920236807:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484920553222:customer <- 'lesara'
1484920553685:program <- 'FR_female'
1484920554833:all_data <- readAllData(customer, program)
1484920580836:program <- 'FR_female'
1484920581780:refetch <- F
1484920582539:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484920585555:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484920585862:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484920586119:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484920586386:.[N == n_campaigns, .(segment, contact_id)]
1484920586979:reportStatistics(
1484920587360:customer, program_data,
1484920587588:unique_contactlist, common_contactlist,
1484920587806:check_pairwise_common = FALSE
1484920588043:)
1484920588402:# stable contactlist: first & last STO receivers
1484920588621:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484920588881:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484920589122:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484920589944:####### --> choose contactlist <-- #############################################
1484920590238:contactlist <- first_contactlist
1484920592016:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484920592242:merge(contactlist, by = c('contact_id', 'segment'))
1484920596184:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484920596430:past_campaign_num_limit <- 10
1484920596431:all_data <- merge(
1484920596432:all_data,
1484920596846:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484920597063:by = c('contact_id', 'segment')
1484920597257:)
1484920597586:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484920613963:generateRelativeData(campaign_summary, measure = measure) %>%
1484920614579:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484920631697:campaign_summary <- calculateCampaignSummary(all_data)
1484920636223:generateRelativeData(campaign_summary, measure = measure) %>%
1484920636538:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484920647168:campaign_summary %>%
1484920647562:generateRelativeData(measure = measure) %>%
1484920647912:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484923958816:myggsave('relative_open_rate')
1484923964402:generateRelativeData(campaign_summary, measure = measure) %>%
1484923964404:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484923967651:myggsave('relative_open_rate')
1484923973486:myggsave('relative_open_rate.png')
1484923992079:program <- 'FR_male'
1484923993505:all_data <- readAllData(customer, program)
1484923999408:refetch <- F
1484923999898:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484924009563:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484924009823:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484924010066:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484924010274:.[N == n_campaigns, .(segment, contact_id)]
1484924010717:reportStatistics(
1484924011351:customer, program_data,
1484924011579:unique_contactlist, common_contactlist,
1484924011784:check_pairwise_common = FALSE
1484924011988:)
1484924015132:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484924015408:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484924015696:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484924016849:####### --> choose contactlist <-- #############################################
1484924017147:contactlist <- first_contactlist
1484924019188:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484924019607:merge(contactlist, by = c('contact_id', 'segment'))
1484924022283:past_campaign_num_limit <- 10
1484924023605:all_data <- merge(
1484924023879:all_data,
1484924024141:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484924024391:by = c('contact_id', 'segment')
1484924024654:)
1484924025811:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484924032147:all_data <- readAllData(customer, program)
1484924038565:campaign_summary <- calculateCampaignSummary(all_data)
1484924041544:generateRelativeData(campaign_summary, measure = measure) %>%
1484924042290:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484924055335:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484924060238:program <- 'FR_male'
1484924061701:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484924129091:if (customer == 'batiwiz') {
1484924129092:# append new programs
1484924129092:na_program_data <- getCampaignDataForCustomer(customer, 'NA-TD120', refetch = refetch)
1484924129093:a_program_data <- getCampaignDataForCustomer(customer, 'A-TD120', refetch = refetch)
1484924129093:common_dates <- as.Date(
1484924129094:intersect(
1484924129094:unique(a_program_data$send_day),
1484924129095:unique(na_program_data$send_day))
1484924129096:, origin = '1970-01-01'
1484924129096:)
1484924129097:a_filtered <- a_program_data[send_day %in% common_dates]
1484924129098:na_filtered <- na_program_data[send_day %in% common_dates]
1484924129098:program_data <- rbindlist(list(program_data, na_filtered, a_filtered))
1484924129099:}
1484924131030:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484924131531:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484924131857:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484924132180:.[N == n_campaigns, .(segment, contact_id)]
1484924135559:reportStatistics(
1484924136278:customer, program_data,
1484924136631:unique_contactlist, common_contactlist,
1484924136944:check_pairwise_common = FALSE
1484924137220:)
1484924141329:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484924142652:contactlist <- first_contactlist
1484924146276:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484924146693:merge(contactlist, by = c('contact_id', 'segment'))
1484924151749:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484924153415:past_campaign_num_limit <- 10
1484924154374:all_data <- merge(
1484924154746:all_data,
1484924154981:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484924155201:by = c('contact_id', 'segment')
1484924155451:)
1484924158742:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484924194667:all_data <- readAllData(customer, program)
1484924199035:campaign_summary <- calculateCampaignSummary(all_data)
1484924201688:measure <- 'open_rate'
1484924203281:campaign_summary %>%
1484924203709:smoothMeasureWithWindow(measure, window_size = 1) %>%
1484924204006:plotEvolution(measure = measure) +
1484924204374:scale_y_continuous(labels = scales::percent_format())
1484924211246:generateRelativeData(campaign_summary, measure = measure) %>%
1484924211744:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484924247268:myggsave(str_c(program, 'relative_open_rate.png', sep = '_')
1484924256704:)
1484924324903:customer <- 'lesara'
1484924325152:program <- 'NL_male'
1484924326271:refetch <- F
1484924326966:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484924328804:if (customer == 'batiwiz') {
1484924328805:# append new programs
1484924328806:na_program_data <- getCampaignDataForCustomer(customer, 'NA-TD120', refetch = refetch)
1484924328806:a_program_data <- getCampaignDataForCustomer(customer, 'A-TD120', refetch = refetch)
1484924328807:common_dates <- as.Date(
1484924328807:intersect(
1484924328809:unique(a_program_data$send_day),
1484924328810:unique(na_program_data$send_day))
1484924328811:, origin = '1970-01-01'
1484924328812:)
1484924328813:a_filtered <- a_program_data[send_day %in% common_dates]
1484924328814:na_filtered <- na_program_data[send_day %in% common_dates]
1484924328815:program_data <- rbindlist(list(program_data, na_filtered, a_filtered))
1484924328817:}
1484924330116:unique_contactlist <- unique(program_data[, .(segment, contact_id)])
1484924330554:n_campaigns <- program_data[segment == 'sto', uniqueN(campaign_id)]
1484924330981:common_contactlist <- program_data[, .N, by = .(segment, contact_id)] %>%
1484924331379:.[N == n_campaigns, .(segment, contact_id)]
1484924332120:reportStatistics(
1484924332584:customer, program_data,
1484924332996:unique_contactlist, common_contactlist,
1484924333695:check_pairwise_common = FALSE
1484924334209:)
1484924334497:# stable contactlist: first & last STO receivers
1484924334673:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484924334882:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484924335117:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484924335350:####### --> choose contactlist <-- #############################################
1484924335516:contactlist <- first_contactlist
1484924335696:################################################################################
1484924336523:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484924336746:merge(contactlist, by = c('contact_id', 'segment'))
1484924346365:past_campaign_num_limit <- 10
1484924347006:all_data <- merge(
1484924347680:all_data,
1484924347912:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484924348128:by = c('contact_id', 'segment')
1484924348335:)
1484924348788:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484924358506:campaign_summary <- calculateCampaignSummary(all_data)
1484924364009:generateRelativeData(campaign_summary, measure = measure) %>%
1484924364466:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484924378077:first_contactlist <- getListOfFirstSTOReceivers(program_data)
1484924379924:last_contactlist <- getListOfLastSTOReceivers(program_data)
1484924382156:stable_contactlist <- merge(first_contactlist, last_contactlist, by = c('contact_id', 'segment'))
1484924387950:contactlist <- first_contactlist
1484924395358:all_data <- addPastData(customer, program, program_data, contactlist, refetch = FALSE) %>%
1484924395864:merge(contactlist, by = c('contact_id', 'segment'))
1484924404424:n_past_campaigns <- all_data[period == 'past', .N, by = .(segment, contact_id)]
1484924406049:past_campaign_num_limit <- 10
1484924407793:all_data <- merge(
1484924408379:all_data,
1484924408867:n_past_campaigns[N >= past_campaign_num_limit, .(contact_id, segment)],
1484924409426:by = c('contact_id', 'segment')
1484924410544:)
1484924414159:saveRDS(all_data, file.path('data', str_c(customer, '_', program, '_all_data.rds')))
1484924426146:campaign_summary <- calculateCampaignSummary(all_data)
1484924432110:generateRelativeData(campaign_summary, measure = measure) %>%
1484924432625:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484924433637:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1484924446589:program <- 'NL_female'
1484924449295:all_data <- readAllData(customer, program)
1484924457379:campaign_summary <- calculateCampaignSummary(all_data)
1484924460955:generateRelativeData(campaign_summary, measure = measure) %>%
1484924461320:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484924670385:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1484924848506:customer <- 'travelist_market'
1484924853994:program <- 'test2'
1484924857302:refetch <- T
1484924858825:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1484926671362:customer <- 'edigital'
1484926671870:program <- 'test'
1484926677235:all_data <- readAllData(customer, program)
1484926700263:campaign_summary <- calculateCampaignSummary(all_data)
1484926720112:campaign_summary %>%
1484926720580:generateRelativeData(measure = measure) %>%
1484926721147:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1484926724319:generateRelativeData(campaign_summary, measure = measure) %>%
1484926724917:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) +
1484926725342:coord_cartesian(ylim = c(0.9, 1.1))
1484926730655:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1484926739931:customer <- 'lingualeo'
1484926740233:program <- 'test'
1484926741025:all_data <- readAllData(customer, program)
1484926751255:campaign_summary <- calculateCampaignSummary(all_data)
1484926758534:generateRelativeData(campaign_summary, measure = measure) %>%
1484926758923:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) +
1484926759363:coord_cartesian(ylim = c(0.9, 1.1))
1484926821288:customer <- 'lesara'
1484926821816:program <- 'NL_female'
1484926823339:all_data <- readAllData(customer, program)
1484926826455:group_by <- NULL
1484926830535:campaign_summary <- calculateCampaignSummary(all_data)
1484926836364:generateRelativeData(campaign_summary, measure = measure) %>%
1484926836774:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) +
1484926837161:coord_cartesian(ylim = c(0.9, 1.1))
1484926839151:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1484926846320:program <- 'NL_male'
1484926847113:all_data <- readAllData(customer, program)
1484926851794:campaign_summary <- calculateCampaignSummary(all_data)
1484926858760:generateRelativeData(campaign_summary, measure = measure) %>%
1484926859109:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) +
1484926859502:coord_cartesian(ylim = c(0.9, 1.1))
1484926861093:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1484926866231:program <- 'FR_male'
1484926867086:all_data <- readAllData(customer, program)
1484926870755:campaign_summary <- calculateCampaignSummary(all_data)
1484926877519:generateRelativeData(campaign_summary, measure = measure) %>%
1484926877857:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) +
1484926878228:coord_cartesian(ylim = c(0.9, 1.1))
1484926881261:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1484926890023:program <- 'FR_female'
1484926891662:all_data <- readAllData(customer, program)
1484926899462:campaign_summary <- calculateCampaignSummary(all_data)
1484926906607:generateRelativeData(campaign_summary, measure = measure) %>%
1484926906990:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by) +
1484926907386:coord_cartesian(ylim = c(0.9, 1.1))
1484926909235:myggsave(str_c(program, 'relative_open_rate.png', sep = '_'))
1485259396161:install.packages(c("backports", "chron", "Rcpp", "rprojroot"))
1485259407164:install.packages(c("Matrix", "mgcv", "nlme", "survival"), lib="/Users/jdivenyi/projects/incentive-followup/packrat/lib-R")
1485259444912:packrat::status()
1485259467602:packrat::restore(prompt = FALSE)
1485259598339:install.packages('Matrix')
1485259641154:packrat::status()
1485259661534:packrat::restore(prompt = FALSE)
1485259685808:install.packages('bigrquery')
1485259698176:install.packages('nlme')
1485259712439:packrat::status()
1485259749693:packrat::restore()
1485259830686:install.packages('devtools')
1485259837597:devtools::install_github('rstats-db/bigrquery')
1485259854534:install.packages('mgcv')
1485259864656:packrat::restore()
1485259901482:packrat::status()
1485259911520:packrat::restore()
1485260024694:packrat::restore()
1485260035630:.myfuncs$useEmarsysCRAN()
1485260050121:install.packages('emsconnectr', type = 'source')
1485260061823:packrat::restore()
1485260072337:install.packages('Matrix')
1485260080882:packrat::status()
1485260088682:packrat::restore()
1485260098769:packrat::snapshot()
1485260125186:packrat::snapshot(ignore.stale = TRUE)
1485260151004:packrat::status()
1485260164731:packrat::snapshot()
1485260199494:packrat::snapshot()
1485260269121:packrat::status()
1485260533079:packrat::restore(prompt = FALSE)
1485269663983:source('global.R')
1485269674506:customer <- 'lesara'
1485269674908:program <- 'FR_female'
1485269676926:refetch <- T
1485269679046:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485269710896:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485269770462:sessionInfo()
1485269819893:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485269916062:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485269940133:source('global.R')
1485269941370:customer <- 'lesara'
1485269941371:program <- 'FR_female'
1485269943583:refetch <- T
1485269944058:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485270029185:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485270048727:refetch <- T
1485270048738:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485270051471:source('global.R')
1485270054158:customer <- 'lesara'
1485270054660:program <- 'FR_female'
1485270055746:refetch <- T
1485270057196:program_data <- getCampaignDataForCustomer(customer, program, refetch = refetch)
1485270692968:source('global.R')
1485270694422:customer <- 'lesara'
1485270694894:program <- 'FR_female'
1485270696242:all_data <- readAllData(customer, program)
1485270698870:group_by <- NULL
1485270705852:reportStatistics(all_data)
1485270712425:reportStatistics(all_data, customer, program)
1485270818629:group_by <- NULL
1485270819701:all_data %>% .[, .(number_of_emails = .N), by = .(send_day, period, segment)] %>%
1485270819701:plotEvolution(measure = 'number_of_emails', se = FALSE)
1485270820375:all_data %>% getRecipientShareForContactlist(contactlist) %>%
1485270820376:plotEvolution(measure = 'recipient_share', se = FALSE)
1485270879255:plotSendTimeDistributionEvolution(all_data[period == 'sto' & segment == 'sto'])
1485270883676:campaign_summary <- calculateCampaignSummary(all_data)
1485270886598:measure <- 'open_rate'
1485270887603:campaign_summary %>%
1485270887603:smoothMeasureWithWindow(measure, window_size = 1) %>%
1485270887604:plotEvolution(measure = measure) +
1485270887605:scale_y_continuous(labels = scales::percent_format())
1485270895790:generateRelativeData(campaign_summary, measure = measure) %>%
1485270895790:plotRelativeEvolution(
1485270895791:trendlines = F, measure = measure, color = group_by, text_position = 0.9
1485270895791:) +
1485270895792:coord_cartesian(ylim = c(0.9, 1.2))
1485270909832:generateRelativeData(campaign_summary, measure = measure) %>%
1485270909833:plotRelativeEvolution(trendlines = F, measure = measure, sto_text = FALSE, facet = group_by)
1485341180326:suppressPackageStartupMessages(
1485341187390:source('global.R')
1485341187793:)
1485341191257:args = commandArgs(trailingOnly=TRUE)
1485341193719:if (length(args)==0) {
1485341193721:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485341193722:} else{
1485341193722:selected_customer <- args[1]
1485341193723:}
1485341196737:message(sprintf("Currently selected customer: %s", selected_customer))
1485341198837:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485341203931:recom_history_w_attributions <- recom_history %>%
1485341204713:merge(
1485341205326:matchPurchasesToRecomHistory(
1485341205847:recom_history[, .(contact_id, campaign_id, campaign_start_date)],
1485341206303:purchases_si[purchase_date >= recom_history[, min(campaign_start_date)] &
1485341206698:purchase_date <= recom_history[, max(campaign_start_date)] + 1,
1485341207165:.(contact_id, purchase_date, sales_amount)]
1485341207637:) %>%
1485341208134:.[,
1485341208704:.(num_purchases = sum(sales_amount > 0, na.rm = T), sales_amount = sum(sales_amount, na.rm = T)),
1485341209208:by = .(contact_id, campaign_id, campaign_start_date)
1485341209668:],
1485341210150:by = c('contact_id', 'campaign_id', 'campaign_start_date'),
1485341210724:all.x = TRUE
1485341211198:)
1485341215157:num_campaigns <- nrow(unique(recom_history, by = 'campaign_start_date'))
1485341215163:alpha_prior <- 0.5
1485341215164:beta_prior <- 0.5
1485341215165:lower_percentile <- 0.05
1485341215166:higher_percentile <- 0.95
1485341224127:recom_history_w_attributions %>%
1485341224128:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485341224129:.[,
1485341224130:`:=`(
1485341224130:alpha = alpha_prior + num_purchases,
1485341224132:beta = beta_prior + N - num_purchases
1485341224133:),
1485341224135:] %>%
1485341224136:.[, `:=`(
1485341224136:rate_lower = qbeta(lower_percentile, alpha, beta),
1485341224137:rate = alpha / (alpha + beta),
1485341224138:rate_higher = qbeta(higher_percentile, alpha, beta)
1485341224139:)] %>%
1485341224140:# ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485341224140:ggplot(aes(x = class, y = rate, fill = class)) +
1485341224141:geom_bar(stat = 'identity', position = 'dodge') +
1485341224142:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485341224143:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485341224144:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485341224145:scale_y_continuous(expand = c(0.1, 0)) +
1485341224146:labs(x = 'Segment',
1485341224147:y = "Purchase rate",
1485341224147:fill = 'Segment',
1485341224148:title = sprintf("? based purchase rates (%s)", selected_customer),
1485341224149:subtitle = sprintf('Aggregated over %d campaign(s)', num_campaigns))
1485341298827:recom_history_w_attributions %>%
1485341298827:.[, .(.N, sales_amount = sum(sales_amount, na.rm = T), num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485341298829:ggplot(aes(x = class, y = sales_amount, fill = class)) +
1485341298829:geom_bar(stat = 'identity', position = 'dodge') +
1485341298830:geom_label(aes(label = sprintf('%0.0f', sales_amount)), show.legend = F) +
1485341298831:geom_text(aes(y = 0, label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sales_amount/num_purchases)), vjust = 'top') +
1485341298832:scale_y_continuous(expand = c(0.1, 0)) +
1485341298832:labs(x = 'Segment',
1485341298833:y = "%",
1485341298833:fill = 'Segment',
1485341298834:title = sprintf("? based total revenue (%s)", selected_customer),
1485341298834:subtitle = sprintf('Aggregated over %d campaign(s)', num_campaigns))
1485425169404:knitr::opts_knit$set(root.dir = normalizePath(".."))
1485425169412:source('global.R')
1485425171860:headers <- list(
1485425171861:categories = c(
1485425171862:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1485425171864:),
1485425171865:product = c(
1485425171866:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1485425171868:)
1485425171869:)
1485425171874:types_to_read <- c('viewed', 'added', 'purchased')
1485425171877:data_read <- sapply(
1485425171879:types_to_read,
1485425171880:function(type) readInPredictData(selected_customer, type),
1485425171881:simplify = FALSE
1485425171883:)
1485425238428:knitr::opts_knit$set(root.dir = normalizePath(".."))
1485425238437:source('global.R')
1485425238608:selected_customer <- 'evolution_slimming'
1485425238614:headers <- list(
1485425238615:categories = c(
1485425238616:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1485425238618:),
1485425238619:product = c(
1485425238621:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1485425238622:)
1485425238623:)
1485425238629:types_to_read <- c('viewed', 'added', 'purchased')
1485425238632:data_read <- sapply(
1485425238633:types_to_read,
1485425238634:function(type) readInPredictData(selected_customer, type),
1485425238636:simplify = FALSE
1485425238637:)
1485425240250:all_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1485425240508:all_data <- addContactId(all_data, selected_customer)
1485425291854:all_data <- addContactId(all_data, selected_customer)
1485425319678:all_data <- addContactId(all_data, selected_customer)
1485425589381:?emsconnectr
1485425593909:sessionInfo()
1485425616869:install.packages('emsconnectr', type = 'soruce')
1485425622341:install.packages('emsconnectr', type = 'source')
1485425652287:library('emsconnectr')
1485425659400:sessionInfo()
1485425732883:source('global.R')
1485425736816:selected_customer <- 'evolution_slimming'
1485425762186:```{r}
1485425766403:headers <- list(
1485425766404:categories = c(
1485425766405:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1485425766407:),
1485425766408:product = c(
1485425766411:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1485425766413:)
1485425766414:)
1485425766420:types_to_read <- c('viewed', 'added', 'purchased')
1485425766425:data_read <- sapply(
1485425766427:types_to_read,
1485425766428:function(type) readInPredictData(selected_customer, type),
1485425766429:simplify = FALSE
1485425766431:)
1485425767919:all_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1485425768145:all_data <- addContactId(all_data, selected_customer)
1485425830249:all_data <- addContactId(all_data, selected_customer)
1485425841599:head(all_data)
1485425861193:all_data
1485426197713:packrat::snapshot(prompt = FALSE)
1485426415391:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485426502055:predict_data <- all_data
1485426505350:rm(all_data)
1485426891354:readInPredictData <- function(customer, type, predict_data_folder = 'predict_data', list_of_headers = headers) {
1485426891355:if (!file.exists(file.path('data', predict_data_folder))) {
1485426891356:stop(
1485426891357:'Predict data folder does not exist. Now the data is only available
1485426891357:in text files, not in any db to query.'
1485426891357:)
1485426891357:}
1485426891358:if (!type %in% c('categories', 'viewed', 'added', 'purchased')) {
1485426891358:stop(
1485426891358:'The parameter type should be one of categories, viewed, added, purchased.'
1485426891358:)
1485426891359:}
1485426891359:column_names <- generatePredictHeader(type, list_of_headers)
1485426891359:rbindlist(lapply(
1485426891360:dir(file.path('data', predict_data_folder), pattern = paste0(customer, '.*', type), full.names = TRUE),
1485426891360:function(file) {
1485426891361:fread(
1485426891362:file,
1485426891362:col.names = column_names, sep = '\t'
1485426891363:)
1485426891363:}
1485426891363:))
1485426891364:}
1485426899359:source('global.R')
1485427043576:source('global.R')
1485427055711:source('global.R')
1485427068650:types_to_read <- c('viewed', 'added', 'purchased')
1485427087097:selected_customer <- 'evolution_slimming'
1485427089783:selected_customer <- 'evolution_slimming'
1485427144972:source('global.R')
1485427302062:source('global.R')
1485427315924:source('global.R')
1485427333848:types_to_read <- c('viewed', 'added', 'purchased')
1485427339892:types_to_read <- c('viewed', 'added', 'purchased')
1485427340443:data_read <- sapply(
1485427341091:types_to_read,
1485427341575:function(type) readInPredictData(selected_customer, type),
1485427342020:simplify = FALSE
1485427342529:)
1485427345910:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1485427360229:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1485427699001:source('global.R')
1485427714574:headers <- list(
1485427715106:categories = c(
1485427715506:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1485427715893:),
1485427716162:product = c(
1485427716423:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1485427716742:)
1485427717623:)
1485427721012:types_to_read <- c('viewed', 'added', 'purchased')
1485427722628:data_read <- sapply(
1485427722946:types_to_read,
1485427723199:function(type) readInPredictData(selected_customer, type),
1485427723628:simplify = FALSE
1485427724418:)
1485427726811:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1485436264735:headers <- list(
1485436265517:categories = c(
1485436265906:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1485436266263:),
1485436266562:product = c(
1485436266849:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1485436267168:)
1485436267518:)
1485436270998:types_to_read <- c('viewed', 'added', 'purchased')
1485436270999:data_read <- sapply(
1485436270999:types_to_read,
1485436270999:function(type) readInPredictData(selected_customer, type),
1485436271000:simplify = FALSE
1485436271000:)
1485436275998:source('global.R')
1485436276019:selected_customer <- 'evolution_slimming'
1485436671316:source('global.R')
1485436674085:source('global.R')
1485436674108:selected_customer <- 'evolution_slimming'
1485436833531:source('global.R')
1485436838145:source('global.R')
1485436838170:selected_customer <- 'evolution_slimming'
1485436861630:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485437458784:predict_data
1485437474976:recom_history
1485437551211:recom_history[contact_id == 20410]
1485437651359:recom_history[, table(has_buying_prob)
1485437652520:]
1485437679184:recom_history[has_buying_prob][1:10]
1485437684041:recom_history[has_buying_prob == T][1:10]
1485437694170:recom_history[contact_id == 27643]
1485438131197:predict_data
1485438164083:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1485438165000:predict_data <- addContactId(predict_data, selected_customer)
1485438171045:predict_data
1485438264685:predict_data[, min(timestamp())]
1485438264687:##------ Thu Jan 26 14:44:24 2017 ------##
1485438271284:predict_data[, max(timestamp())]
1485438271286:##------ Thu Jan 26 14:44:31 2017 ------##
1485438278723:predict_data[, max(timestamp)]
1485438282151:predict_data[, min(timestamp)]
1485438293323:recom_history
1485438312442:recom_history[, .(min(campaign_start_date), max(campaign_start_date))]
1485438342467:recom_history[campaign_id != 1019328, .(min(campaign_start_date), max(campaign_start_date))]
1485438393776:predict_data[timestamp > '2016-09-13']
1485438407632:predict_data
1485438525831:predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485438526083:.[, .(n_session = uniqueN(session_id)), by = contact_id]
1485438536496:n_sessions <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485438536645:.[, .(n_session = uniqueN(session_id)), by = contact_id]
1485438689515:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique()
1485438726587:merge(
1485438726587:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485438726588:n_sessions,
1485438726589:by = 'contact_id',
1485438726589:all.x = TRUE
1485438726589:)
1485438795876:merge(
1485438796256:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485438796456:n_sessions,
1485438796607:by = 'contact_id',
1485438796773:all.x = TRUE
1485438796937:) %>%
1485438797411:.[, sum(n_session, na.rm = TRUE), by = class]
1485438817504:recom_history[, table(class)]
1485438825561:recom_history
1485438918964:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485438925728:merge(
1485438926131:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485438926329:n_sessions,
1485438926553:by = 'contact_id',
1485438926787:all.x = TRUE
1485438927130:) %>%
1485438927488:.[, sum(n_session, na.rm = TRUE), by = class]
1485438937350:recom_history
1485439198171:recom_history <- getBigQueryResult(
1485439198172:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485439198173:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485439198173:debug = F,
1485439198173:project = "ems-incentives" ,
1485439198173:customer_id = getIdFromName(selected_customer)
1485439198174:) %>%
1485439198174:.[, campaign_start_date := ymd(floor_date(email_sent_date, unit = 'day'))] %>%
1485439198174:.[campaign_start_date >= ymd('2016-09-13')]   # exclude test campaign
1485439775043:recom_history
1485439788302:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485439788302:.[customerId == getIdFromName(selected_customer)]
1485439791898:incentive_ids
1485439807355:recom_history
1485439820249:recom_history[, .N, keyby = incentive_ids]
1485439826292:recom_history[, .N, keyby = incentive_id]
1485439830946:incentive_ids
1485439845942:recom_history <- merge(
1485439845943:recom_history,
1485439845943:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485439845944:by = 'incentive_id',
1485439845944:all.x = T) %>%
1485439845944:.[is.na(class), class := 'control']
1485439854259:recom_history[, table(class)]
1485439889970:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485439890392:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485439893836:recom_history <- merge(recom_history,
1485439893837:buying_probs,
1485439893837:by = c('contact_id', 'campaign_start_date'),
1485439893838:all.x = T) %>%
1485439893838:.[, has_buying_prob := !is.na(buying_prob)]
1485439900071:recom_history[, table(class)]
1485439906206:if (selected_customer %in% c('evolution_slimming', 'japancentre')) {
1485439906206:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485439906207:class2number <- merge(
1485439906208:recom_history[, .(contact_id, class)],
1485439906208:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485439906208:by = 'contact_id') %>%
1485439906208:.[, .(class_number = round(mean(class_number))), by = class] %>%
1485439906208:setnames(., 'class', 'final_class')
1485439906209:recom_history <- recom_history %>%
1485439906209:merge(.,
1485439906209:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485439906209:by = 'contact_id',
1485439906210:all.x = T) %>%
1485439906210:.[!is.na(class_number)] %>%
1485439906210:merge(.,
1485439906211:class2number,
1485439906211:by = 'class_number') %>%
1485439906212:setnames(., 'class', 'old_class') %>%
1485439906212:setnames(., 'final_class', 'class') %>%
1485439906213:.[, `:=`(class_number = NULL)]
1485439906214:}
1485439910470:recom_history[, table(class)]
1485439928180:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485439932577:contact_classes
1485440009464:recom_history <- getBigQueryResult(
1485440009465:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485440009466:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485440009466:debug = F,
1485440009466:project = "ems-incentives" ,
1485440009467:customer_id = getIdFromName(selected_customer)
1485440009467:) %>%
1485440009467:.[, campaign_start_date := ymd(floor_date(email_sent_date, unit = 'day'))] %>%
1485440009467:.[campaign_start_date >= ymd('2016-09-13')]   # exclude test campaign
1485440287010:load('data/__env_backup_evolution_slimming_161122.RData')
1485440348300:recom_history[, table(class)]
1485440386980:recom_history[, .N, by = incentive_id]
1485440516846:merge(
1485440516847:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485440516848:n_sessions,
1485440516848:by = 'contact_id',
1485440516848:all.x = TRUE
1485440516848:) %>%
1485440516849:.[, sum(n_session, na.rm = TRUE), by = class]
1485440545662:merge(
1485440545662:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485440545664:n_sessions,
1485440545664:by = 'contact_id',
1485440545664:all.x = TRUE
1485440545664:) %>%
1485440545665:.[, mean(n_session, na.rm = TRUE), by = class]
1485440572951:merge(
1485440572951:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485440572952:n_sessions,
1485440572953:by = 'contact_id',
1485440572953:all.x = TRUE
1485440572953:) %>%
1485440572953:fillZerosForNA_() %>%
1485440572953:.[, mean(n_session), by = class]
1485440681027:n_sessions <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485440681027:.[, day := day(timestamp)] %>%
1485440681028:.[, .(n_session = uniqueN(session_id)), by = .(contact_id, day)]
1485440684025:n_sessions
1485440696821:n_sessions <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485440696821:.[, day := Date(timestamp)] %>%
1485440696822:.[, .(n_session = uniqueN(session_id)), by = .(contact_id, day)]
1485440710325:n_sessions <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485440710325:.[, day := as.Date(timestamp)] %>%
1485440710326:.[, .(n_session = uniqueN(session_id)), by = .(contact_id, day)]
1485440713826:n_sessions
1485440749177:predict_data[460890041]
1485440754675:predict_data[contact_id == 460890041]
1485440789707:predict_data[contact_id == 460890041 & timestamp > '2016-09-24' & timestamp < '2016-09-25']
1485440861842:daily_visits <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485440861842:.[, day := as.Date(timestamp)] %>%
1485440861842:unique(by = c('contact_id', 'day'))
1485440866192:daily_visits
1485440890686:daily_visits <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1485440890686:.[, .(contact_id, day = as.Date(timestamp))] %>%
1485440890687:unique()
1485440893017:daily_visits
1485440989349:merge(
1485440989349:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485440989350:daily_visits,
1485440989350:by = 'contact_id',
1485440989350:all.y = TRUE
1485440989351:)
1485441013540:merge(
1485441013541:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485441013541:daily_visits,
1485441013541:by = 'contact_id',
1485441013542:all.x = TRUE
1485441013542:)
1485441085158:merge(
1485441085158:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485441085159:daily_visits[, .N, by = contact_id],
1485441085159:by = 'contact_id',
1485441085159:all.x = TRUE
1485441085160:) %>%
1485441085160:fillZerosForNA_() %>%
1485441085160:.[, mean(N), by = class]
1485441224642:merge(
1485441224642:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485441224643:predict_data[, .N, by = contact_id],
1485441224644:by = 'contact_id',
1485441224644:all.x = TRUE
1485441224645:) %>%
1485441224645:fillZerosForNA_() %>%
1485441224645:.[, mean(N), by = class]
1485441224830:# how many days
1485441224831:merge(
1485441224832:recom_history[campaign_id != 1019328, .(contact_id, class)] %>% unique(),
1485441224832:daily_visits[, .N, by = contact_id],
1485441224832:by = 'contact_id',
1485441224832:all.x = TRUE
1485441224833:) %>%
1485441224833:fillZerosForNA_() %>%
1485441224833:.[, mean(N), by = class]
1485441336034:recom_history
1485441378111:recom_history <- recom_history[campaign_id != 1019328]
1485441480537:daily_visits
1485441484294:merge(
1485441484294:recom_history[, .(contact_id, class)] %>% unique(),
1485441484295:daily_visits,
1485441484295:by = 'contact_id',
1485441484295:all = TRUE
1485441484296:)
1485441525342:merge(
1485441525344:recom_history[, .(contact_id, class)] %>% unique(),
1485441525344:daily_visits,
1485441525344:by = 'contact_id',
1485441525344:all = TRUE
1485441525344:) %>%
1485441525345:.[, .N, by = .(day, class)]
1485441554144:merge(
1485441554146:recom_history[, .(contact_id, class)] %>% unique(),
1485441554146:daily_visits,
1485441554146:by = 'contact_id',
1485441554146:all.y = TRUE
1485441554146:) %>%
1485441554147:.[, .N, by = .(day, class)]
1485441591208:merge(
1485441591529:recom_history[, .(contact_id, class)] %>% unique(),
1485441591729:daily_visits,
1485441591899:by = 'contact_id',
1485441592065:all.y = TRUE
1485441592360:) %>%
1485441592692:.[, .N, by = .(day, class)] %>%
1485441593077:ggplot(aes(day, N, col = class)) + geom_line()
1485441637869:recom_history[, unique(campaign_start_date)]
1485441689838:merge(
1485441689839:recom_history[, .(contact_id, class)] %>% unique(),
1485441689840:daily_visits,
1485441689840:by = 'contact_id',
1485441689841:all.y = TRUE
1485441689841:) %>%
1485441689842:.[, .N, by = .(day, class)] %>%
1485441689842:ggplot(aes(day, N, col = class)) +
1485441689842:geom_line() +
1485441689842:geom_vline(
1485441689843:data = unique(recom_history[, .(campaign_start_date)]),
1485441689844:aes(xintercept = campaign_start_date),
1485441689845:linetype = 'dotted'
1485441689845:)
1485441708710:merge(
1485441708711:recom_history[, .(contact_id, class)] %>% unique(),
1485441708712:daily_visits,
1485441708712:by = 'contact_id',
1485441708713:all.y = TRUE
1485441708713:) %>%
1485441708714:.[, .N, by = .(day, class)] %>%
1485441708715:ggplot(aes(day, N, col = class)) +
1485441708715:geom_line() +
1485441708716:geom_vline(
1485441708716:data = unique(recom_history[, .(campaign_start_date)]),
1485441708716:aes(xintercept = as.integer(campaign_start_date)),
1485441708716:linetype = 'dotted'
1485441708717:)
1485447083369:recom_history[campaign_start_date == '2016-09-13', .N, by = class]
1485506042482:suppressPackageStartupMessages(
1485506042484:source('global.R')
1485506042484:)
1485506047053:message(sprintf("Currently selected customer: %s", selected_customer))
1485506063387:recom_history <- getBigQueryResult(
1485506063387:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485506063388:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485506063389:debug = F,
1485506063390:project = "ems-incentives" ,
1485506063390:customer_id = getIdFromName(selected_customer)
1485506063390:) %>%
1485506063390:.[, campaign_start_date := ymd(floor_date(email_sent_date, unit = 'day'))] %>%
1485506063391:.[campaign_start_date >= ymd('2016-09-13')]   # exclude test campaign
1485506646403:recom_history
1485507087668:?ymd
1485507098115:campaign_start_data
1485507099442:campaign_start_date
1485507127332:recom_history[campaign_start_date > '2016-09-13']
1485507205208:recom_history[campaign_start_date > ymd('2016-09-13')]
1485507526517:recom_history_old <- recom_history
1485507541877:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485507541878:.[customerId == getIdFromName(selected_customer)]
1485507541899:recom_history <- merge(
1485507541900:recom_history,
1485507541900:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485507541900:by = 'incentive_id',
1485507541900:all.x = T) %>%
1485507541901:.[is.na(class), class := 'control']
1485507552814:recom_history[, .N, by = class]
1485507621350:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485507621782:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485507625410:recom_history <- merge(recom_history,
1485507625411:buying_probs,
1485507625411:by = c('contact_id', 'campaign_start_date'),
1485507625412:all.x = T) %>%
1485507625412:.[, has_buying_prob := !is.na(buying_prob)]
1485507629313:recom_history[, .N, by = class]
1485507642809:recom_history_old <- recom_history
1485507647433:if (selected_customer %in% c('evolution_slimming', 'japancentre')) {
1485507647433:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485507647434:class2number <- merge(
1485507647434:recom_history[, .(contact_id, class)],
1485507647435:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485507647435:by = 'contact_id') %>%
1485507647435:.[, .(class_number = round(mean(class_number))), by = class] %>%
1485507647435:setnames(., 'class', 'final_class')
1485507647436:recom_history <- recom_history %>%
1485507647436:merge(.,
1485507647436:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485507647437:by = 'contact_id',
1485507647437:all.x = T) %>%
1485507647437:.[!is.na(class_number)] %>%
1485507647438:merge(.,
1485507647438:class2number,
1485507647439:by = 'class_number') %>%
1485507647440:setnames(., 'class', 'old_class') %>%
1485507647440:setnames(., 'final_class', 'class') %>%
1485507647441:.[, `:=`(class_number = NULL)]
1485507647441:}
1485507655351:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485507659330:contact_classes
1485507665611:contact_classes[, .N, by =class]
1485507677786:class2number
1485507690308:merge(
1485507690308:recom_history[, .(contact_id, class)],
1485507690309:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485507690309:by = 'contact_id')
1485507703923:recom_history[, .(contact_id, class)]
1485507723877:recom_history <- recom_history_old
1485507732088:merge(
1485507732089:recom_history[, .(contact_id, class)],
1485507732090:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485507732090:by = 'contact_id')
1485507747649:cucc <- merge(
1485507747649:recom_history[, .(contact_id, class)],
1485507747651:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485507747651:by = 'contact_id')
1485507748435:cucc
1485507763012:cucc[, .N, by = class]
1485507766663:cucc[, .N, by = class_numer]
1485507772389:cucc[, .N, by = class_number]
1485508065788:class2number <- merge(
1485508065788:recom_history[, .(contact_id, class)],
1485508065790:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485508065790:by = 'contact_id') %>%
1485508065791:.[, .(class_number = round(mean(class_number, na.rm = TRUE))), by = class] %>%
1485508065791:setnames(., 'class', 'final_class')
1485508071218:class2number
1485508108844:recom_history[, .(campaign_start_date)] %>% unique()
1485508126646:recom_history[, unique(campaign_start_date)]
1485508192492:class2number <- merge(
1485508192492:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)],
1485508192493:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485508192493:by = 'contact_id') %>%
1485508192494:.[, .(class_number = round(mean(class_number, na.rm = TRUE))), by = class] %>%
1485508192494:setnames(., 'class', 'final_class')
1485508196792:class2number
1485508210273:merge(
1485508210274:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)],
1485508210275:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485508210275:by = 'contact_id')
1485508213960:recom_history
1485508232590:merge(
1485508232590:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)],
1485508232591:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485508232591:by = 'contact_id') %>%
1485508232591:.[, .(class_number = mean(class_number, na.rm = TRUE)), by = class]
1485508245175:merge(
1485508245177:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)],
1485508245177:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485508245178:by = 'contact_id')
1485508265275:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485508297837:recom_history
1485508326310:recom_history
1485508341874:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)]
1485508353228:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)] %>% .[, .N, by = class]
1485508370330:recom_history_old[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)] %>% .[, .N, by = class]
1485508384646:recom_history <- getBigQueryResult(
1485508384648:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485508384648:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485508384648:debug = F,
1485508384649:project = "ems-incentives" ,
1485508384649:customer_id = getIdFromName(selected_customer)
1485508384650:) %>%
1485508384650:.[, campaign_start_date := ymd(floor_date(email_sent_date, unit = 'day'))] %>%
1485508384650:.[campaign_start_date >= ymd('2016-09-13')]
1485509099881:customer_settings <- yaml.load_file('customer_settings.yml')
1485509371008:recom_history_old <- copy(recom_history)
1485509523433:recom_history <- getRecomHistory(customer, refetch = FALSE)
1485509536709:source("global.R")
1485509556005:recom_history <- getRecomHistory(customer, refetch = FALSE)
1485509573597:source('global.R')
1485509576682:recom_history <- getRecomHistory(customer, refetch = FALSE)
1485509584820:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485510275714:source('global.R')
1485510279486:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485510839478:recom_history
1485510939817:source('global.R')
1485510941362:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485511003670:debug(getRecomHistory)
1485511005413:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485511016592:file.exists(file_name)
1485511028508:fread(file_name)
1485511097441:Q
1485511118330:file_name <- file.path('data', paste(customer, 'recom_history.csv', sep = '_'))
1485511126290:customer <- selected_customer
1485511131333:file_name <- file.path('data', paste(customer, 'recom_history.csv', sep = '_'))
1485511133182:recom_history <- fread(file_name)
1485511139168:recom_history
1485511158150:recom_history %>%
1485511158918:.[, campaign_start_date := as.Date(email_sent_date)] %>%
1485511159850:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485511187350:recom_history %>%
1485511187350:.[, campaign_start_date := as.Date(email_sent_date)] %>% .[]
1485511276613:recom_history_old
1485511289567:sapply(recom_history_old, class)
1485511303479:"POSIXct" %in% sapply(recom_history_old, class)
1485511308504:("POSIXct" %in% sapply(recom_history_old, class))
1485511313263:("integer" %in% sapply(recom_history_old, class))
1485511321809:("POSIXct" %in% sapply(recom_history_old, class))
1485511341275:("POSIXct" %in% recom_history_old['email_sent_date']
1485511343882:)
1485511353535:("POSIXct" %in% class(recom_history_old['email_sent_date']))
1485511361660:("POSIXct" %in% class(recom_history_old[, email_sent_date]))
1485511384235:("POSIXct" %in% class(recom_history_old[[email_sent_date]]))
1485511391643:("POSIXct" %in% class(recom_history_old[['email_sent_date']]))
1485511477825:convertTimeToDate <- function(dt, time_col = 'send_day') {
1485511477825:if (!'POSIXct' %in% class(dt[[time_col]])) {
1485511477826:dt[, c(time_col) := as.Date(fast_strptime(get(time_col), "%Y-%m-%d"))]
1485511477826:} else {
1485511477826:dt[, c(time_col) := as.Date(get(time_col))]
1485511477826:}
1485511477827:}
1485511480464:recom_history %>%
1485511480967:.[, campaign_start_date := convertTimeToDate(email_sent_date)] %>%
1485511481610:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485511588641:convertTimeToDate <- function(time_column) {
1485511588643:if (!'POSIXct' %in% class(time_column)) {
1485511588643:as.Date(fast_strptime(time_column), "%Y-%m-%d"))
1485511588644:} else {
1485511588644:as.Date(time_column)
1485511588645:}
1485511588645:}
1485511603652:convertTimeToDate <- function(time_column) {
1485511603653:if (!'POSIXct' %in% class(time_column)) {
1485511603654:as.Date(fast_strptime(time_column, "%Y-%m-%d"))
1485511603654:} else {
1485511603655:as.Date(time_column)
1485511603655:}
1485511603655:}
1485511606215:recom_history %>%
1485511606424:.[, campaign_start_date := convertTimeToDate(email_sent_date)] %>%
1485511606834:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485511612622:recom_history
1485511630942:cucc <- recom_history$email_sent_date
1485511631685:cucc
1485511634229:class(cucc)
1485511642037:convertTimeToDate(cucc)
1485511688090:fast_strptime()
1485511691516:?fast_strptime
1485511706903:cucc
1485511713490:cucc <- cucc[1:10]
1485511717914:fast_strptime(cucc)
1485511746246:fast_strptime(cucc, '%Y-%m-%dT%h:%m:%sZ')
1485511751187:fast_strptime(cucc, '%Y-%m-%dT%H:%m:%sZ')
1485511755507:fast_strptime(cucc, '%Y-%m-%dT%H:%M:%SZ')
1485511784044:convertTimeToDate <- function(time_column) {
1485511784045:if (!'POSIXct' %in% class(time_column)) {
1485511784046:as.Date(fast_strptime(time_column, '%Y-%m-%dT%H:%M:%SZ'))
1485511784046:} else {
1485511784046:as.Date(time_column)
1485511784046:}
1485511784047:}
1485511792975:recom_history %>%
1485511793365:.[, campaign_start_date := convertTimeToDate(email_sent_date)] %>%
1485511793786:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485511820876:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485511839156:undebug(getRecomHistory)
1485511842093:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485511898467:getRecomHistory <- function(customer, refetch = FALSE, customer_settings = customer_settings) {
1485511898468:file_name <- file.path('data', paste(customer, 'recom_history.csv', sep = '_'))
1485511898468:if (file.exists(file_name) & !refetch) {
1485511898469:recom_history <- fread(file_name)
1485511898469:} else {
1485511898469:recom_history <- getBigQueryResult(
1485511898470:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485511898471:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485511898471:debug = F,
1485511898471:project = "ems-incentives" ,
1485511898472:customer_id = getIdFromName(selected_customer)
1485511898472:)
1485511898472:if (length(recom_history) == 0) {
1485511898472:stop("Your query returned no result.")
1485511898473:} else {
1485511898473:fwrite(recom_history, file_name)
1485511898473:message(paste(file_name, ' written.'))
1485511898474:}
1485511898474:}
1485511898474:recom_history %>%
1485511898474:.[, campaign_start_date := convertTimeToDate(email_sent_date)] %>%
1485511898475:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485511898475:}
1485511899307:convertTimeToDate <- function(time_column) {
1485511899308:if (!'POSIXct' %in% class(time_column)) {
1485511899308:as.Date(fast_strptime(time_column, '%Y-%m-%dT%H:%M:%SZ'))
1485511899309:} else {
1485511899309:as.Date(time_column)
1485511899309:}
1485511899309:}
1485511902616:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485511951809:customer_settings
1485511962520:getRecomHistory <- function(customer, refetch = FALSE, customer_settings = customer_settings) {
1485511962521:file_name <- file.path('data', paste(customer, 'recom_history.csv', sep = '_'))
1485511962522:if (file.exists(file_name) & !refetch) {
1485511962522:recom_history <- fread(file_name)
1485511962522:} else {
1485511962523:recom_history <- getBigQueryResult(
1485511962523:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485511962524:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485511962524:debug = F,
1485511962524:project = "ems-incentives" ,
1485511962525:customer_id = getIdFromName(selected_customer)
1485511962526:)
1485511962527:if (length(recom_history) == 0) {
1485511962528:stop("Your query returned no result.")
1485511962530:} else {
1485511962531:fwrite(recom_history, file_name)
1485511962532:message(paste(file_name, ' written.'))
1485511962533:}
1485511962534:}
1485511962535:browser()
1485511962535:recom_history %>%
1485511962536:.[, campaign_start_date := convertTimeToDate(email_sent_date)] %>%
1485511962536:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485511962536:}
1485511965056:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485511999812:customer_settings
1485512010530:customer_settings
1485512041543:getRecomHistory <- function(customer, refetch = FALSE, c_settings = customer_settings) {
1485512041544:file_name <- file.path('data', paste(customer, 'recom_history.csv', sep = '_'))
1485512041545:if (file.exists(file_name) & !refetch) {
1485512041545:recom_history <- fread(file_name)
1485512041545:} else {
1485512041546:recom_history <- getBigQueryResult(
1485512041546:query = 'SELECT customer_id, contact_id, campaign_id, incentive_id, email_sent_date
1485512041546:FROM incentives.recommendation_histories_#{customer_id} WHERE customer_id = #{customer_id}',
1485512041546:debug = F,
1485512041547:project = "ems-incentives" ,
1485512041547:customer_id = getIdFromName(selected_customer)
1485512041548:)
1485512041548:if (length(recom_history) == 0) {
1485512041548:stop("Your query returned no result.")
1485512041549:} else {
1485512041549:fwrite(recom_history, file_name)
1485512041549:message(paste(file_name, ' written.'))
1485512041550:}
1485512041550:}
1485512041551:browser()
1485512041552:recom_history %>%
1485512041553:.[, campaign_start_date := convertTimeToDate(email_sent_date)] %>%
1485512041554:.[campaign_start_date >= ymd(c_settings[[customer]]$first_incentive_campaign_date)]  # exclude test campaign
1485512041555:}
1485512052295:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485512061647:c_settings
1485512131410:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485512180140:recom_history
1485512187661:recom_history_old
1485512224526:is.identical(recom_history, recom_history_old)
1485512230839:identical(recom_history, recom_history_old)
1485512239598:equals(recom_history, recom_history_old)
1485512324768:suppressPackageStartupMessages(
1485512324768:source('global.R')
1485512324769:)
1485512328413:args = commandArgs(trailingOnly=TRUE)
1485512328806:if (length(args)==0) {
1485512328808:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485512328808:} else{
1485512328809:selected_customer <- args[1]
1485512328809:}
1485512329857:message(sprintf("Currently selected customer: %s", selected_customer))
1485512346714:if (length(args)==0) {
1485512346715:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485512346716:} else{
1485512346716:selected_customer <- args[1]
1485512346716:}
1485512347671:message(sprintf("Currently selected customer: %s", selected_customer))
1485512350457:suppressPackageStartupMessages(
1485512350458:source('global.R')
1485512350458:)
1485512350709:args = commandArgs(trailingOnly=TRUE)
1485512350937:if (length(args)==0) {
1485512350937:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485512350938:} else{
1485512350939:selected_customer <- args[1]
1485512350940:}
1485512351213:message(sprintf("Currently selected customer: %s", selected_customer))
1485512352829:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485512355923:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485512355923:.[customerId == getIdFromName(selected_customer)]
1485512372782:recom_history <- merge(
1485512373564:recom_history,
1485512373987:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485512374297:by = 'incentive_id',
1485512374647:all.x = T) %>%
1485512375048:.[is.na(class), class := 'control']
1485512378382:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485512380253:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485512382498:recom_history <- merge(recom_history,
1485512383272:buying_probs,
1485512383632:by = c('contact_id', 'campaign_start_date'),
1485512383888:all.x = T) %>%
1485512384388:.[, has_buying_prob := !is.na(buying_prob)]
1485512389100:if (selected_customer %in% c('evolution_slimming', 'japancentre')) {
1485512389101:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485512389103:class2number <- merge(
1485512389103:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)],
1485512389104:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485512389104:by = 'contact_id') %>%
1485512389104:.[, .(class_number = mean(class_number, na.rm = TRUE)), by = class] %>%
1485512389105:setnames(., 'class', 'final_class')
1485512389106:recom_history <- recom_history %>%
1485512389107:merge(.,
1485512389109:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485512389110:by = 'contact_id',
1485512389111:all.x = T) %>%
1485512389113:.[!is.na(class_number)] %>%
1485512389116:merge(.,
1485512389117:class2number,
1485512389118:by = 'class_number') %>%
1485512389119:setnames(., 'class', 'old_class') %>%
1485512389119:setnames(., 'final_class', 'class') %>%
1485512389120:.[, `:=`(class_number = NULL)]
1485512389120:}
1485512402662:recom_history
1485512404334:recom_history
1485512411589:recom_history[, .N, by = class]
1485512421448:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485512423269:# Resolve incentive_ids ----------------------------------------------------
1485512423269:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485512423270:.[customerId == getIdFromName(selected_customer)]
1485512423286:recom_history <- merge(
1485512423287:recom_history,
1485512423288:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485512423288:by = 'incentive_id',
1485512423289:all.x = T) %>%
1485512423289:.[is.na(class), class := 'control']
1485512423679:# Add buying probs for every campaign -------------------------------------
1485512423679:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485512424103:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485512424104:recom_history <- merge(recom_history,
1485512424105:buying_probs,
1485512424105:by = c('contact_id', 'campaign_start_date'),
1485512424105:all.x = T) %>%
1485512424106:.[, has_buying_prob := !is.na(buying_prob)]
1485512428143:recom_history
1485512429439:recom_history
1485512433413:recom_history[, .N, by = class]
1485512468730:recom_history[, .(campaign_start_date)] %>% unique()
1485512606750:recom_history
1485512653009:yaml.load_file('customer_settings.yml')
1485512660753:yaml.load_file('customer_settings.yml')
1485512668960:yaml.load_file('customer_settings.yml')
1485512680929:yaml.load_file('customer_settings.yml')
1485512851056:cucc <- c(5, 6, 7)
1485512861104:a <- c(1, 4, 5)
1485512865080:!a %in% cucc
1485512936076:source('global.R')
1485512941221:recom_history <- getRecomHistory(selected_customer, refetch = FALSE) %>%
1485512941221:.[campaign_start_date >= ymd(customer_settings[[customer]]$first_incentive_campaign_date)] %>%
1485512941222:.[!campaign_id %in% customer_settings[[customer]]$campaigns_to_exclude]
1485512968767:recom_history <- getRecomHistory(selected_customer, refetch = FALSE) %>%
1485512968996:.[campaign_start_date >= ymd(customer_settings[[selected_customer]]$first_incentive_campaign_date)] %>%
1485512969241:.[!campaign_id %in% customer_settings[[selected_customer]]$campaigns_to_exclude]
1485512975884:recom_history
1485512982581:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485512982584:.[customerId == getIdFromName(selected_customer)]
1485512982602:recom_history <- merge(
1485512982602:recom_history,
1485512982602:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485512982602:by = 'incentive_id',
1485512982603:all.x = T) %>%
1485512982603:.[is.na(class), class := 'control']
1485512985750:recom_history
1485512987444:recom_history
1485512992410:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485512992860:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485512996524:recom_history <- merge(recom_history,
1485512996524:buying_probs,
1485512996525:by = c('contact_id', 'campaign_start_date'),
1485512996525:all.x = T) %>%
1485512996526:.[, has_buying_prob := !is.na(buying_prob)]
1485512999646:recom_history
1485513001182:recom_history
1485513078884:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485513088127:class2number <- merge(
1485513088562:recom_history[campaign_start_date < ymd('2016-10-23'), .(contact_id, class)],
1485513088948:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485513089315:by = 'contact_id') %>%
1485513089774:.[, .(class_number = mean(class_number, na.rm = TRUE)), by = class] %>%
1485513090495:setnames(., 'class', 'final_class')
1485513095257:class2number
1485513136212:class2number <- merge(
1485513136213:recom_history[, .(contact_id, class)],
1485513136214:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485513136214:by = 'contact_id')
1485513144027:class2number
1485513151011:class2number[, .N, class]
1485513167068:class2number[, .N, class_number]
1485513192117:recom_history
1485513198078:recom_history[, .N, by = class]
1485513236901:incentive_ids
1485513487722:class2number
1485513493309:class2number <- merge(
1485513493309:recom_history[, .(contact_id, class)],
1485513493310:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485513493311:by = 'contact_id') %>%
1485513493311:.[, .(class_number = mean(class_number, na.rm = TRUE)), by = class] %>%
1485513493311:setnames(., 'class', 'final_class')
1485513496971:class2number
1485513547710:source("global.R")
1485513551958:customer_settings$class_numbers_in_contact0
1485513556558:customer_settings$class_numbers_in_contact0 %>% as.data.table()
1485513560737:customer_settings$class_numbers_in_contact0 %>% data.table()
1485513621657:class_numbers <- customer_settings$class_numbers_in_contact0
1485513622139:data.table(final_class = names(class_numbers), class_number = class_numbers)
1485513648944:class2number <- customer_settings$class_numbers_in_contact0 %>%
1485513649302:data.table(final_class = names(.), class_number = .)
1485513654993:class2number
1485513674555:recom_history_old <- copy(recom_history)
1485513684460:recom_history <- recom_history %>%
1485513684460:merge(.,
1485513684461:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485513684461:by = 'contact_id',
1485513684462:all.x = T) %>%
1485513684462:.[!is.na(class_number)] %>%
1485513684463:merge(.,
1485513684463:class2number,
1485513684464:by = 'class_number') %>%
1485513684465:setnames(., 'class', 'old_class') %>%
1485513684465:setnames(., 'final_class', 'class') %>%
1485513684466:.[, `:=`(class_number = NULL)]
1485513704758:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485513709819:class2number <- merge(
1485513709820:recom_history[, .(contact_id, class)],
1485513709821:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485513709821:by = 'contact_id') %>%
1485513709821:.[, .(class_number = mean(class_number, na.rm = TRUE)), by = class] %>%
1485513709822:setnames(., 'class', 'final_class')
1485513713250:class2number
1485513719959:class2number <- customer_settings$class_numbers_in_contact0 %>%
1485513719959:data.table(final_class = names(.), class_number = .)
1485513722177:class2number
1485513736681:class2number <- customer_settings$class_numbers_in_contact0 %>%
1485513736682:data.table(final_class = names(.), class_number = unlist(.))
1485513741235:class2number
1485513766193:class2number <- customer_settings$class_numbers_in_contact0 %>%
1485513766194:data.table(final_class = names(.), class_number = .[[1]])
1485513768957:class2number
1485513800926:customer_settings$class_numbers_in_contact0
1485513805560:customer_settings$class_numbers_in_contact0 %>% unlist()
1485513824992:class2number <- unlist(customer_settings$class_numbers_in_contact0) %>%
1485513824992:data.table(final_class = names(.), class_number = .)
1485513829138:class2number
1485513837178:recom_history <- recom_history %>%
1485513837178:merge(.,
1485513837179:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485513837180:by = 'contact_id',
1485513837180:all.x = T) %>%
1485513837180:.[!is.na(class_number)] %>%
1485513837181:merge(.,
1485513837181:class2number,
1485513837181:by = 'class_number') %>%
1485513837182:setnames(., 'class', 'old_class') %>%
1485513837182:setnames(., 'final_class', 'class') %>%
1485513837182:.[, `:=`(class_number = NULL)]
1485513842154:recom_history
1485513843504:recom_history
1485513852014:recom_history[, .N, by = class()]
1485513854057:recom_history[, .N, by = class]
1485513872217:recom_history[class == old_class, .N, by = class]
1485529428031:source('src/read_data.R')
1485529436251:packrat::status()
1485529468774:install.packages('emsconnectr', type = 'source')
1485529517895:packrat::status()
1485529526202:.myfuncs$useEmarsysCRAN()
1485529536058:install.packages('emsconnectr', type = 'source')
1485531775167:install.packages('bigrquery', 'stringr', 'stringi')
1485531788896:install.packages('bigrquery')
1485531804844:install.packages('stringr')
1485531816717:install.packages('stringi')
1485531838417:install.packages('devtools')
1485531848785:library('emsconnectr')
1485531858121:install.packages('emsconnectr', type = 'source')
1485531883353:devtools::install_github('rstats-db/bigrquery')
1485531897513:library('emsconnectr')
1485531901003:sessionInfo()
1485531913768:library(ggplot2)
1485531920698:install.packages('ggplot2')
1485531932589:library(ggplot2)
1485531937438:full_data <- mergeFullData("tv123", "2015-10")
1485531945166:source("src/read_data.R")
1485531984741:source("src/read_data.R")
1485532002161:source("src/read_data.R")
1485532023977:install.packages('caret')
1485532152350:source("global.R")
1485532160839:install.packages('ROCR')
1485532172628:source("global.R")
1485532174164:full_data <- mergeFullData("tv123", "2015-10")
1485532208483:full_data <- mergeFullData("sheridynswim", "2016-12")
1485532276700:getIdFromName('tv123')
1485532292435:getIdFromName('tv123')
1485532317132:getIdFromName('123tv')
1485532326916:getIdFromSiName('tv123')
1485532380822:getIdFromName('tv123')
1485532400048:getIdFromName(si_name = 'tv123')
1485532462618:source("src/db_tools.R")
1485532473353:source("global.R")
1485532492021:library('emsconnectr')
1485532499891:getIdFromName(si_name = 'tv123')
1485532506603:getIdFromName(si_name = 'tv123')
1485532552607:get_customer_info('tv123')
1485532601480:readSqlResult
1485533000223:full_data <- mergeFullData("tv123", "2015-10")
1485533003447:full_data
1485533044548:readData <- function(customer, target_month, type) {
1485533044548:if (!(type %in% c("email", "purchases"))) {
1485533044549:stop("type should be either email or purchases")
1485533044550:}
1485533044550:data_file_name <- file.path(
1485533044551:'data', type,
1485533044551:paste0(customer, '-', type, '_', target_month, '.csv')
1485533044552:)
1485533044552:if (file.exists(data_file_name)) {
1485533044553:data <- fread(data_file_name)
1485533044554:} else {
1485533044554:query <- paste0('sql/monthly_', type, '.sql')
1485533044555:data <- get_sql_result(query, customer, target_month)
1485533044556:suppressWarnings(dir.create(file.path('data', type)))
1485533044558:write.csv(data, file = data_file_name, row.names = FALSE, quote = FALSE)
1485533044560:}
1485533044561:data
1485533044562:}
1485533049936:full_data <- mergeFullData("tv123", "2015-10")
1485533386031:full_data
1485533395601:class(full_data)
1485533402361:nrow(full_data)
1485533690182:full_data[open_rate == 0]
1485533694363:full_data[open_rate_0 == 0]
1485533702560:full_data[open_rate_1 == 0]
1485533716520:nrow(full_data[open_rate_1 == 0])
1485533717593:nrow(full_data[click_rate_1 == 0])
1485533739253:nrow(full_data[open_rate_1 > 0])
1485533739910:nrow(full_data[click_rate_1 > 0])
1485533766800:nrow(full-data)
1485533770112:nrow(full_data)
1485533836940:nrow(full_data[open_rate_1 == 0 & open_rate_2 == 0 & open_rate_3 == 0 & open_rate_4 == 0 & open_rate_5 == 0 & open_rate_6 == 0])
1485533922030:nrow(full_data[open_rate_7 == 0 & open_rate_8 == 0 & open_rate_9 == 0 & open_rate_10 == 0 & open_rate_11 == 0 & open_rate_12 == 0])
1485533946462:nrow(full_data[open_rate_7 == 0 & open_rate_8 == 0 & open_rate_9 == 0 & open_rate_10 == 0 & open_rate_11 == 0 & open_rate_12 == 0] & sales_amount_6 > 0)
1485533965446:nrow(full_data[open_rate_7 == 0 & open_rate_8 == 0 & open_rate_9 == 0 & open_rate_10 == 0 & open_rate_11 == 0 & open_rate_12 == 0 & sales_amount_6 > 0])
1485533990818:3698/132891
1485534042761:mergeFullData <- function(customer, target_month) {
1485534042762:purchases <- readData(customer, target_month, "purchases")
1485534042763:# fillNAsWithZeros(purchases)
1485534042763:email <- readData(customer, target_month, "email")
1485534042764:email <- email[!is.na(open_rate_0)]  # exclude who get no email in target month
1485534042765:# fillNAsWithZeros(email)
1485534042766:setkey(purchases, contact_id)
1485534042767:setkey(email, contact_id)
1485534042768:joinActivityForTargetMonth(purchases[email])
1485534042770:}
1485534046529:full_data <- mergeFullData("tv123", "2015-10")
1485534050546:nrow(full_data[open_rate_1 > 0])
1485534052682:nrow(full_data[click_rate_1 > 0])
1485534054691:nrow(full_data[open_rate_1 == 0 & open_rate_2 == 0 & open_rate_3 == 0 & open_rate_4 == 0 & open_rate_5 == 0 & open_rate_6 == 0])
1485534056778:nrow(full_data[open_rate_7 == 0 & open_rate_8 == 0 & open_rate_9 == 0 & open_rate_10 == 0 & open_rate_11 == 0 & open_rate_12 == 0 & sales_amount_6 > 0])
1485534063970:full_data
1485534141672:full_data[sales_amount_1 > 0]
1485534148222:nrow(full_data[sales_amount_1 > 0])
1485534168774:nrow(full_data[sales_amount_1 > 0])
1485534182313:16500/300000
1485534335040:50*0.05
1485534372400:2.5 * 0.05
1485769945797:suppressPackageStartupMessages(
1485769945799:source('global.R')
1485769945800:)
1485769948920:args = commandArgs(trailingOnly=TRUE)
1485769949599:if (length(args)==0) {
1485769949600:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485769949601:} else{
1485769949602:selected_customer <- args[1]
1485769949604:}
1485769950985:message(sprintf("Currently selected customer: %s", selected_customer))
1485769953825:recom_history <- getRecomHistory(selected_customer, refetch = FALSE) %>%
1485769954336:.[campaign_start_date >= ymd(customer_settings[[selected_customer]]$first_incentive_campaign_date)] %>%
1485769954722:.[!campaign_id %in% customer_settings[[selected_customer]]$campaigns_to_exclude]
1485769960755:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485769961209:.[customerId == getIdFromName(selected_customer)]
1485769962386:recom_history <- merge(
1485769962876:recom_history,
1485769963256:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485769963638:by = 'incentive_id',
1485769964058:all.x = T) %>%
1485769964497:.[is.na(class), class := 'control']
1485769969222:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485769969929:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485769972150:recom_history <- merge(recom_history,
1485769972712:buying_probs,
1485769973074:by = c('contact_id', 'campaign_start_date'),
1485769973462:all.x = T) %>%
1485769973846:.[, has_buying_prob := !is.na(buying_prob)]
1485769979717:if (selected_customer %in% c('evolution_slimming', 'japancentre')) {
1485769979718:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485769979719:class2number <- unlist(customer_settings$class_numbers_in_contact0) %>%
1485769979720:data.table(final_class = names(.), class_number = .)
1485769979722:recom_history <- recom_history %>%
1485769979723:merge(.,
1485769979724:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485769979726:by = 'contact_id',
1485769979727:all.x = T) %>%
1485769979728:.[!is.na(class_number)] %>%
1485769979729:merge(.,
1485769979730:class2number,
1485769979731:by = 'class_number') %>%
1485769979731:setnames(., 'class', 'old_class') %>%
1485769979732:setnames(., 'final_class', 'class') %>%
1485769979733:.[, `:=`(class_number = NULL)]
1485769979734:}
1485769984198:contact_id_registration <- getSqlResult(
1485769984712:query = 'SELECT source_id AS contact_id, registered_on FROM #{customer_name}.dm_dim_contact;',
1485769985112:database_name = 'si',
1485769985513:use_ssh_tunnel = T,
1485769985921:customer_name = selected_customer
1485769986326:)
1485770024742:incentive_ids
1485770152242:recom_history <- recom_history %>%
1485770152243:merge(.,
1485770152244:contact_id_registration,
1485770152244:by = c('contact_id')
1485770152245:)
1485770156972:recom_history
1485770167659:recom_history[, .N, by = class]
1485770356550:getIdFromName('fashiondays')
1485770368951:getIdFromName('fashiondays_ems')
1485770376150:getIdFromName('fashiondays_ems')
1485770385435:getSiNameFromId(286267097)
1485770471324:suppressPackageStartupMessages(
1485770471325:source('global.R')
1485770471326:)
1485770473940:args = commandArgs(trailingOnly=TRUE)
1485770473941:if (length(args)==0) {
1485770473941:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485770473941:} else{
1485770473942:selected_customer <- args[1]
1485770473942:}
1485770473943:message(sprintf("Currently selected customer: %s", selected_customer))
1485770473945:# Load raw recom_history --------------------------------------------------
1485770473946:recom_history <- getRecomHistory(selected_customer, refetch = FALSE) %>%
1485770473946:.[campaign_start_date >= ymd(customer_settings[[selected_customer]]$first_incentive_campaign_date)] %>%
1485770473947:.[!campaign_id %in% customer_settings[[selected_customer]]$campaigns_to_exclude]
1485770477754:# Resolve incentive_ids ----------------------------------------------------
1485770477755:incentive_ids <- fread('data/incentive_ids.csv') %>%
1485770477756:.[customerId == getIdFromName(selected_customer)]
1485770477799:recom_history <- merge(
1485770477799:recom_history,
1485770477800:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1485770477800:by = 'incentive_id',
1485770477801:all.x = T) %>%
1485770477801:.[is.na(class), class := 'control']
1485770478245:# Add buying probs for every campaign -------------------------------------
1485770478246:buying_probs <- getBuyingProbsForDates(selected_customer, recom_history[, unique(campaign_start_date)])
1485770478793:setnames(buying_probs, 'day_of_calculation', 'campaign_start_date')
1485770478794:recom_history <- merge(recom_history,
1485770478794:buying_probs,
1485770478794:by = c('contact_id', 'campaign_start_date'),
1485770478795:all.x = T) %>%
1485770478795:.[, has_buying_prob := !is.na(buying_prob)]
1485770480031:# Load corrected final classes for evolution_slimming and japancentre -----
1485770480032:if (selected_customer %in% c('evolution_slimming', 'japancentre')) {
1485770480032:contact_classes <- fread(sprintf('data/contact_final_classes_%s.csv', selected_customer))
1485770480033:class2number <- unlist(customer_settings$class_numbers_in_contact0) %>%
1485770480033:data.table(final_class = names(.), class_number = .)
1485770480034:recom_history <- recom_history %>%
1485770480035:merge(.,
1485770480036:contact_classes[, .(contact_id, class_number = as.numeric(class))],
1485770480036:by = 'contact_id',
1485770480037:all.x = T) %>%
1485770480038:.[!is.na(class_number)] %>%
1485770480038:merge(.,
1485770480039:class2number,
1485770480040:by = 'class_number') %>%
1485770480040:setnames(., 'class', 'old_class') %>%
1485770480041:setnames(., 'final_class', 'class') %>%
1485770480042:.[, `:=`(class_number = NULL)]
1485770480043:}
1485770482261:# Load registration dates -------------------------------------------------
1485770482262:contact_id_registration <- getSqlResult(
1485770482262:query = 'SELECT source_id AS contact_id, registered_on FROM #{customer_name}.dm_dim_contact;',
1485770482263:database_name = 'si',
1485770482263:use_ssh_tunnel = T,
1485770482264:customer_name = selected_customer
1485770482264:)
1485770565822:recom_history <- recom_history %>%
1485770565823:merge(.,
1485770565824:contact_id_registration,
1485770565824:by = c('contact_id')
1485770565825:)
1485770583061:getIdFromName('fashiondays_ems')
1485770591036:getSiNameFromId(286267097)
1485770684480:purchases_si <- getSqlResult(
1485770684481:'sql/purchases_si.sql',
1485770684482:database_name = 'si',
1485770684482:use_ssh_tunnel = T,
1485770684482:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1485770684483:start_date = AIM_LOAD_START,
1485770684483:end_date = Sys.Date())
1485770779205:purchases_si
1485770805845:?date
1485770880483:purchases_si <- getSqlResult(
1485770880483:'sql/purchases_si.sql',
1485770880484:database_name = 'si',
1485770880485:use_ssh_tunnel = T,
1485770880485:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1485770880485:start_date = AIM_LOAD_START,
1485770880485:end_date = Sys.Date()) %>%
1485770880486:.[, .(sales_amount = sum(sales_amount)), by = .(contact_id, order_id, purchase_date, campaign_id)]
1485770938226:purchases_hds <- getBigQueryResult(
1485770938226:file_name = 'sql/bq_purchase_hds.sql',
1485770938228:debug = F,
1485770938228:useLegacySql = F,
1485770938229:customer_id = getIdFromName(selected_customer)
1485770938229:) %>%
1485770938229:.[, event_time := ymd_hms(event_time)] %>%
1485770938230:.[, purchase_date := date(event_time)]
1485770950883:purchases_si
1485770974984:purchases_hds <- getBigQueryResult(
1485770974985:sql_file = 'sql/bq_purchase_hds.sql',
1485770974986:debug = F,
1485770974987:useLegacySql = F,
1485770974987:customer_id = getIdFromName(selected_customer)
1485770974988:) %>%
1485770974989:.[, event_time := ymd_hms(event_time)] %>%
1485770974990:.[, purchase_date := date(event_time)]
1485770989551:purchases_hds
1485770990783:purchases_hds
1485771068041:lifecycle_limits <- getLifecycleLimits('data', c(selected_customer), update_ymls = T) %>%
1485771068042:.[, `:=`(defecting_recency_limit = as.numeric(defecting_recency_limit),
1485771068043:inactive_recency_limit = as.numeric(inactive_recency_limit))]
1485771151954:lifecycle_status_for_contacts <- recom_history %>%
1485771151955:.[, .(contact_id, campaign_start_date)] %>%
1485771151956:merge(
1485771151956:.,
1485771151956:purchases_si[, sum(sales_amount), by = .(contact_id, purchase_date)],
1485771151957:by = 'contact_id'
1485771151957:) %>%
1485771151958:.[purchase_date < campaign_start_date,
1485771151959:`:=`(num_previous_purchases = .N,
1485771151960:last_purchase_recency = campaign_start_date - max(purchase_date)
1485771151960:),
1485771151960:by = .(contact_id, campaign_start_date)] %>%
1485771151961:.[, .(num_previous_purchases = max(num_previous_purchases, na.rm = T),
1485771151961:last_purchase_recency = max(last_purchase_recency, na.rm = T)),
1485771151961:by = .(contact_id, campaign_start_date)] %>%
1485771151962:.[, lifecycle_status := ifelse(is.infinite(num_previous_purchases), 'lead',
1485771151962:ifelse(num_previous_purchases == 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'first_time_buyer',
1485771151963:ifelse(num_previous_purchases > 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'active',
1485771151964:ifelse(last_purchase_recency < lifecycle_limits[, inactive_recency_limit], 'defecting', 'inactive'))))]
1485771263128:lifecycle_status_for_contacts <- recom_history %>%
1485771263129:.[, .(contact_id, campaign_start_date)] %>%
1485771263130:merge(
1485771263130:.,
1485771263131:purchases_si[, sum(sales_amount), by = .(contact_id, purchase_date)],
1485771263132:by = 'contact_id'
1485771263132:) %>%
1485771263133:.[purchase_date < campaign_start_date,
1485771263133:`:=`(num_previous_purchases = .N,
1485771263133:last_purchase_recency = campaign_start_date - max(purchase_date)
1485771263134:),
1485771263134:by = .(contact_id, campaign_start_date)] %>%
1485771263134:.[, .(num_previous_purchases = suppressWarning(max(num_previous_purchases, na.rm = T)),
1485771263135:last_purchase_recency = suppressWarning(max(last_purchase_recency, na.rm = T))),
1485771263136:by = .(contact_id, campaign_start_date)] %>%
1485771263136:.[, lifecycle_status := ifelse(is.infinite(num_previous_purchases), 'lead',
1485771263136:ifelse(num_previous_purchases == 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'first_time_buyer',
1485771263137:ifelse(num_previous_purchases > 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'active',
1485771263137:ifelse(last_purchase_recency < lifecycle_limits[, inactive_recency_limit], 'defecting', 'inactive'))))]
1485771307812:lifecycle_status_for_contacts <- recom_history %>%
1485771307813:.[, .(contact_id, campaign_start_date)] %>%
1485771307814:merge(
1485771307814:.,
1485771307814:purchases_si[, sum(sales_amount), by = .(contact_id, purchase_date)],
1485771307815:by = 'contact_id'
1485771307815:) %>%
1485771307816:.[purchase_date < campaign_start_date,
1485771307817:`:=`(num_previous_purchases = .N,
1485771307818:last_purchase_recency = campaign_start_date - max(purchase_date)
1485771307818:),
1485771307819:by = .(contact_id, campaign_start_date)] %>%
1485771307819:.[, .(num_previous_purchases = suppressWarnings(max(num_previous_purchases, na.rm = T)),
1485771307820:last_purchase_recency = suppressWarnings(max(last_purchase_recency, na.rm = T))),
1485771307820:by = .(contact_id, campaign_start_date)] %>%
1485771307820:.[, lifecycle_status := ifelse(is.infinite(num_previous_purchases), 'lead',
1485771307821:ifelse(num_previous_purchases == 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'first_time_buyer',
1485771307821:ifelse(num_previous_purchases > 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'active',
1485771307822:ifelse(last_purchase_recency < lifecycle_limits[, inactive_recency_limit], 'defecting', 'inactive'))))]
1485771354431:max(NA, NA, NA)
1485771359414:max(NA, NA, NA, na.rm = T)
1485771366567:suppressWarnings(max(NA, NA, NA, na.rm = T))
1485771389896:cucc <- data.table(a = c(NA, NA, NA))
1485771400250:cucc[, max(a, na.rm = TRUE)]
1485771411117:cucc[, suppressWarnings(max(a, na.rm = TRUE))]
1485771450637:cucc[, suppressWarnings(max(a, na.rm = TRUE))] %>% class()
1485771456045:cucc[, suppressWarnings(max(a, na.rm = TRUE))]
1485771477829:lifecycle_status_for_contacts <- recom_history %>%
1485771477830:.[, .(contact_id, campaign_start_date)] %>%
1485771477831:merge(
1485771477831:.,
1485771477832:purchases_si[, sum(sales_amount), by = .(contact_id, purchase_date)],
1485771477832:by = 'contact_id'
1485771477833:) %>%
1485771477833:.[purchase_date < campaign_start_date,
1485771477834:`:=`(num_previous_purchases = .N,
1485771477834:last_purchase_recency = campaign_start_date - max(purchase_date)
1485771477835:),
1485771477835:by = .(contact_id, campaign_start_date)] %>%
1485771477836:.[, .(num_previous_purchases = suppressWarnings(as.numeric(max(num_previous_purchases, na.rm = T))),
1485771477836:last_purchase_recency = suppressWarnings(as.numeric(max(last_purchase_recency, na.rm = T)))),
1485771477837:by = .(contact_id, campaign_start_date)] %>%
1485771477837:.[, lifecycle_status := ifelse(is.infinite(num_previous_purchases), 'lead',
1485771477837:ifelse(num_previous_purchases == 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'first_time_buyer',
1485771477838:ifelse(num_previous_purchases > 1 & last_purchase_recency < lifecycle_limits[, defecting_recency_limit], 'active',
1485771477838:ifelse(last_purchase_recency < lifecycle_limits[, inactive_recency_limit], 'defecting', 'inactive'))))]
1485771562762:purchases_si[, min(purchase_date)]
1485771691876:recom_history <- recom_history %>%
1485771691876:merge(.,
1485771691877:lifecycle_status_for_contacts[, .(contact_id, campaign_start_date, lifecycle_status)],
1485771691878:by = c('contact_id', 'campaign_start_date'),
1485771691878:all.x = T) %>%
1485771691878:.[is.na(lifecycle_status), lifecycle_status := 'lead']
1485771786952:clicks_w_campaigns <- getBigQueryResult(
1485771786953:query = 'SELECT customer_id, contact_id, campaign_id, event_time
1485771786954:FROM incentives.clicks_#{customer_id} WHERE customer_id = #{customer_id} AND campaign_id in (#{campaign_id_list})',
1485771786955:debug = F,
1485771786956:customer_id = getIdFromName(selected_customer),
1485771786956:campaign_id_list = paste(recom_history[, unique(campaign_id)], collapse = ',')
1485771786957:)
1485771795416:opens_w_campaigns <- getSqlResult(
1485771795416:file = 'sql/opens_w_campaign.sql',
1485771795417:database_name = 'hds',
1485771795418:use_ssh_tunnel = TRUE,
1485771795418:customer_id = getIdFromName(selected_customer),
1485771795418:campaign_id_list = paste(recom_history[, unique(campaign_id)], collapse = ',')
1485771795419:)
1485771807502:opens_w_campaigns <- getSqlResult(
1485771807503:sql_file = 'sql/opens_w_campaign.sql',
1485771807504:database_name = 'hds',
1485771807504:use_ssh_tunnel = TRUE,
1485771807504:customer_id = getIdFromName(selected_customer),
1485771807505:campaign_id_list = paste(recom_history[, unique(campaign_id)], collapse = ',')
1485771807505:)
1485771876781:recom_history <- recom_history %>%
1485771876782:merge(.,
1485771876783:opens_w_campaigns[, .(did_open = TRUE, open_date = date(open_time)), by = .(contact_id, campaign_id)],
1485771876784:by = c('contact_id', 'campaign_id'),
1485771876784:all.x = T) %>%
1485771876784:merge(.,
1485771876785:clicks_w_campaigns[, .(did_click = TRUE, click_date = date(event_time)), by = .(contact_id, campaign_id)],
1485771876785:by = c('contact_id', 'campaign_id'),
1485771876786:all.x = T) %>%
1485771876786:.[is.na(did_open), did_open := FALSE] %>%
1485771876786:.[is.na(did_click), did_click := FALSE]
1485771894235:save(
1485771894237:list = c('recom_history', 'purchases_hds', 'purchases_si'),
1485771894238:file = sprintf('data/enriched_recom_history_data_%s.RData', selected_customer)
1485771894238:)
1485774266098:write_files <- F
1485774270632:num_campaigns <- nrow(unique(recom_history, by = 'campaign_start_date'))
1485774270729:first_campaign <- recom_history[, min(campaign_start_date)]
1485774270745:last_campaign <- recom_history[, max(campaign_start_date)]
1485774275152:tmp_dt <- recom_history %>%
1485774275153:.[order(class)] %>%
1485774275153:.[,
1485774275154:.(.N,
1485774275154:num_open = sum(did_open, na.rm = T),
1485774275155:num_click = sum(did_click, na.rm = T),
1485774275155:open_rate = sum(did_open, na.rm = T) / .N,
1485774275156:click_rate = sum(did_click, na.rm = T) / .N),
1485774275156:by = class
1485774275157:]
1485774278978:tmp_dt %>%
1485774278978:melt(id.vars = c('class', 'N'), measure.vars = c('click_rate', 'open_rate')) %>%
1485774278979:ggplot(aes(x = class, y = 100*value, fill = class)) +
1485774278980:geom_bar(stat = 'identity', position = 'dodge') +
1485774278980:facet_grid(variable ~ ., scales = 'free_y') +
1485774278980:geom_label(aes(label = sprintf('%0.2f %%', 100*value)), show.legend = F) +
1485774278981:geom_text(aes(y = min(0.5*100*value), label = sprintf('N = %d', N))) +
1485774278981:labs(x = 'Segment',
1485774278981:y = "%",
1485774278982:fill = 'Segment',
1485774278982:title = sprintf("Aggregated open and click rates (%s)\n(N is summed up over %d campaigns)",
1485774278982:Hmisc::capitalize(selected_customer), num_campaigns))
1485774389179:tmp_dt <- recom_history %>%
1485774389179:# .[registered_on < first_campaign] %>%
1485774389180:.[,
1485774389181:.(.N,
1485774389181:num_open = sum(did_open, na.rm = T),
1485774389181:num_click = sum(did_click, na.rm = T),
1485774389182:open_rate = 100*sum(did_open, na.rm = T) / .N,
1485774389182:click_rate = 100*sum(did_click, na.rm = T) / .N,
1485774389182:ctr = 100*sum(did_click, na.rm = T) / sum(did_open, na.rm = T),
1485774389183:open_sd = 100*sd(!is.na(did_open), na.rm = T) / sqrt(.N),
1485774389183:click_sd = 100*sd(!is.na(did_click), na.rm = T) / sqrt(.N),
1485774389183:ctr_sd = 100*sd(!is.na(did_click[!is.na(did_open)])) / sqrt(sum(!is.na(did_open)))),
1485774389184:by = .(class, has_buying_prob)
1485774389184:] %>%
1485774389184:.[, facet := ifelse(has_buying_prob, "Has buying prob.", "No buying prob.")] %>%
1485774389185:.[order(has_buying_prob, class)]
1485774395282:tmp_dt %>%
1485774395282:ggplot(aes(x = class, y = open_rate, fill = class)) +
1485774395283:geom_bar(stat = 'identity') +
1485774395284:geom_linerange(aes(ymin = open_rate - open_sd, ymax = open_rate + open_sd)) +
1485774395284:facet_grid(facet ~ ., scales = 'free_y') +
1485774395284:labs(x = 'Segment',
1485774395285:y = "%",
1485774395285:fill = 'Segment',
1485774395286:title = sprintf("Aggregated open rates (%s)\n(N is summed up over %d campaigns)",
1485774395286:Hmisc::capitalize(selected_customer), num_campaigns))
1485774412105:tmp_dt %>%
1485774412106:ggplot(aes(x = class, y = click_rate, fill = class)) +
1485774412107:geom_bar(stat = 'identity') +
1485774412107:geom_linerange(aes(ymin = click_rate - click_sd, ymax = click_rate + click_sd)) +
1485774412107:facet_grid(facet ~ ., scales = 'free_y') +
1485774412108:labs(x = 'Segment',
1485774412109:y = "%",
1485774412110:fill = 'Segment',
1485774412111:title = sprintf("Aggregated click rates (%s)\n(N is summed up over %d campaigns)",
1485774412112:Hmisc::capitalize(selected_customer), num_campaigns))
1485776844579:recom_history
1485776877365:suppressPackageStartupMessages(
1485776877366:source('global.R')
1485776877367:)
1485776880875:args = commandArgs(trailingOnly=TRUE)
1485776880876:if (length(args)==0) {
1485776880876:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485776880877:} else{
1485776880877:selected_customer <- args[1]
1485776880877:}
1485776882444:message(sprintf("Currently selected customer: %s", selected_customer))
1485776884763:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485777144459:source('global.R')
1485777156057:customer_settings$fashiondays_ems$incentive_expiration_days
1485777163555:customer_settings$evolution_slimming$incentive_expiration_days
1485777346346:source('global.R')
1485777349412:time_window <- ifelse(
1485777349412:is.null(customer_settings[[customer]]$incentive_expiration_days),
1485777349413:ATTRIBUTION_TIME_WINDOW,
1485777349414:customer_settings[[customer]]$incentive_expiration_days
1485777349414:)
1485777362023:time_window <- ifelse(
1485777362024:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1485777362024:ATTRIBUTION_TIME_WINDOW,
1485777362025:customer_settings[[selected_customer]]$incentive_expiration_days
1485777362025:)
1485777365514:time_window
1485777672869:purchases_w_campaign <- merge(
1485777672870:purchases_si[purchase_date < recom_history[, max(campaign_start_date)] + time_window + 1,
1485777672871:.(contact_id, order_id, purchase_date, sales_amount)],
1485777672871:recom_history[, .(contact_id, campaign_id, campaign_start_date)],
1485777672872:by = 'contact_id'
1485777672872:) %>%
1485777672872:.[, elapsed := (purchase_date - campaign_start_date)] %>%
1485777672873:.[elapsed >= 0 & elapsed < duration(time_window, units = 'days')] %>%
1485777672873:.[, min_elapsed := min(elapsed), by = .(contact_id, purchase_date)] %>%
1485777672875:.[elapsed == min_elapsed] %>%
1485777672876:.[, `:=`(elapsed = NULL, min_elapsed = NULL)]
1485777828231:recom_history_w_purchase <- purchases_w_campaign %>%
1485777828232:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485777828233:merge(recom_history,
1485777828234:.,
1485777828234:by = c('contact_id', 'campaign_id'),
1485777828235:all.x = TRUE)
1485777834900:recom_history_w_purchase
1485779299642:tmp_dt <- recom_history %>%
1485779299643:# .[registered_on < first_campaign] %>%
1485779299644:.[,
1485779299644:.(.N,
1485779299645:num_open = sum(did_open, na.rm = T),
1485779299645:num_click = sum(did_click, na.rm = T),
1485779299645:open_rate = 100*sum(did_open, na.rm = T) / .N,
1485779299646:click_rate = 100*sum(did_click, na.rm = T) / .N,
1485779299646:ctr = 100*sum(did_click, na.rm = T) / sum(did_open, na.rm = T),
1485779299646:open_sd = 100*sd(!is.na(did_open), na.rm = T) / sqrt(.N),
1485779299647:click_sd = 100*sd(!is.na(did_click), na.rm = T) / sqrt(.N),
1485779299647:ctr_sd = 100*sd(!is.na(did_click[!is.na(did_open)])) / sqrt(sum(!is.na(did_open)))),
1485779299647:by = .(class, has_buying_prob)
1485779299648:] %>%
1485779299648:.[, facet := ifelse(has_buying_prob, "Has buying prob.", "No buying prob.")] %>%
1485779299649:.[order(has_buying_prob, class)]
1485779299949:tmp_dt %>%
1485779299949:ggplot(aes(x = class, y = open_rate, fill = class)) +
1485779299951:geom_bar(stat = 'identity') +
1485779299951:geom_linerange(aes(ymin = open_rate - open_sd, ymax = open_rate + open_sd)) +
1485779299951:facet_grid(facet ~ ., scales = 'free_y') +
1485779299951:labs(x = 'Segment',
1485779299952:y = "%",
1485779299952:fill = 'Segment',
1485779299952:title = sprintf("Aggregated open rates (%s)\n(N is summed up over %d campaigns)",
1485779299953:Hmisc::capitalize(selected_customer), num_campaigns))
1485779336004:tmp_dt %>%
1485779336007:ggplot(aes(x = class, y = click_rate, fill = class)) +
1485779336007:geom_bar(stat = 'identity') +
1485779336007:geom_linerange(aes(ymin = click_rate - click_sd, ymax = click_rate + click_sd)) +
1485779336008:facet_grid(facet ~ ., scales = 'free_y') +
1485779336008:labs(x = 'Segment',
1485779336009:y = "%",
1485779336010:fill = 'Segment',
1485779336010:title = sprintf("Aggregated click rates (%s)\n(N is summed up over %d campaigns)",
1485779336011:Hmisc::capitalize(selected_customer), num_campaigns))
1485779431985:recom_history_w_purchase_open <- purchases_w_opened_campaign %>%
1485779431986:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779431986:merge(recom_history,
1485779431987:.,
1485779431987:by = c('contact_id', 'campaign_id'),
1485779431988:all.x = TRUE)
1485779431990:recom_history_w_purchase_notopen <- purchases_w_opened_campaign %>%                 # all purchases with open
1485779431990:.[, .(contact_id, order_id, purchase_date, sales_amount, did_open)] %>%
1485779431990:merge(
1485779431991:purchases_w_campaign,                                                    # all purchases
1485779431991:by = c('contact_id', 'order_id', 'purchase_date', 'sales_amount'),
1485779431992:all.y = T
1485779431992:) %>%
1485779431993:.[is.na(did_open)] %>%  # select those purchases which could not be attributed to an opened campaign
1485779431994:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779431994:merge(recom_history,
1485779431995:.,
1485779431995:by = c('contact_id', 'campaign_id'),
1485779431995:all.x = TRUE)
1485779440519:time_window <- ifelse(
1485779440519:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1485779440520:ATTRIBUTION_TIME_WINDOW,
1485779440520:customer_settings[[selected_customer]]$incentive_expiration_days
1485779440521:)
1485779440521:purchases_w_campaign <- merge(
1485779440522:purchases_si[purchase_date < recom_history[, max(campaign_start_date)] + time_window + 1,
1485779440522:.(contact_id, order_id, purchase_date, sales_amount)],
1485779440522:recom_history[, .(contact_id, campaign_id, campaign_start_date)],
1485779440523:by = 'contact_id'
1485779440523:) %>%
1485779440523:.[, elapsed := (purchase_date - campaign_start_date)] %>%
1485779440524:.[elapsed >= 0 & elapsed < duration(time_window, units = 'days')] %>%
1485779440524:.[, min_elapsed := min(elapsed), by = .(contact_id, purchase_date)] %>%
1485779440525:.[elapsed == min_elapsed] %>%
1485779440525:.[, `:=`(elapsed = NULL, min_elapsed = NULL)]
1485779440814:recom_history_w_purchase <- purchases_w_campaign %>%
1485779440814:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779440815:merge(
1485779440815:recom_history,
1485779440816:by = c('contact_id', 'campaign_id'),
1485779440816:all.y = TRUE
1485779440816:)
1485779443318:purchases_w_opened_campaign <- merge(
1485779443318:purchases_si[purchase_date < recom_history[, max(campaign_start_date)] + time_window + 1,
1485779443319:.(contact_id, order_id, purchase_date = purchase_date, sales_amount)],
1485779443319:recom_history[did_open == TRUE, .(contact_id, campaign_id, campaign_start_date, did_open, open_date)],
1485779443320:by = 'contact_id'
1485779443320:) %>%
1485779443321:.[, elapsed := (purchase_date - campaign_start_date)] %>%
1485779443321:.[(purchase_date - open_date) >= 0 & elapsed < duration(time_window, units = 'days')] %>%
1485779443321:.[, min_elapsed := min(elapsed), by = .(contact_id, purchase_date)] %>%
1485779443322:.[elapsed == min_elapsed] %>%
1485779443322:.[, `:=`(elapsed = NULL, min_elapsed = NULL)]
1485779443456:recom_history_w_purchase_open <- purchases_w_opened_campaign %>%
1485779443457:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779443458:merge(recom_history,
1485779443458:.,
1485779443458:by = c('contact_id', 'campaign_id'),
1485779443459:all.x = TRUE)
1485779443820:recom_history_w_purchase_notopen <- purchases_w_opened_campaign %>%                 # all purchases with open
1485779443820:.[, .(contact_id, order_id, purchase_date, sales_amount, did_open)] %>%
1485779443821:merge(
1485779443821:purchases_w_campaign,                                                    # all purchases
1485779443822:by = c('contact_id', 'order_id', 'purchase_date', 'sales_amount'),
1485779443822:all.y = T
1485779443823:) %>%
1485779443823:.[is.na(did_open)] %>%  # select those purchases which could not be attributed to an opened campaign
1485779443823:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779443824:merge(recom_history,
1485779443824:.,
1485779443824:by = c('contact_id', 'campaign_id'),
1485779443825:all.x = TRUE)
1485779444341:purchases_w_clicked_campaign <- merge(
1485779444342:purchases_si[purchase_date < recom_history[, max(campaign_start_date)] + time_window + 1,
1485779444343:.(contact_id, order_id, purchase_date = purchase_date, sales_amount)],
1485779444343:recom_history[did_click == TRUE, .(contact_id, campaign_id, campaign_start_date, did_click, click_date)],
1485779444343:by = 'contact_id'
1485779444344:) %>%
1485779444344:.[, elapsed := (purchase_date - campaign_start_date)] %>%
1485779444344:.[(purchase_date - click_date) >= 0 & elapsed < duration(time_window, units = 'days')] %>%
1485779444345:.[, min_elapsed := min(elapsed), by = purchase_date] %>%
1485779444345:.[elapsed == min_elapsed] %>%
1485779444346:.[, `:=`(elapsed = NULL, min_elapsed = NULL)]
1485779444408:recom_history_w_purchase_click <- purchases_w_clicked_campaign %>%
1485779444408:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779444410:merge(recom_history,
1485779444410:.,
1485779444410:by = c('contact_id', 'campaign_id'),
1485779444411:all.x = TRUE)
1485779445020:recom_history_w_purchase_notclick <- purchases_w_clicked_campaign %>%
1485779445020:.[, .(contact_id, order_id, purchase_date, sales_amount, did_click)] %>%     # all purchases with click
1485779445021:merge(
1485779445021:purchases_w_campaign,                                                     # all purchases
1485779445021:by = c('contact_id', 'order_id', 'purchase_date', 'sales_amount'),
1485779445022:all.y = T
1485779445022:) %>%
1485779445022:.[is.na(did_click)] %>%  # select those purchases which could not be attributed to an clicked campaign
1485779445022:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485779445023:merge(recom_history,
1485779445023:.,
1485779445024:by = c('contact_id', 'campaign_id'),
1485779445024:all.x = TRUE)
1485779445303:recom_history_w_purchase_hds <- merge(
1485779445303:recom_history,
1485779445304:purchases_hds[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)],
1485779445305:by = c('contact_id', 'campaign_id'),
1485779445305:all.x = TRUE)
1485779455660:tmp_purchases_w_open <- rbind(recom_history_w_purchase[, includes := 'all'],
1485779455661:recom_history_w_purchase_open[, includes := 'opened'],
1485779455661:recom_history_w_purchase_notopen[, includes := 'notopened'], fill = T) %>%
1485779455662:merge(.,
1485779455663:recom_history[, .(contact_id, campaign_start_date, did_open)],
1485779455663:by = c('contact_id', 'campaign_start_date')) %>%
1485779455664:.[includes == 'all', did_open := T] %>%
1485779455664:.[includes == 'notopened', did_open := ifelse(is.na(did_open), 1, NA)] %>%
1485779455665:.[, .(N = sum(did_open, na.rm = T),
1485779455666:num_purchases = sum(num_purchases, na.rm = T),
1485779455667:sales_amount = sum(sales_amount, na.rm = T)),
1485779455667:by = .(class, campaign_start_date, has_buying_prob, includes)] %>%
1485779455667:.[order(campaign_start_date, class)]
1485779461056:tmp_dt <- tmp_purchases_w_open %>%
1485779461057:.[,
1485779461058:.(N = sum(N),
1485779461058:num_buyers = sum(num_purchases > 0, na.rm = T),
1485779461058:num_purchases = sum(num_purchases, na.rm = T),
1485779461058:sum_revenue = sum(sales_amount, na.rm = T),
1485779461059:conversion = 100 * sum(num_purchases > 0, na.rm = T) / sum(N)
1485779461059:),
1485779461059:by = .(class, includes)
1485779461060:] %>%
1485779461060:.[order(class)]
1485779461062:tmp_dt %>%
1485779461063:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485779461063:geom_bar(stat = 'identity', position = 'dodge') +
1485779461063:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485779461064:geom_text(aes(y = min(0.45*num_purchases), label = sprintf('N = %d\nrate = %0.4f%%', N, 100*num_purchases/N))) +
1485779461064:labs(x = 'Segment',
1485779461064:y = "%",
1485779461064:fill = 'Segment',
1485779461065:title = sprintf("Time based attribution\nNumber of purchaseses (%s)\n(N is summed up over %d campaigns)",
1485779461065:Hmisc::capitalize(selected_customer), num_campaigns)) +
1485779461066:facet_grid(includes~.)
1485779525992:tmp_purchases_w_open <- rbind(recom_history_w_purchase[, includes := 'all'],
1485779525992:recom_history_w_purchase_open[, includes := 'opened'],
1485779525993:recom_history_w_purchase_notopen[, includes := 'notopened'], fill = T) %>%
1485779525994:merge(.,
1485779525994:recom_history[, .(contact_id, campaign_start_date, did_open)],
1485779525994:by = c('contact_id', 'campaign_start_date')) %>%
1485779525995:.[includes == 'all', did_open := T] %>%
1485779525995:.[includes == 'notopened', did_open := ifelse(is.na(did_open), T, F)] %>%
1485779525996:.[, .(N = sum(did_open, na.rm = T),
1485779525997:num_purchases = sum(num_purchases, na.rm = T),
1485779525998:sales_amount = sum(sales_amount, na.rm = T)),
1485779525998:by = .(class, campaign_start_date, has_buying_prob, includes)] %>%
1485779525999:.[order(campaign_start_date, class)]
1485779529988:tmp_dt <- tmp_purchases_w_open %>%
1485779529988:.[,
1485779529989:.(N = sum(N),
1485779529989:num_buyers = sum(num_purchases > 0, na.rm = T),
1485779529990:num_purchases = sum(num_purchases, na.rm = T),
1485779529990:sum_revenue = sum(sales_amount, na.rm = T),
1485779529990:conversion = 100 * sum(num_purchases > 0, na.rm = T) / sum(N)
1485779529991:),
1485779529991:by = .(class, includes)
1485779529991:] %>%
1485779529992:.[order(class)]
1485779529994:tmp_dt %>%
1485779529994:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485779529995:geom_bar(stat = 'identity', position = 'dodge') +
1485779529995:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485779529995:geom_text(aes(y = min(0.45*num_purchases), label = sprintf('N = %d\nrate = %0.4f%%', N, 100*num_purchases/N))) +
1485779529995:labs(x = 'Segment',
1485779529996:y = "%",
1485779529996:fill = 'Segment',
1485779529996:title = sprintf("Time based attribution\nNumber of purchaseses (%s)\n(N is summed up over %d campaigns)",
1485779529997:Hmisc::capitalize(selected_customer), num_campaigns)) +
1485779529997:facet_grid(includes~.)
1485779562180:tmp_dt %>%
1485779562180:ggplot(aes(x = class, y = sum_revenue, fill = class)) +
1485779562182:geom_bar(stat = 'identity', position = 'dodge') +
1485779562183:geom_label(aes(label = sprintf('%0.0f', sum_revenue)), show.legend = F) +
1485779562183:geom_text(aes(y = min(0.45*sum_revenue), label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sum_revenue/num_purchases))) +
1485779562184:labs(x = 'Segment',
1485779562184:y = "%",
1485779562185:fill = 'Segment',
1485779562185:title = sprintf("Time based attribution\nTotal revenue (%s)\n(Num.purch. is summed up over %d campaigns)",
1485779562186:Hmisc::capitalize(selected_customer), num_campaigns)) +
1485779562186:facet_grid(includes~.)
1485779603327:tmp_dt <- tmp_purchases_w_open %>%
1485779603327:.[, grand_num_purchases := sum(num_purchases, na.rm = T), by = includes] %>%
1485779603329:.[, grand_total_revenue := sum(sales_amount, na.rm = T), by = includes] %>%
1485779603329:.[has_buying_prob == F,
1485779603329:.(N = sum(N),
1485779603330:num_buyers = sum(num_purchases > 0, na.rm = T),
1485779603330:num_purchases = sum(num_purchases, na.rm = T),
1485779603330:sum_revenue = sum(sales_amount, na.rm = T),
1485779603331:conversion = 100 * sum(num_purchases > 0, na.rm = T) / sum(N),
1485779603331:revenue_percentage = 100 * sum(sales_amount/grand_total_revenue, na.rm = T)
1485779603332:),
1485779603333:by = .(class, includes)
1485779603334:] %>%
1485779603334:.[order(class)]
1485779603340:tmp_dt %>%
1485779603340:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485779603341:geom_bar(stat = 'identity', position = 'dodge') +
1485779603341:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485779603342:geom_text(aes(y = min(3.0*num_purchases), label = sprintf('N = %d\nrate = %0.3f%%', N, 100*num_purchases/N))) +
1485779603342:facet_grid(includes~.) +
1485779603343:labs(x = 'Segment',
1485779603343:y = "%",
1485779603344:fill = 'Segment',
1485779603344:title = sprintf("Time based attribution\nNumber of purchases of the no buying prob. cohort (%s)\n(N is summed up over %d campaigns)",
1485779603344:Hmisc::capitalize(selected_customer), num_campaigns))
1485779622757:tmp_dt %>%
1485779622757:ggplot(aes(x = class, y = sum_revenue, fill = class)) +
1485779622758:geom_bar(stat = 'identity', position = 'dodge') +
1485779622759:geom_label(aes(label = sprintf('%0.0f', sum_revenue)), show.legend = F) +
1485779622760:geom_text(aes(y = min(3.1*sum_revenue), label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sum_revenue/num_purchases))) +
1485779622760:facet_grid(includes~.) +
1485779622761:labs(x = 'Segment',
1485779622761:y = "%",
1485779622761:fill = 'Segment',
1485779622762:title = sprintf("Time based attribution\nTotal revenue of the no buying prob. cohort (%s)\n(N is summed up over %d campaigns)",
1485779622762:Hmisc::capitalize(selected_customer), num_campaigns))
1485779631207:tmp_dt %>%
1485779631208:ggplot(aes(x = class, y = revenue_percentage, fill = class)) +
1485779631209:geom_bar(stat = 'identity', position = 'dodge') +
1485779631209:geom_label(aes(label = sprintf('%0.2f %%', revenue_percentage)), show.legend = F) +
1485779631209:geom_text(aes(y = min(0.3*revenue_percentage), label = sprintf('N = %d', N))) +
1485779631210:facet_grid(includes~.) +
1485779631210:labs(x = 'Segment',
1485779631210:y = "%",
1485779631211:fill = 'Segment',
1485779631211:title = sprintf("Time based attribution\nPercentage of revenue attributed to the\nno buying prob. cohort (%s)\n(N is summed up over %d campaigns)",
1485779631211:Hmisc::capitalize(selected_customer), num_campaigns))
1485779786828:tmp_purchases_w_click <- rbind(
1485779786828:recom_history_w_purchase[, includes := 'all'],
1485779786829:recom_history_w_purchase_click[, includes := 'clicked'],
1485779786829:recom_history_w_purchase_notclick[, includes := 'notclicked'], fill = T) %>%
1485779786830:merge(.,
1485779786830:recom_history[, .(contact_id, campaign_start_date, did_click)],
1485779786830:by = c('contact_id', 'campaign_start_date')) %>%
1485779786830:.[includes == 'all', did_click := 1] %>%
1485779786831:.[includes == 'notclicked', did_click := ifelse(is.na(did_click), 1, NA)] %>%
1485779786831:.[, .(N = sum(did_click, na.rm = T),
1485779786831:num_purchases = sum(num_purchases, na.rm = T),
1485779786832:sales_amount = sum(sales_amount, na.rm = T)),
1485779786832:# by = .(class, campaign_id, incentive_id)] %>%
1485779786833:by = .(class, campaign_start_date, has_buying_prob, includes)] %>%
1485779786833:.[order(campaign_start_date, class)]
1485779791155:tmp_dt <- tmp_purchases_w_click %>%
1485779791156:.[,
1485779791156:.(N = sum(N),
1485779791157:num_buyers = sum(num_purchases > 0, na.rm = T),
1485779791157:num_purchases = sum(num_purchases, na.rm = T),
1485779791157:sum_revenue = sum(sales_amount, na.rm = T),
1485779791158:conversion = 100 * sum(num_purchases > 0, na.rm = T) / sum(N)
1485779791158:),
1485779791158:by = .(class, includes)
1485779791159:] %>%
1485779791159:.[order(class)]
1485779796912:tmp_dt %>%
1485779796913:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485779796914:geom_bar(stat = 'identity', position = 'dodge') +
1485779796915:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485779796915:geom_text(aes(y = min(4.5*num_purchases), label = sprintf('N = %d\nrate = %0.4f%%', N, 100*num_purchases/N))) +
1485779796916:labs(x = 'Segment',
1485779796916:y = "%",
1485779796917:fill = 'Segment',
1485779796917:title = sprintf("Time based attribution\nNumber of purchaseses (%s)\n(N is summed up over %d campaigns)",
1485779796917:Hmisc::capitalize(selected_customer), num_campaigns)) +
1485779796918:facet_grid(includes~.)
1485779834598:tmp_dt %>%
1485779834598:ggplot(aes(x = class, y = sum_revenue, fill = class)) +
1485779834599:geom_bar(stat = 'identity', position = 'dodge') +
1485779834599:geom_label(aes(label = sprintf('%0.0f', sum_revenue)), show.legend = F) +
1485779834600:geom_text(aes(y = min(4.5*sum_revenue), label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sum_revenue/num_purchases))) +
1485779834600:labs(x = 'Segment',
1485779834601:y = "%",
1485779834601:fill = 'Segment',
1485779834601:title = sprintf("Time based attribution\nTotal revenue (%s)\n(Num.purch. is summed up over %d campaigns)",
1485779834602:Hmisc::capitalize(selected_customer), num_campaigns)) +
1485779834602:facet_grid(includes~.)
1485779863795:tmp_dt <- tmp_purchases_w_click %>%
1485779863796:.[, grand_num_purchases := sum(num_purchases, na.rm = T), by = includes] %>%
1485779863797:.[, grand_total_revenue := sum(sales_amount, na.rm = T), by = includes] %>%
1485779863797:.[has_buying_prob == F,
1485779863798:.(N = sum(N),
1485779863798:num_buyers = sum(num_purchases > 0, na.rm = T),
1485779863798:num_purchases = sum(num_purchases, na.rm = T),
1485779863799:sum_revenue = sum(sales_amount, na.rm = T),
1485779863799:conversion = 100 * sum(num_purchases > 0, na.rm = T) / sum(N),
1485779863799:revenue_percentage = 100 * sum(sales_amount/grand_total_revenue, na.rm = T)
1485779863800:),
1485779863800:by = .(class, includes)
1485779863800:] %>%
1485779863801:.[order(class)]
1485779863805:tmp_dt %>%
1485779863805:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485779863806:geom_bar(stat = 'identity', position = 'dodge') +
1485779863806:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485779863807:geom_text(aes(y = min(8.5*num_purchases), label = sprintf('N = %d\nrate = %0.3f%%', N, 100*num_purchases/N))) +
1485779863808:facet_grid(includes~.) +
1485779863809:labs(x = 'Segment',
1485779863810:y = "%",
1485779863810:fill = 'Segment',
1485779863810:title = sprintf("Time based attribution\nNumber of purchases of the no buying prob. cohort (%s)\n(N is summed up over %d campaigns)",
1485779863811:Hmisc::capitalize(selected_customer), num_campaigns))
1485779875800:tmp_dt <- recom_history_w_purchase %>%
1485779875802:# tmp_dt <- recom_history_w_purchase_hds %>%
1485779875803:.[class == "smart"] %>%
1485779875803:.[order(-as.numeric(numericValue))] %>%
1485779875803:.[has_buying_prob == T,
1485779875804:.(.N,
1485779875804:num_purchases = sum(num_purchases, na.rm = T),
1485779875804:sum_revenue = sum(sales_amount, na.rm = T)
1485779875805:),
1485779875805:by = numericValue
1485779875805:] %>%
1485779875806:.[, percentage_N := 100 * N / sum(N)] %>%
1485779875806:.[, percentage_revenue := 100 * sum_revenue / sum(sum_revenue)] %>%
1485779875808:.[, cumsum_percentage_N := cumsum(percentage_N)] %>%
1485779875808:.[, cumsum_percentage_revenue := cumsum(percentage_revenue)] %>%
1485779875809:.[]
1485779886458:tmp_dt <- rbind(data.table(numericValue = "30", cumsum_percentage_N = 0, cumsum_percentage_revenue = 0),
1485779886459:tmp_dt,
1485779886460:fill = T)
1485779886462:seq(2,nrow(tmp_dt)) %>%
1485779886462:map(., ~ rbind(tmp_dt[.-1, .(numericValue = tmp_dt[., numericValue], cumsum_percentage_N, cumsum_percentage_revenue)],
1485779886463:tmp_dt[.],
1485779886464:fill = T)) %>%
1485779886465:rbindlist() %>%
1485779886465:.[, numericValue := as.factor(as.numeric(numericValue))] %>%
1485779886465:ggplot(aes(x = cumsum_percentage_N, y = cumsum_percentage_revenue, fill = numericValue)) +
1485779886466:geom_area(position = 'identity') +
1485779886466:# geom_label(aes(label = sprintf('%0.2f %%', cumsum_percentage_sales)), show.legend = F) +
1485779886467:# geom_text(aes(y = 0.1, label = sprintf('N = %d', N))) +
1485779886467:labs(x = 'Size of incentive segments',
1485779886468:y = 'Percentage of revenue',
1485779886469:fill = 'Segment',
1485779886470:title = sprintf('Cumulative distribution of incentive based segment size vs.\npercentage of generated revenue of that segment (%s)', Hmisc::capitalize(selected_customer)))
1485779989716:uplift_reference_class <- 'static'
1485779989717:# tmp_dt <- recom_history[, .(contact_id, campaign_id, did_open, did_click, class, lifecycle_status, numericValue)] %>%
1485779989717:#     merge(.,
1485779989717:#           purchases_all_hds[, .(num_purchases = sum(num_purchases), sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)],
1485779989718:#           by = c('contact_id', 'campaign_id'),
1485779989718:#           all.x = T
1485779989718:#     ) %>%
1485779989719:#     .[!is.na(did_click)] %>%
1485779989719:tmp_dt <- recom_history_w_purchase_hds %>%
1485779989719:.[order(class)] %>%
1485779989720:.[,
1485779989720:.(.N,
1485779989720:num_lead = sum(lifecycle_status == 'lead'),
1485779989721:num_first_time_buyer = sum(lifecycle_status == 'first_time_buyer'),
1485779989721:num_active = sum(lifecycle_status == 'active'),
1485779989721:num_defecting = sum(lifecycle_status == 'defecting'),
1485779989722:num_inactive = sum(lifecycle_status == 'inactive'),
1485779989722:num_purchases = sum(num_purchases, na.rm = T),
1485779989722:num_buyer = sum(num_purchases > 0, na.rm = T),
1485779989723:buyer_sd = sd(ifelse(!is.na(num_purchases), num_purchases, 0)),
1485779989723:lead_num_buyer = sum(num_purchases & lifecycle_status == 'lead', na.rm = T),
1485779989724:lead_sd = sd(.SD[lifecycle_status == 'lead', !is.na(num_purchases)]),
1485779989724:first_time_buyer_num_buyer = sum(num_purchases & lifecycle_status == 'first_time_buyer', na.rm = T),
1485779989725:active_num_buyer = sum(num_purchases & lifecycle_status == 'active', na.rm = T),
1485779989725:defecting_num_buyer = sum(num_purchases & lifecycle_status == 'defecting', na.rm = T),
1485779989727:inactive_num_buyer = sum(num_purchases & lifecycle_status == 'inactive', na.rm = T),
1485779989728:sum_revenue = sum(sales_amount, na.rm = T),
1485779989729:sum_net_revenue = sum(sales_amount * (100-as.numeric(ifelse(is.na(numericValue), 0, numericValue)))/100, na.rm = T),
1485779989730:lead_sum_revenue = sum(sales_amount * (lifecycle_status == 'lead'), na.rm = T),
1485779989731:first_time_buyer_sum_revenue = sum(sales_amount * (lifecycle_status == 'first_time_buyer'), na.rm = T),
1485779989732:active_sum_revenue = sum(sales_amount * (lifecycle_status == 'active'), na.rm = T),
1485779989733:defecting_sum_revenue = sum(sales_amount * (lifecycle_status == 'defecting'), na.rm = T),
1485779989733:inactive_sum_revenue = sum(sales_amount * (lifecycle_status == 'inactive'), na.rm = T),
1485779989734:cost_rate = sum(sales_amount * as.numeric(numericValue) / 100, na.rm = T) / sum(sales_amount, na.rm = T)
1485779989735:),
1485779989735:by = class
1485779989736:] %>%
1485779989736:.[, `:=`(
1485779989737:purchase_rate = sum(num_purchases, na.rm = T) / N,
1485779989738:conv_rate = sum(num_buyer, na.rm = T) / N,
1485779989738:lead_conv_rate = sum(lead_num_buyer, na.rm = T) / sum(num_lead),
1485779989739:first_time_buyer_conv_rate = sum(first_time_buyer_num_buyer, na.rm = T) / sum(num_first_time_buyer),
1485779989740:active_conv_rate = sum(active_num_buyer, na.rm = T) / sum(num_active),
1485779989740:defecting_conv_rate = sum(defecting_num_buyer, na.rm = T) / sum(num_defecting),
1485779989741:inactive_conv_rate = sum(inactive_num_buyer, na.rm = T) / sum(num_inactive)
1485779989743:),
1485779989744:by = class
1485779989745:] %>%
1485779989745:.[, `:=`(
1485779989746:num_purchases_uplift_to_reference = num_purchases/.SD[class == uplift_reference_class, num_purchases] - 1,
1485779989747:sum_revenue_uplift_to_reference = sum_revenue/.SD[class == uplift_reference_class, sum_revenue] - 1,
1485779989748:purchase_rate_uplift_to_reference = purchase_rate/.SD[class == uplift_reference_class, purchase_rate] - 1,
1485779989749:conv_rate_uplift_to_reference = conv_rate/.SD[class == uplift_reference_class, conv_rate] - 1,
1485779989750:lead_conv_rate_uplift_to_reference = lead_conv_rate/.SD[class == uplift_reference_class, lead_conv_rate] - 1,
1485779989751:lead_sum_revenue_uplift_to_reference = lead_sum_revenue/.SD[class == uplift_reference_class, lead_sum_revenue] - 1,
1485779989752:first_time_buyer_conv_rate_uplift_to_reference = first_time_buyer_conv_rate/.SD[class == uplift_reference_class, first_time_buyer_conv_rate] - 1,
1485779989754:first_time_buyer_sum_revenue_uplift_to_reference = first_time_buyer_sum_revenue/.SD[class == uplift_reference_class, first_time_buyer_sum_revenue] - 1,
1485779989755:active_conv_rate_uplift_to_reference = active_conv_rate/.SD[class == uplift_reference_class, active_conv_rate] - 1,
1485779989756:active_sum_revenue_uplift_to_reference = active_sum_revenue/.SD[class == uplift_reference_class, active_sum_revenue] - 1,
1485779989757:defecting_conv_rate_uplift_to_reference = defecting_conv_rate/.SD[class == uplift_reference_class, defecting_conv_rate] - 1,
1485779989759:defecting_sum_revenue_uplift_to_reference = defecting_sum_revenue/.SD[class == uplift_reference_class, defecting_sum_revenue] - 1,
1485779989761:inactive_conv_rate_uplift_to_reference = inactive_conv_rate/.SD[class == uplift_reference_class, inactive_conv_rate] - 1,
1485779989762:inactive_sum_revenue_uplift_to_reference = inactive_sum_revenue/.SD[class == uplift_reference_class, inactive_sum_revenue] - 1,
1485779989763:cost_rate_uplift_to_reference = 1 - cost_rate/.SD[class == uplift_reference_class, cost_rate]
1485779989765:)]
1485779999304:tmp_dt
1485780000730:tmp_dt
1485780048478:tmp_dt %>%
1485780048479:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485780048480:geom_bar(stat = 'identity', position = 'dodge') +
1485780048480:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485780048481:geom_text(aes(y = min(0.2*num_purchases), label = sprintf('N = %d\nrate = %0.2f%%', N, 100*num_purchases/N))) +
1485780048481:labs(x = 'Segment',
1485780048481:y = "Number of purchases",
1485780048482:fill = 'Segment',
1485780048482:title = sprintf("HDS based purchase numbers (%s)\n(N is summed up over %d campaigns)",
1485780048483:Hmisc::capitalize(selected_customer), num_campaigns))
1485780092867:tmp_dt %>%
1485780092868:ggplot(aes(x = class, y = sum_revenue, fill = class)) +
1485780092869:geom_bar(stat = 'identity', position = 'dodge') +
1485780092869:geom_label(aes(label = sprintf('%0.0f', sum_revenue)), show.legend = F) +
1485780092870:geom_text(aes(y = min(0.1*sum_revenue), label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sum_revenue/num_purchases))) +
1485780092870:labs(x = 'Segment',
1485780092870:y = "Total sales",
1485780092871:fill = 'Segment',
1485780092871:title = sprintf("HDS based revenue (%s)\n(Num.purch. is summed up over %d campaigns)",
1485780092871:Hmisc::capitalize(selected_customer), num_campaigns))
1485780179232:uplift_reference_class <- 'static'
1485780179233:tmp_dt <- matchPurchasesToRecomHistory(recom_history[, .(contact_id, campaign_start_date)],
1485780179234:purchases_si[purchase_date >= first_campaign & purchase_date <= last_campaign+time_window]) %>%
1485780179234:merge(recom_history[, .(contact_id, campaign_start_date, class, lifecycle_status, numericValue)],
1485780179234:by = c('contact_id', 'campaign_start_date'),
1485780179235:all.y = T) %>%
1485780179235:.[, .(num_purchases = sum(sales_amount > 0, na.rm = T), sales_amount = sum(sales_amount, na.rm = T)),
1485780179236:by = .(contact_id, campaign_start_date, class, lifecycle_status, numericValue)] %>%
1485780179236:.[order(class)] %>%
1485780179237:.[,
1485780179237:.(.N,
1485780179237:num_lead = sum(lifecycle_status == 'lead'),
1485780179238:num_first_time_buyer = sum(lifecycle_status == 'first_time_buyer'),
1485780179238:num_active = sum(lifecycle_status == 'active'),
1485780179239:num_defecting = sum(lifecycle_status == 'defecting'),
1485780179239:num_inactive = sum(lifecycle_status == 'inactive'),
1485780179239:num_purchases = sum(num_purchases, na.rm = T),
1485780179240:num_buyer = sum(num_purchases > 0, na.rm = T),
1485780179240:lead_num_buyer = sum(num_purchases & lifecycle_status == 'lead', na.rm = T),
1485780179241:first_time_buyer_num_buyer = sum(num_purchases & lifecycle_status == 'first_time_buyer', na.rm = T),
1485780179241:active_num_buyer = sum(num_purchases & lifecycle_status == 'active', na.rm = T),
1485780179242:defecting_num_buyer = sum(num_purchases & lifecycle_status == 'defecting', na.rm = T),
1485780179243:inactive_num_buyer = sum(num_purchases & lifecycle_status == 'inactive', na.rm = T),
1485780179243:sum_revenue = sum(sales_amount, na.rm = T),
1485780179244:lead_sum_revenue = sum(sales_amount * (lifecycle_status == 'lead'), na.rm = T),
1485780179246:first_time_buyer_sum_revenue = sum(sales_amount * (lifecycle_status == 'first_time_buyer'), na.rm = T),
1485780179247:active_sum_revenue = sum(sales_amount * (lifecycle_status == 'active'), na.rm = T),
1485780179248:defecting_sum_revenue = sum(sales_amount * (lifecycle_status == 'defecting'), na.rm = T),
1485780179249:inactive_sum_revenue = sum(sales_amount * (lifecycle_status == 'inactive'), na.rm = T),
1485780179249:cost_rate = sum(sales_amount * as.numeric(numericValue) / 100, na.rm = T) / sum(sales_amount, na.rm = T)
1485780179250:),
1485780179251:by = class
1485780179252:] %>%
1485780179252:.[, `:=`(
1485780179253:purchase_rate = sum(num_purchases, na.rm = T) / N,
1485780179254:conv_rate = sum(num_buyer, na.rm = T) / N,
1485780179255:lead_conv_rate = sum(lead_num_buyer, na.rm = T) / sum(num_lead),
1485780179255:first_time_buyer_conv_rate = sum(first_time_buyer_num_buyer, na.rm = T) / sum(num_first_time_buyer),
1485780179256:active_conv_rate = sum(active_num_buyer, na.rm = T) / sum(num_active),
1485780179257:defecting_conv_rate = sum(defecting_num_buyer, na.rm = T) / sum(num_defecting),
1485780179258:inactive_conv_rate = sum(inactive_num_buyer, na.rm = T) / sum(num_inactive)
1485780179258:),
1485780179259:by = class
1485780179260:] %>%
1485780179261:.[, `:=`(
1485780179263:num_purchases_uplift_to_reference = num_purchases/.SD[class == uplift_reference_class, num_purchases] - 1,
1485780179264:sum_revenue_uplift_to_reference = sum_revenue/.SD[class == uplift_reference_class, sum_revenue] - 1,
1485780179265:purchase_rate_uplift_to_reference = purchase_rate/.SD[class == uplift_reference_class, purchase_rate] - 1,
1485780179266:conv_rate_uplift_to_reference = conv_rate/.SD[class == uplift_reference_class, conv_rate] - 1,
1485780179267:lead_conv_rate_uplift_to_reference = lead_conv_rate/.SD[class == uplift_reference_class, lead_conv_rate] - 1,
1485780179269:lead_sum_revenue_uplift_to_reference = lead_sum_revenue/.SD[class == uplift_reference_class, lead_sum_revenue] - 1,
1485780179270:first_time_buyer_conv_rate_uplift_to_reference = first_time_buyer_conv_rate/.SD[class == uplift_reference_class, first_time_buyer_conv_rate] - 1,
1485780179271:first_time_buyer_sum_revenue_uplift_to_reference = first_time_buyer_sum_revenue/.SD[class == uplift_reference_class, first_time_buyer_sum_revenue] - 1,
1485780179272:active_conv_rate_uplift_to_reference = active_conv_rate/.SD[class == uplift_reference_class, active_conv_rate] - 1,
1485780179273:active_sum_revenue_uplift_to_reference = active_sum_revenue/.SD[class == uplift_reference_class, active_sum_revenue] - 1,
1485780179274:defecting_conv_rate_uplift_to_reference = defecting_conv_rate/.SD[class == uplift_reference_class, defecting_conv_rate] - 1,
1485780179275:defecting_sum_revenue_uplift_to_reference = defecting_sum_revenue/.SD[class == uplift_reference_class, defecting_sum_revenue] - 1,
1485780179277:inactive_conv_rate_uplift_to_reference = inactive_conv_rate/.SD[class == uplift_reference_class, inactive_conv_rate] - 1,
1485780179278:inactive_sum_revenue_uplift_to_reference = inactive_sum_revenue/.SD[class == uplift_reference_class, inactive_sum_revenue] - 1,
1485780179280:cost_rate_uplift_to_reference = 1 - cost_rate/.SD[class == uplift_reference_class, cost_rate]
1485780179282:)]
1485780185686:tmp_dt %>%
1485780185687:ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485780185687:geom_bar(stat = 'identity', position = 'dodge') +
1485780185688:geom_label(aes(label = sprintf('%d', num_purchases)), show.legend = F) +
1485780185688:geom_text(aes(y = min(0.1*num_purchases), label = sprintf('N = %d\nrate = %0.3f%%', N, 100*num_purchases/N))) +
1485780185689:labs(x = 'Segment',
1485780185689:y = "Number of purchases",
1485780185689:fill = 'Segment',
1485780185690:title = sprintf("Raw number of purchases of contacts (%s)\n(N is summed up over %d campaigns)",
1485780185690:Hmisc::capitalize(selected_customer), num_campaigns))
1485782867788:attributePurchasesToRecomHistory <- function(recom_history, purchases, method = c('time', 'webextend'), time_window) {
1485782867790:method <- match.arg(method)
1485782867792:print(method)
1485782867793:}
1485782876398:attributePurchasesToRecomHistory(method = 'cicamica')
1485782882189:attributePurchasesToRecomHistory(method = 'time')
1485782889367:attributePurchasesToRecomHistory()
1485782897110:attributePurchasesToRecomHistory <- function(recom_history, purchases, method = c('time', 'webextend'), time_window) {
1485782897111:# method <- match.arg(method)
1485782897111:print(method)
1485782897111:}
1485782899623:attributePurchasesToRecomHistory()
1485783257288:source('global.R')
1485783267439:recom_history_w_purchase
1485783295478:rhp <- copy(recom_history_w_purchase)
1485783401901:recom_history_w_purchase <- attributePurchasesToRecomHistory(
1485783401902:recom_history, purchases_si,
1485783401903:method = 'time', time_window = time_window
1485783401903:)
1485783449398:recom_history_w_purchase
1485783457432:rhp
1485783498759:recom_history_w_purchase[, .N, by = class]
1485783506466:rhp[, .N, by = class]
1485785597383:recom_history[, .N, by = (campaign_id, class)]
1485785601500:recom_history[, .N, by = .(campaign_id, class)]
1485787752917:cucc
1485787779815:attr(cucc, 'xxx') <- 'y'
1485787781479:cucc
1485787788792:cucc$y
1485787793019:cucc$xxx
1485787808401:attr(cucc, xxx)
1485787813665:attr(cucc, "xxx")
1485787852836:setattr(cucc, 'yyy', 'x')
1485787857403:attr(cucc, 'yyy')
1485787859209:cucc
1485787861594:str(cucc)
1485788181163:cucc$b
1485788257245:a <- c(NA, 'a', 'b')
1485788257955:a
1485788262628:class(a)
1485788265452:is.na(a)
1485788275232:data.table(a)
1485788325719:NA_character_
1485788345174:attributePurchasesToRecomHistory <- function(recom_history, purchases, method = c('webextend', 'time'), time_window = NA, filter = NA) {
1485788345175:method <- match.arg(method)
1485788345175:if (method == 'time') {
1485788345176:dt <- attributePurchasesToRecomHistoryByTime(recom_history, purchases, time_window, filter = c('none', 'opened', 'clicked'))
1485788345176:} else {
1485788345176:dt <- attributePurchasesToRecomHistoryByWebextend(recom_history, purchases)
1485788345177:}
1485788345178:setattr(dt, 'attribution', list(method = method, time_window = time_window, filter = filter))
1485788345178:}
1485788345179:attributePurchasesToRecomHistoryByTime <- function(recom_history, purchases, time_window, filter) {
1485788345179:if (filter == 'none') {
1485788345180:condition <- quote(TRUE)
1485788345180:} else if (filter == 'opened') {
1485788345180:condition <- quote(did_open == TRUE)
1485788345181:} else {
1485788345182:condition <- quote(did_click == TRUE)
1485788345182:}
1485788345182:merge(
1485788345183:purchases_si[
1485788345183:purchase_date < recom_history[, max(campaign_start_date)] + time_window + 1,
1485788345183:.(contact_id, order_id, purchase_date, sales_amount)
1485788345184:],
1485788345184:recom_history[
1485788345185:eval(condition),
1485788345185:.(contact_id, campaign_id, campaign_start_date)
1485788345185:],
1485788345186:by = 'contact_id'
1485788345186:) %>%
1485788345187:.[, elapsed := (purchase_date - campaign_start_date)] %>%
1485788345188:.[elapsed >= 0 & elapsed < duration(time_window, units = 'days')] %>%
1485788345189:.[, min_elapsed := min(elapsed), by = .(contact_id, purchase_date)] %>%
1485788345190:.[elapsed == min_elapsed] %>%
1485788345191:.[, `:=`(elapsed = NULL, min_elapsed = NULL)] %>%
1485788345192:.[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)] %>%
1485788345192:merge(
1485788345193:recom_history,
1485788345193:by = c('contact_id', 'campaign_id'),
1485788345194:all.y = TRUE
1485788345195:)
1485788345195:}
1485788345197:attributePurchasesToRecomHistoryByWebextend <- function(recom_history, purchases) {
1485788345197:merge(
1485788345198:recom_history,
1485788345198:purchases[, .(num_purchases = .N, sales_amount = sum(sales_amount)), by = .(contact_id, campaign_id)],
1485788345198:by = c('contact_id', 'campaign_id'),
1485788345199:all.x = TRUE
1485788345199:)
1485788345200:}
1485788439367:attributePurchasesToRecomHistory <- function(recom_history, purchases, method = c('webextend', 'time'), time_window = NA, filter = c('none', 'opened', 'clicked')) {
1485788439368:method <- match.arg(method)
1485788439369:filter <- match.arg(filter)
1485788439369:if (method == 'time') {
1485788439369:dt <- attributePurchasesToRecomHistoryByTime(recom_history, purchases, time_window, filter)
1485788439370:} else {
1485788439370:dt <- attributePurchasesToRecomHistoryByWebextend(recom_history, purchases)
1485788439370:}
1485788439371:setattr(dt, 'attribution', list(method = method, time_window = time_window, filter = filter))
1485788439371:}
1485788518583:attributePurchasesToRecomHistory <- function(recom_history, purchases, method = c('webextend', 'time'), time_window, filter = c('none', 'opened', 'clicked')) {
1485788518584:method <- match.arg(method)
1485788518585:filter <- match.arg(filter)
1485788518585:if (method == 'time') {
1485788518585:dt <- attributePurchasesToRecomHistoryByTime(recom_history, purchases, time_window, filter)
1485788518586:} else {
1485788518586:time_window <- NA
1485788518587:dt <- attributePurchasesToRecomHistoryByWebextend(recom_history, purchases)
1485788518587:}
1485788518588:setattr(dt, 'attribution', list(method = method, time_window = time_window, filter = filter))
1485788518588:}
1485788523035:recom_history_w_purchase <- attributePurchasesToRecomHistory(
1485788523036:recom_history, purchases_si,
1485788523037:method = 'time', time_window = time_window
1485788523037:)
1485788596124:recom_history <- attributePurchasesToRecomHistory(
1485788596125:recom_history, purchases_si,
1485788596125:method = 'time', time_window = time_window, filter = 'clicked'
1485788596125:)
1485788605242:recom_history
1485788635467:recom_history[, sum(sales_amount)]
1485788640102:recom_history[, sum(sales_amount, na.rm = T)]
1485788644999:recom_history_w_purchase[, sum(sales_amount, na.rm = T)]
1485788658886:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485788734934:a <- copy(recom_history)
1485788743529:attr(a, 'attribution')
1485788753147:attr(recom_history, 'attribution')
1485788765228:a <- copy(recom_history_w_purchase)
1485788766987:attr(a, 'attribution')
1485788796858:tmp_dt <- recom_history_w_purchase %>%
1485788796859:.[order(class)] %>%
1485788796861:.[,
1485788796861:.(.N,
1485788796862:num_open = sum(did_open, na.rm = T),
1485788796862:num_click = sum(did_click, na.rm = T),
1485788796862:open_rate = sum(did_open, na.rm = T) / .N,
1485788796863:click_rate = sum(did_click, na.rm = T) / .N),
1485788796863:by = class
1485788796863:]
1485788804533:attr(tmp_dt, 'attribution')
1485790081340:list(
1485790081341:source = c(purchases_hds, rep(purchases_si, 7)),
1485790081341:method = c(rep('webextend', 2), rep('time', 6)),
1485790081342:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485790081342:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485790081342:)
1485790086584:selected_time_window <- ifelse(
1485790086585:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1485790086586:ATTRIBUTION_TIME_WINDOW,
1485790086587:customer_settings[[selected_customer]]$incentive_expiration_days
1485790086587:)
1485790105616:attribution_variants <- list(
1485790105618:source = c(purchases_hds, rep(purchases_si, 7)),
1485790105618:method = c(rep('webextend', 2), rep('time', 6)),
1485790105619:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485790105619:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485790105620:)
1485790110150:attribution_variants
1485790133377:attribution_variants <- list(
1485790133379:source = c(list(purchases_hds), rep(list(purchases_si), 7)),
1485790133379:method = c(rep('webextend', 2), rep('time', 6)),
1485790133379:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485790133380:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485790133380:)
1485790142103:str(attribution_variants)
1485790150432:str(attribution_variants, max.level = 1)
1485790168968:attribution_variants$source[[1]]
1485790277214:?pmap
1485790511573:rep(recom_history, 8)
1485790528112:rep(list(recom_history), 8)
1485790574860:attribution_variants <- pmap(
1485790574860:list(
1485790574861:recom_history = rep(list(recom_history), 8),
1485790574862:purchases = c(list(purchases_hds), rep(list(purchases_si), 7)),
1485790574862:method = c(rep('webextend', 2), rep('time', 6)),
1485790574862:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485790574863:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485790574863:),
1485790574863:attributePurchasesToRecomHistory
1485790574864:)
1485791190655:attributePurchasesToRecomHistory <- function(recom_history, purchases, source = c('hds', 'si'), method = c('webextend', 'time'), time_window, filter = c('none', 'opened', 'clicked')) {
1485791190657:source <- match.arg(source)
1485791190657:method <- match.arg(method)
1485791190658:filter <- match.arg(filter)
1485791190658:if (method == 'time') {
1485791190659:dt <- attributePurchasesToRecomHistoryByTime(recom_history, purchases[[source]], time_window, filter)
1485791190659:} else {
1485791190659:time_window <- NA
1485791190660:dt <- attributePurchasesToRecomHistoryByWebextend(recom_history, purchases[[source]])
1485791190660:}
1485791190661:setattr(dt, 'attribution', list(source = source, method = method, time_window = time_window, filter = filter))
1485791190661:}
1485791195323:selected_time_window <- ifelse(
1485791195324:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1485791195324:ATTRIBUTION_TIME_WINDOW,
1485791195324:customer_settings[[selected_customer]]$incentive_expiration_days
1485791195325:)
1485791195326:attribution_variants <- pmap(
1485791195326:list(
1485791195326:recom_history = recom_history,
1485791195327:purchases = purchases,
1485791195327:source = c('hds', rep('si', 7)),
1485791195327:method = c(rep('webextend', 2), rep('time', 6)),
1485791195327:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485791195328:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485791195328:),
1485791195329:attributePurchasesToRecomHistory
1485791195329:)
1485791204610:purchases <- list('si' = purchases_si, 'hds' = purchases_hds)
1485791210440:selected_time_window <- ifelse(
1485791210440:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1485791210441:ATTRIBUTION_TIME_WINDOW,
1485791210442:customer_settings[[selected_customer]]$incentive_expiration_days
1485791210442:)
1485791210443:attribution_variants <- pmap(
1485791210443:list(
1485791210443:recom_history = recom_history,
1485791210444:purchases = purchases,
1485791210444:source = c('hds', rep('si', 7)),
1485791210444:method = c(rep('webextend', 2), rep('time', 6)),
1485791210445:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485791210445:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485791210445:),
1485791210446:attributePurchasesToRecomHistory
1485791210446:)
1485791225061:attribution_variants <- pmap(
1485791225061:list(
1485791225062:recom_history = recom_history,
1485791225063:purchases = list(purchases),
1485791225063:source = c('hds', rep('si', 7)),
1485791225063:method = c(rep('webextend', 2), rep('time', 6)),
1485791225064:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485791225064:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485791225064:),
1485791225065:attributePurchasesToRecomHistory
1485791225065:)
1485791238290:attribution_variants <- pmap(
1485791238290:list(
1485791238291:recom_history = list(recom_history),
1485791238291:purchases = list(purchases),
1485791238292:source = c('hds', rep('si', 7)),
1485791238292:method = c(rep('webextend', 2), rep('time', 6)),
1485791238292:time_window = c(rep(NA, 2), rep(c(selected_time_window, Inf), 3)),
1485791238293:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485791238293:),
1485791238294:attributePurchasesToRecomHistory
1485791238294:)
1485791838024:?save
1485791855415:attribution_variants <- pmap(
1485791855416:list(
1485791855417:recom_history = list(recom_history),
1485791855418:purchases = list(purchases),
1485791855419:source = c('hds', rep('si', 7)),
1485791855419:method = c(rep('webextend', 2), rep('time', 6)),
1485791855419:time_window = c(rep(NA, 2), rep(c(selected_time_window, 30), 3)),
1485791855420:filter = c(rep('none', 4), rep('opened', 2), rep('clicked', 2))
1485791855420:),
1485791855421:attributePurchasesToRecomHistory
1485791855421:)
1485791867388:save(
1485791867390:'attribution_variants',
1485791867390:file = sprintf('data/attribution_variants_%s.RData', selected_customer)
1485791867390:)
1485792049945:load('data/attribution_variants_evolution_slimming.RData')
1485793033946:selected_customer <- 'japancentre'
1485793044104:suppressPackageStartupMessages(
1485793044105:source('global.R')
1485793044106:)
1485793048008:message(sprintf("Currently selected customer: %s", selected_customer))
1485793050324:recom_history <- getRecomHistory(selected_customer, refetch = FALSE) %>%
1485793050902:.[campaign_start_date >= ymd(customer_settings[[selected_customer]]$first_incentive_campaign_date)] %>%
1485793051270:.[!campaign_id %in% customer_settings[[selected_customer]]$campaigns_to_exclude]
1485793057522:recom_history
1485793062965:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485793067123:recom_history
1485793068547:recom_history
1485860067025:getSiNameFromId
1485864685466:suppressPackageStartupMessages(
1485864685467:source('global.R')
1485864685468:)
1485864692648:selected_customer <- 'japancentre'
1485864695244:message(sprintf("Currently selected customer: %s", selected_customer))
1485864697089:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485864702789:recom_history <- getRecomHistory(selected_customer, refetch = TRUE)
1485864876532:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1485864884956:if (exists('first_incentive_campaign_date', customer_settings[[selected_customer]]))
1485864884957:{
1485864884957:recom_history <- recom_history[campaign_start_date >= ymd(customer_settings[[selected_customer]]$first_incentive_campaign_date)]
1485864884958:}
1485866983227:suppressPackageStartupMessages(
1485866983709:source('global.R')
1485866984059:)
1485866985027:args = commandArgs(trailingOnly=TRUE)
1485866987336:if (length(args)==0) {
1485866987336:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485866987337:} else{
1485866987338:selected_customer <- args[1]
1485866987339:}
1485866988796:message(sprintf("Currently selected customer: %s", selected_customer))
1485866992565:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1485867029954:load(sprintf('data/attribution_variants_%s.RData', selected_customer))
1485867075057:rm(recom_history, purchases)
1485867136524:attribution_variants[[1]] %>%
1485867136525:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485867136526:.[,
1485867136526:`:=`(
1485867136526:alpha = alpha_prior + num_purchases,
1485867136527:beta = beta_prior + N - num_purchases
1485867136527:),
1485867136528:] %>%
1485867136528:.[, `:=`(
1485867136529:rate_lower = qbeta(lower_percentile, alpha, beta),
1485867136530:rate = alpha / (alpha + beta),
1485867136530:rate_higher = qbeta(higher_percentile, alpha, beta)
1485867136531:)] %>%
1485867136532:# ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485867136532:ggplot(aes(x = class, y = rate, fill = class)) +
1485867136533:geom_bar(stat = 'identity', position = 'dodge') +
1485867136534:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485867136535:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485867136536:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485867136538:scale_y_continuous(expand = c(0.1, 0)) +
1485867136538:labs(x = 'Segment',
1485867136539:y = "Purchase rate",
1485867136540:fill = 'Segment',
1485867136541:title = sprintf("HDS based purchase rates (%s)", selected_customer),
1485867136542:subtitle = sprintf('Aggregated over %d campaign(s)', num_campaigns))
1485867139642:num_campaigns <- nrow(unique(recom_history, by = 'campaign_start_date'))
1485867139644:alpha_prior <- 0.5
1485867139645:beta_prior <- 0.5
1485867139646:lower_percentile <- 0.05
1485867139647:higher_percentile <- 0.95
1485867143462:attribution_variants[[1]] %>%
1485867143462:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485867143463:.[,
1485867143464:`:=`(
1485867143464:alpha = alpha_prior + num_purchases,
1485867143465:beta = beta_prior + N - num_purchases
1485867143465:),
1485867143466:] %>%
1485867143466:.[, `:=`(
1485867143466:rate_lower = qbeta(lower_percentile, alpha, beta),
1485867143467:rate = alpha / (alpha + beta),
1485867143467:rate_higher = qbeta(higher_percentile, alpha, beta)
1485867143468:)] %>%
1485867143469:# ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485867143470:ggplot(aes(x = class, y = rate, fill = class)) +
1485867143471:geom_bar(stat = 'identity', position = 'dodge') +
1485867143471:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485867143472:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485867143473:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485867143473:scale_y_continuous(expand = c(0.1, 0)) +
1485867143474:labs(x = 'Segment',
1485867143475:y = "Purchase rate",
1485867143476:fill = 'Segment',
1485867143477:title = sprintf("HDS based purchase rates (%s)", selected_customer),
1485867143477:subtitle = sprintf('Aggregated over %d campaign(s)', num_campaigns))
1485867167323:num_campaigns <- nrow(unique(attribution_variants[[1]], by = 'campaign_start_date'))
1485867167423:alpha_prior <- 0.5
1485867167423:beta_prior <- 0.5
1485867167425:lower_percentile <- 0.05
1485867167425:higher_percentile <- 0.95
1485867167426:attribution_variants[[1]] %>%
1485867167426:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485867167426:.[,
1485867167427:`:=`(
1485867167427:alpha = alpha_prior + num_purchases,
1485867167427:beta = beta_prior + N - num_purchases
1485867167428:),
1485867167428:] %>%
1485867167428:.[, `:=`(
1485867167429:rate_lower = qbeta(lower_percentile, alpha, beta),
1485867167429:rate = alpha / (alpha + beta),
1485867167429:rate_higher = qbeta(higher_percentile, alpha, beta)
1485867167430:)] %>%
1485867167430:# ggplot(aes(x = class, y = num_purchases, fill = class)) +
1485867167430:ggplot(aes(x = class, y = rate, fill = class)) +
1485867167431:geom_bar(stat = 'identity', position = 'dodge') +
1485867167431:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485867167432:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485867167432:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485867167433:scale_y_continuous(expand = c(0.1, 0)) +
1485867167433:labs(x = 'Segment',
1485867167434:y = "Purchase rate",
1485867167434:fill = 'Segment',
1485867167435:title = sprintf("HDS based purchase rates (%s)", selected_customer),
1485867167435:subtitle = sprintf('Aggregated over %d campaign(s)', num_campaigns))
1485867321178:binPurchases <- function(recom_history, n_bins)
1485867321179:{
1485867321180:recom_history_w_purchase_hds %>%
1485867321180:.[,
1485867321180:.(contact_id,
1485867321181:buying_prob,
1485867321181:numericValue = ifelse(is.na(numericValue), 0, as.numeric(numericValue)),
1485867321181:got_incentive = !(is.na(numericValue) | numericValue == 0),
1485867321182:num_purchases = ifelse(is.na(num_purchases), 0, num_purchases),
1485867321182:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount),
1485867321182:has_purchased = factor(!is.na(num_purchases)),
1485867321183:campaign_start_date
1485867321183:)] %>%
1485867321183:.[order(buying_prob)] %>%
1485867321184:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1485867321184:}
1485867321185:generateModelParams <- function(binned_purchases, prior_alpha, prior_beta)
1485867321185:{
1485867321186:binned_purchases %>%
1485867321186:.[, CJ(prob_group = unique(prob_group),
1485867321186:numericValue = unique(numericValue),
1485867321186:campaign_start_date = c(min(campaign_start_date) - weeks(1),
1485867321187:unique(campaign_start_date)))] %>%
1485867321187:merge(binned_purchases,
1485867321187:by = c('prob_group', 'numericValue', 'campaign_start_date'),
1485867321188:all.x = T) %>%
1485867321188:.[, .(N = sum(!is.na(num_purchases)),
1485867321189:num_purchases = sum(num_purchases, na.rm = T)),
1485867321190:by = .(prob_group, numericValue, campaign_start_date)] %>%
1485867321191:.[order(campaign_start_date, prob_group, numericValue)] %>%
1485867321192:.[, `:=`(
1485867321192:cum_N = cumsum(N),
1485867321192:cum_num_purchases = cumsum(num_purchases)),
1485867321193:by = .(numericValue, prob_group)] %>%
1485867321194:.[, `:=`(
1485867321194:alpha = prior_alpha + cum_num_purchases,
1485867321195:beta = prior_beta + cum_N - cum_num_purchases
1485867321195:)]
1485867321196:}
1485867321197:createSimBaseData <- function(binned_purchases, model_params, prior_alpha, prior_beta, keepOnlyLastCampaign = FALSE)
1485867321197:{
1485867321198:if (missing(model_params))
1485867321198:{
1485867321198:model_params <- generateModelParams(binned_purchases = binned_purchases,
1485867321199:prior_alpha = prior_alpha,
1485867321199:prior_beta = prior_beta)
1485867321199:}
1485867321200:if (keepOnlyLastCampaign == TRUE)
1485867321200:{
1485867321201:model_params <- model_params[campaign_start_date == max(campaign_start_date)]
1485867321201:}
1485867321202:model_params %>%
1485867321202:copy() %>%
1485867321202:.[,
1485867321203:`:=`(alpha0 = .SD[numericValue == 0, alpha],
1485867321204:beta0 = .SD[numericValue == 0, beta]),
1485867321204:by = .(prob_group, campaign_start_date)] %>%
1485867321205:.[numericValue != 0] %>%
1485867321206:.[, .(prob_group, campaign_start_date, numericValue, alpha, beta, alpha0, beta0)] %>%
1485867321207:merge(binned_purchases %>%
1485867321208:.[campaign_start_date == min(campaign_start_date)] %>%
1485867321208:.[, campaign_start_date := campaign_start_date - weeks(1)] %>%
1485867321209:rbind(binned_purchases) %>%
1485867321209:.[, .(contact_id, campaign_start_date, prob_group, buying_prob)],
1485867321210:by = c('campaign_start_date', 'prob_group'), allow.cartesian = T)
1485867321210:}
1485867321211:calculateEffects <- function(sim_base_data)
1485867321212:{
1485867321212:sim_base_data %>%
1485867321212:copy() %>%
1485867321213:.[, `:=`(rate = rbeta(.N, alpha, beta),
1485867321213:rate0 = rbeta(.N, alpha0, beta0))] %>%
1485867321213:.[, `:=`(effect = rate/rate0)]
1485867321213:}
1485867321214:getOptimalDistributionForLambdas <- function(contacts_w_effects, lambdas)
1485867321215:{
1485867321215:data.table(lambda = lambdas) %>%
1485867321215:.[,
1485867321216:contacts_w_effects %>%
1485867321216:.[, `:=`(incr_revenue_per_cv = pmin(1 - buying_prob, effect * buying_prob),
1485867321216:incr_cost_per_cv = pmin(1, buying_prob * (1 + effect)) * numericValue/100.)] %>%
1485867321217:.[, `:=`(objective = lambda * incr_revenue_per_cv - (1 - lambda) * incr_cost_per_cv)] %>%
1485867321217:.[, `:=`(max_objective = max(objective)), by = .(contact_id, campaign_start_date)] %>%
1485867321218:.[objective == max_objective] %>%
1485867321218:.[objective < 0, c('numericValue', 'incr_cost_per_cv', 'incr_revenue_per_cv', 'objective') := 0],
1485867321219:by = lambda]
1485867321219:}
1485867321220:# Wrapper for all
1485867321221:distributeIncentives <- function(recom_history,
1485867321221:n_bins,
1485867321223:prior_alpha,
1485867321223:prior_beta,
1485867321224:lambdas,
1485867321224:n_sample = 10000,
1485867321224:keepOnlyLastCampaign = FALSE)
1485867321225:{
1485867321225:recom_history %>%
1485867321226:binPurchases(n_bins) %>%
1485867321226:createSimBaseData(prior_alpha = prior_alpha,
1485867321226:prior_beta = prior_beta,
1485867321227:keepOnlyLastCampaign = keepOnlyLastCampaign) %>%
1485867321227:.[contact_id %in% sample(unique(contact_id), n_sample)] %>%
1485867321227:# .[contact_id == 878214521] %>%
1485867321228:calculateEffects %>%
1485867321228:getOptimalDistributionForLambdas(lambda = lambdas) %>%
1485867321228:.[order(campaign_start_date, numericValue)]
1485867321229:}
1485867334017:N_BINS <- 4
1485867334018:recom_history_w_purchase_hds %>%
1485867334018:binPurchases(N_BINS) %>%
1485867334018:generateModelParams(prior_alpha = 0.5,
1485867334019:prior_beta = 0.5) %>%
1485867334019:.[campaign_start_date == max(campaign_start_date)] %>%
1485867334019:.[N > 100] %>%
1485867334019:.[, `:=`(
1485867334020:rate_lower = 100 * qbeta(0.05, alpha, beta),
1485867334020:rate = 100 * alpha / (alpha + beta),
1485867334020:rate_higher = 100 * qbeta(0.95, alpha, beta)
1485867334021:)] %>%
1485867334021:.[, incentive_name := reorder(paste0(numericValue, '% discount'), numericValue)] %>%
1485867334022:.[, prob_group_named := ifelse(is.na(prob_group),
1485867334022:'Low\nbuying prob.',
1485867334023:ifelse(prob_group == N_BINS,
1485867334024:'High\nbuying prob.',
1485867334024:prob_group))] %>%
1485867334025:.[, prob_group_named := relevel(factor(prob_group_named), 'Low\nbuying prob.')] %>%
1485867334025:.[, campaign_start_date_named := paste0('Following the campaign on ', campaign_start_date)] %>%
1485867334026:ggplot(aes(x = incentive_name, col = incentive_name)) +
1485867334026:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher), size = 5, linetype = 1) +
1485867334026:geom_text(aes(y = rate_lower, label = paste0(round(rate_lower, 2), '%')), size = 3, hjust = 'right', fontface = 'bold') +
1485867334027:geom_text(aes(y = rate_higher, label = paste0(round(rate_higher, 2), '%')), size = 3, hjust = 'left', fontface = 'bold') +
1485867334028:facet_grid(prob_group_named~campaign_start_date_named) +
1485867334028:coord_flip() +
1485867334029:theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = 'bottom') +
1485867334030:labs(x = '',
1485867334030:y = 'Purchase rate [%]',
1485867334031:col = 'Incentive',
1485867334032:title = 'Estimated purchase rate ranges for different incentives',
1485867334033:subtitle = '90% probability interval shown for each incentive that was sent to at least 100 contacts in each group')
1485867348285:attribution_variants[[1]] %>%
1485867348285:binPurchases(N_BINS) %>%
1485867348286:generateModelParams(prior_alpha = 0.5,
1485867348286:prior_beta = 0.5) %>%
1485867348286:.[campaign_start_date == max(campaign_start_date)] %>%
1485867348287:.[N > 100] %>%
1485867348287:.[, `:=`(
1485867348287:rate_lower = 100 * qbeta(0.05, alpha, beta),
1485867348288:rate = 100 * alpha / (alpha + beta),
1485867348288:rate_higher = 100 * qbeta(0.95, alpha, beta)
1485867348289:)] %>%
1485867348289:.[, incentive_name := reorder(paste0(numericValue, '% discount'), numericValue)] %>%
1485867348289:.[, prob_group_named := ifelse(is.na(prob_group),
1485867348290:'Low\nbuying prob.',
1485867348291:ifelse(prob_group == N_BINS,
1485867348291:'High\nbuying prob.',
1485867348292:prob_group))] %>%
1485867348292:.[, prob_group_named := relevel(factor(prob_group_named), 'Low\nbuying prob.')] %>%
1485867348293:.[, campaign_start_date_named := paste0('Following the campaign on ', campaign_start_date)] %>%
1485867348293:ggplot(aes(x = incentive_name, col = incentive_name)) +
1485867348294:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher), size = 5, linetype = 1) +
1485867348296:geom_text(aes(y = rate_lower, label = paste0(round(rate_lower, 2), '%')), size = 3, hjust = 'right', fontface = 'bold') +
1485867348298:geom_text(aes(y = rate_higher, label = paste0(round(rate_higher, 2), '%')), size = 3, hjust = 'left', fontface = 'bold') +
1485867348299:facet_grid(prob_group_named~campaign_start_date_named) +
1485867348299:coord_flip() +
1485867348300:theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = 'bottom') +
1485867348301:labs(x = '',
1485867348302:y = 'Purchase rate [%]',
1485867348302:col = 'Incentive',
1485867348303:title = 'Estimated purchase rate ranges for different incentives',
1485867348304:subtitle = '90% probability interval shown for each incentive that was sent to at least 100 contacts in each group')
1485867378186:binPurchases <- function(recom_history, n_bins)
1485867378187:{
1485867378187:recom_history %>%
1485867378188:.[,
1485867378188:.(contact_id,
1485867378189:buying_prob,
1485867378189:numericValue = ifelse(is.na(numericValue), 0, as.numeric(numericValue)),
1485867378190:got_incentive = !(is.na(numericValue) | numericValue == 0),
1485867378191:num_purchases = ifelse(is.na(num_purchases), 0, num_purchases),
1485867378191:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount),
1485867378192:has_purchased = factor(!is.na(num_purchases)),
1485867378193:campaign_start_date
1485867378194:)] %>%
1485867378195:.[order(buying_prob)] %>%
1485867378195:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1485867378197:}
1485867385443:attribution_variants[[1]] %>%
1485867385444:binPurchases(N_BINS) %>%
1485867385444:generateModelParams(prior_alpha = 0.5,
1485867385445:prior_beta = 0.5) %>%
1485867385445:.[campaign_start_date == max(campaign_start_date)] %>%
1485867385445:.[N > 100] %>%
1485867385446:.[, `:=`(
1485867385446:rate_lower = 100 * qbeta(0.05, alpha, beta),
1485867385446:rate = 100 * alpha / (alpha + beta),
1485867385447:rate_higher = 100 * qbeta(0.95, alpha, beta)
1485867385447:)] %>%
1485867385447:.[, incentive_name := reorder(paste0(numericValue, '% discount'), numericValue)] %>%
1485867385448:.[, prob_group_named := ifelse(is.na(prob_group),
1485867385448:'Low\nbuying prob.',
1485867385449:ifelse(prob_group == N_BINS,
1485867385449:'High\nbuying prob.',
1485867385450:prob_group))] %>%
1485867385450:.[, prob_group_named := relevel(factor(prob_group_named), 'Low\nbuying prob.')] %>%
1485867385450:.[, campaign_start_date_named := paste0('Following the campaign on ', campaign_start_date)] %>%
1485867385451:ggplot(aes(x = incentive_name, col = incentive_name)) +
1485867385451:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher), size = 5, linetype = 1) +
1485867385452:geom_text(aes(y = rate_lower, label = paste0(round(rate_lower, 2), '%')), size = 3, hjust = 'right', fontface = 'bold') +
1485867385452:geom_text(aes(y = rate_higher, label = paste0(round(rate_higher, 2), '%')), size = 3, hjust = 'left', fontface = 'bold') +
1485867385453:facet_grid(prob_group_named~campaign_start_date_named) +
1485867385453:coord_flip() +
1485867385454:theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = 'bottom') +
1485867385455:labs(x = '',
1485867385455:y = 'Purchase rate [%]',
1485867385456:col = 'Incentive',
1485867385457:title = 'Estimated purchase rate ranges for different incentives',
1485867385458:subtitle = '90% probability interval shown for each incentive that was sent to at least 100 contacts in each group')
1485868027549:attribution_variants[[1]] %>%
1485868027550:.[, .(.N, sales_amount = sum(sales_amount, na.rm = T), num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868027551:ggplot(aes(x = class, y = sales_amount, fill = class)) +
1485868027551:geom_bar(stat = 'identity', position = 'dodge') +
1485868027552:geom_label(aes(label = sprintf('%0.0f', sales_amount)), show.legend = F) +
1485868027552:geom_text(aes(y = 0, label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sales_amount/num_purchases)), vjust = 'top') +
1485868027552:scale_y_continuous(expand = c(0.1, 0)) +
1485868027553:labs(x = 'Segment',
1485868027553:y = "",
1485868027554:fill = 'Segment',
1485868027554:title = sprintf("HDS based total revenue (%s)", selected_customer),
1485868027555:subtitle = sprintf('Aggregated over %d campaign(s)', num_campaigns))
1485868285636:walk(attribution_variants, print(attr(., 'source')))
1485868291142:walk(attribution_variants, ~print(attr(., 'source')))
1485868306512:walk(attribution_variants, ~print(attr(., 'attribution')))
1485868312711:walk(attribution_variants, ~print(attr(., 'attribution')$source))
1485868454632:?sprintf
1485868504493:walk(
1485868504494:attribution_variants,
1485868504495:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868504495:.[, `:=`(
1485868504495:alpha = alpha_prior + num_purchases,
1485868504496:beta = beta_prior + N - num_purchases
1485868504496:)] %>%
1485868504496:.[, `:=`(
1485868504497:rate_lower = qbeta(lower_percentile, alpha, beta),
1485868504497:rate = alpha / (alpha + beta),
1485868504497:rate_higher = qbeta(higher_percentile, alpha, beta)
1485868504498:)] %>%
1485868504498:ggplot(aes(x = class, y = rate, fill = class)) +
1485868504498:geom_bar(stat = 'identity', position = 'dodge') +
1485868504499:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485868504499:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485868504500:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485868504501:scale_y_continuous(expand = c(0.1, 0)) +
1485868504502:labs(x = 'Segment',
1485868504503:y = "Purchase rate",
1485868504504:fill = 'Segment',
1485868504504:title = sprintf("%s based purchase rates (%c)", 'HDS', selected_customer),
1485868504505:subtitle = sprintf('Aggregated over %d campaign(s)'))
1485868504505:)
1485868607900:walk(
1485868607900:attribution_variants,
1485868607901:function(dt) dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868607901:.[, `:=`(
1485868607902:alpha = alpha_prior + num_purchases,
1485868607902:beta = beta_prior + N - num_purchases
1485868607902:)] %>%
1485868607903:.[, `:=`(
1485868607903:rate_lower = qbeta(lower_percentile, alpha, beta),
1485868607903:rate = alpha / (alpha + beta),
1485868607904:rate_higher = qbeta(higher_percentile, alpha, beta)
1485868607904:)] %>%
1485868607905:ggplot(aes(x = class, y = rate, fill = class)) +
1485868607908:geom_bar(stat = 'identity', position = 'dodge') +
1485868607909:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485868607911:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485868607912:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485868607913:scale_y_continuous(expand = c(0.1, 0)) +
1485868607913:labs(x = 'Segment',
1485868607914:y = "Purchase rate",
1485868607914:fill = 'Segment',
1485868607915:title = sprintf("%s based purchase rates (%c)", 'HDS', selected_customer),
1485868607915:subtitle = sprintf('Aggregated over %d campaign(s)'))
1485868607916:)
1485868625276:walk(
1485868625276:attribution_variants,
1485868625277:function(dt) dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868625277:.[, `:=`(
1485868625277:alpha = alpha_prior + num_purchases,
1485868625278:beta = beta_prior + N - num_purchases
1485868625278:)] %>%
1485868625279:.[, `:=`(
1485868625279:rate_lower = qbeta(lower_percentile, alpha, beta),
1485868625280:rate = alpha / (alpha + beta),
1485868625280:rate_higher = qbeta(higher_percentile, alpha, beta)
1485868625280:)] %>%
1485868625281:ggplot(aes(x = class, y = rate, fill = class)) +
1485868625281:geom_bar(stat = 'identity', position = 'dodge') +
1485868625281:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485868625282:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485868625282:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485868625282:scale_y_continuous(expand = c(0.1, 0)) +
1485868625283:labs(x = 'Segment',
1485868625283:y = "Purchase rate",
1485868625284:fill = 'Segment',
1485868625284:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485868625285:subtitle = sprintf('Aggregated over %d campaign(s)'))
1485868625285:)
1485868638317:walk(
1485868638317:attribution_variants,
1485868638318:function(dt) dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868638318:.[, `:=`(
1485868638319:alpha = alpha_prior + num_purchases,
1485868638319:beta = beta_prior + N - num_purchases
1485868638319:)] %>%
1485868638320:.[, `:=`(
1485868638320:rate_lower = qbeta(lower_percentile, alpha, beta),
1485868638320:rate = alpha / (alpha + beta),
1485868638321:rate_higher = qbeta(higher_percentile, alpha, beta)
1485868638321:)] %>%
1485868638321:ggplot(aes(x = class, y = rate, fill = class)) +
1485868638322:geom_bar(stat = 'identity', position = 'dodge') +
1485868638322:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485868638323:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485868638323:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485868638324:scale_y_continuous(expand = c(0.1, 0)) +
1485868638324:labs(x = 'Segment',
1485868638325:y = "Purchase rate",
1485868638325:fill = 'Segment',
1485868638326:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485868638326:subtitle = sprintf('Aggregated over %d campaign(s)'), 10)
1485868638328:)
1485868667946:sprintf("%s hey %s", "bob", "joj")
1485868707220:walk(
1485868707221:attribution_variants,
1485868707222:function(dt) dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868707222:.[, `:=`(
1485868707222:alpha = alpha_prior + num_purchases,
1485868707223:beta = beta_prior + N - num_purchases
1485868707223:)] %>%
1485868707223:.[, `:=`(
1485868707224:rate_lower = qbeta(lower_percentile, alpha, beta),
1485868707224:rate = alpha / (alpha + beta),
1485868707224:rate_higher = qbeta(higher_percentile, alpha, beta)
1485868707224:)] %>%
1485868707225:ggplot(aes(x = class, y = rate, fill = class)) +
1485868707225:geom_bar(stat = 'identity', position = 'dodge') +
1485868707226:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485868707226:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485868707227:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485868707228:scale_y_continuous(expand = c(0.1, 0)) +
1485868707229:labs(x = 'Segment',
1485868707230:y = "Purchase rate",
1485868707230:fill = 'Segment',
1485868707231:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485868707231:subtitle = sprintf('Aggregated over %d campaign(s)', 10)
1485868707232:)
1485868707233:)
1485868724086:?ggsave
1485868740223:?seq
1485868752263:3 %>% seq(4)
1485868753934:3 %>% seq(5)
1485868759446:3 %>% seq(1)
1485868762551:3 %>% seq(from = 1)
1485868975136:walk(
1485868975137:attribution_variants,
1485868975138:function(dt) dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485868975138:.[, `:=`(
1485868975138:alpha = alpha_prior + num_purchases,
1485868975139:beta = beta_prior + N - num_purchases
1485868975139:)] %>%
1485868975139:.[, `:=`(
1485868975140:rate_lower = qbeta(lower_percentile, alpha, beta),
1485868975140:rate = alpha / (alpha + beta),
1485868975140:rate_higher = qbeta(higher_percentile, alpha, beta)
1485868975141:)] %>%
1485868975141:ggplot(aes(x = class, y = rate, fill = class)) +
1485868975143:geom_bar(stat = 'identity', position = 'dodge') +
1485868975144:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485868975144:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485868975144:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485868975145:scale_y_continuous(expand = c(0.1, 0)) +
1485868975145:labs(x = 'Segment',
1485868975146:y = "Purchase rate",
1485868975146:fill = 'Segment',
1485868975147:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485868975147:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485868975148:) %>%
1485868975149:ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s.png', attr(dt, 'attribution')$source))
1485868975150:)
1485869004217:walk(
1485869004217:attribution_variants,
1485869004218:function(dt) dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485869004218:.[, `:=`(
1485869004219:alpha = alpha_prior + num_purchases,
1485869004219:beta = beta_prior + N - num_purchases
1485869004219:)] %>%
1485869004220:.[, `:=`(
1485869004220:rate_lower = qbeta(lower_percentile, alpha, beta),
1485869004220:rate = alpha / (alpha + beta),
1485869004221:rate_higher = qbeta(higher_percentile, alpha, beta)
1485869004221:)] %>%
1485869004221:ggplot(aes(x = class, y = rate, fill = class)) +
1485869004222:geom_bar(stat = 'identity', position = 'dodge') +
1485869004222:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485869004222:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485869004223:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485869004223:scale_y_continuous(expand = c(0.1, 0)) +
1485869004224:labs(x = 'Segment',
1485869004224:y = "Purchase rate",
1485869004224:fill = 'Segment',
1485869004225:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485869004225:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485869004226:) %>%
1485869004227:print()
1485869004228:# ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s.png', attr(dt, 'attribution')$source))
1485869004229:)
1485869068654:walk(
1485869068656:attribution_variants,
1485869068656:function(dt) {
1485869068657:p <- dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485869068657:.[, `:=`(
1485869068657:alpha = alpha_prior + num_purchases,
1485869068658:beta = beta_prior + N - num_purchases
1485869068658:)] %>%
1485869068659:.[, `:=`(
1485869068659:rate_lower = qbeta(lower_percentile, alpha, beta),
1485869068659:rate = alpha / (alpha + beta),
1485869068660:rate_higher = qbeta(higher_percentile, alpha, beta)
1485869068660:)] %>%
1485869068660:ggplot(aes(x = class, y = rate, fill = class)) +
1485869068661:geom_bar(stat = 'identity', position = 'dodge') +
1485869068661:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485869068661:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485869068662:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485869068662:scale_y_continuous(expand = c(0.1, 0)) +
1485869068663:labs(x = 'Segment',
1485869068664:y = "Purchase rate",
1485869068665:fill = 'Segment',
1485869068666:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485869068667:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485869068668:)
1485869068669:p
1485869068669:}
1485869068670:# ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s.png', attr(dt, 'attribution')$source))
1485869068671:)
1485869098990:walk(
1485869098992:attribution_variants,
1485869098992:function(dt) {
1485869098993:p <- dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485869098993:.[, `:=`(
1485869098994:alpha = alpha_prior + num_purchases,
1485869098994:beta = beta_prior + N - num_purchases
1485869098994:)] %>%
1485869098995:.[, `:=`(
1485869098995:rate_lower = qbeta(lower_percentile, alpha, beta),
1485869098996:rate = alpha / (alpha + beta),
1485869098996:rate_higher = qbeta(higher_percentile, alpha, beta)
1485869098996:)] %>%
1485869098997:ggplot(aes(x = class, y = rate, fill = class)) +
1485869098997:geom_bar(stat = 'identity', position = 'dodge') +
1485869098998:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485869098998:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485869099000:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485869099001:scale_y_continuous(expand = c(0.1, 0)) +
1485869099002:labs(x = 'Segment',
1485869099003:y = "Purchase rate",
1485869099003:fill = 'Segment',
1485869099004:title = sprintf("%s based purchase rates (%s)", 'HDS', selected_customer),
1485869099004:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485869099005:)
1485869099006:print(p)
1485869099007:}
1485869099007:# ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s.png', attr(dt, 'attribution')$source))
1485869099008:)
1485869140533:walk(
1485869140534:attribution_variants,
1485869140535:function(dt) {
1485869140535:p <- dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485869140536:.[, `:=`(
1485869140536:alpha = alpha_prior + num_purchases,
1485869140537:beta = beta_prior + N - num_purchases
1485869140537:)] %>%
1485869140538:.[, `:=`(
1485869140539:rate_lower = qbeta(lower_percentile, alpha, beta),
1485869140539:rate = alpha / (alpha + beta),
1485869140540:rate_higher = qbeta(higher_percentile, alpha, beta)
1485869140541:)] %>%
1485869140542:ggplot(aes(x = class, y = rate, fill = class)) +
1485869140543:geom_bar(stat = 'identity', position = 'dodge') +
1485869140543:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485869140544:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485869140544:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485869140545:scale_y_continuous(expand = c(0.1, 0)) +
1485869140546:labs(x = 'Segment',
1485869140547:y = "Purchase rate",
1485869140548:fill = 'Segment',
1485869140548:title = sprintf("%s based purchase rates (%s)", toupper(attr(dt, 'attribution')$source), selected_customer),
1485869140549:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485869140549:)
1485869140549:print(p)
1485869140550:}
1485869140551:# ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s.png', attr(dt, 'attribution')$source))
1485869140553:)
1485869203467:?scale::percent
1485869207141:?scales::percent
1485869217312:?scale_y_continuous
1485869227641:walk(
1485869227641:attribution_variants,
1485869227642:function(dt) {
1485869227642:p <- dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485869227643:.[, `:=`(
1485869227643:alpha = alpha_prior + num_purchases,
1485869227643:beta = beta_prior + N - num_purchases
1485869227644:)] %>%
1485869227644:.[, `:=`(
1485869227645:rate_lower = qbeta(lower_percentile, alpha, beta),
1485869227645:rate = alpha / (alpha + beta),
1485869227645:rate_higher = qbeta(higher_percentile, alpha, beta)
1485869227646:)] %>%
1485869227646:ggplot(aes(x = class, y = rate, fill = class)) +
1485869227647:geom_bar(stat = 'identity', position = 'dodge') +
1485869227647:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485869227647:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485869227648:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485869227648:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485869227649:labs(x = 'Segment',
1485869227649:y = "Purchase rate",
1485869227649:fill = 'Segment',
1485869227650:title = sprintf("%s based purchase rates (%s)", toupper(attr(dt, 'attribution')$source), selected_customer),
1485869227650:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485869227651:)
1485869227652:print(p)
1485869227652:}
1485869227653:# ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s.png', attr(dt, 'attribution')$source))
1485869227653:)
1485869639895:attr(attribution_variants[[1]], 'attribution')
1485870010078:attr(attribution_variants[[1]], 'attribution') %>% paste(collapse = '_')
1485870102033:attr(attribution_variants[[1]][1:3], 'attribution') %>% paste(collapse = '_')
1485870129545:attr(attribution_variants[[1]], 'attribution') %>% paste(collapse = '_')
1485870371938:attr(attribution_variants[[1]], 'attribution') %>% paste(collapse = '_')
1485870411116:attr(attribution_variants[[1]], 'attribution')[1:3] %>% paste(collapse = '_')
1485870424624:createVariantFileSuffix <- function(attribution_dt) {
1485870424625:attribution_metadata <- attr(attribution_dt, 'attribution')
1485870424625:if (attribution_metadata$source == 'hds') {
1485870424626:return('hds')
1485870424626:} else {
1485870424626:if (attribution_metadata$method == 'webextend') {
1485870424627:return('si_webextend')
1485870424627:} else {
1485870424627:if (attribution_metadata$filter == 'none') {
1485870424628:return(paste(attribution_metadata[1:3], collapse = '_'))
1485870424628:} else {
1485870424628:return(paste(attribution_metadata, collapse = '_'))
1485870424629:}
1485870424629:}
1485870424629:}
1485870424630:}
1485870447957:walk(attribution_variants, ~print(createVariantFileSuffix(.)))
1485870608234:walk(
1485870608234:attribution_variants,
1485870608235:function(dt) {
1485870608235:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485870608236:.[, `:=`(
1485870608236:alpha = alpha_prior + num_purchases,
1485870608237:beta = beta_prior + N - num_purchases
1485870608237:)] %>%
1485870608237:.[, `:=`(
1485870608238:rate_lower = qbeta(lower_percentile, alpha, beta),
1485870608238:rate = alpha / (alpha + beta),
1485870608238:rate_higher = qbeta(higher_percentile, alpha, beta)
1485870608239:)] %>%
1485870608239:ggplot(aes(x = class, y = rate, fill = class)) +
1485870608240:geom_bar(stat = 'identity', position = 'dodge') +
1485870608240:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485870608240:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485870608241:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485870608241:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485870608242:labs(x = 'Segment',
1485870608243:y = "Purchase rate",
1485870608245:fill = 'Segment',
1485870608245:title = "Purchase rates",
1485870608246:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485870608247:)
1485870608247:ggsave(file = file.path('data', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))))
1485870608248:}
1485870608249:)
1485870627784:walk(
1485870627786:attribution_variants,
1485870627786:function(dt) {
1485870627787:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485870627787:.[, `:=`(
1485870627788:alpha = alpha_prior + num_purchases,
1485870627788:beta = beta_prior + N - num_purchases
1485870627789:)] %>%
1485870627789:.[, `:=`(
1485870627790:rate_lower = qbeta(lower_percentile, alpha, beta),
1485870627790:rate = alpha / (alpha + beta),
1485870627790:rate_higher = qbeta(higher_percentile, alpha, beta)
1485870627791:)] %>%
1485870627791:ggplot(aes(x = class, y = rate, fill = class)) +
1485870627791:geom_bar(stat = 'identity', position = 'dodge') +
1485870627792:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485870627793:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485870627794:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485870627795:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485870627797:labs(x = 'Segment',
1485870627798:y = "Purchase rate",
1485870627798:fill = 'Segment',
1485870627799:title = "Purchase rates",
1485870627800:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485870627800:)
1485870627801:ggsave(file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))))
1485870627801:}
1485870627802:)
1485870673108:walk(
1485870673109:attribution_variants,
1485870673110:function(dt) {
1485870673110:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485870673110:.[, `:=`(
1485870673111:alpha = alpha_prior + num_purchases,
1485870673111:beta = beta_prior + N - num_purchases
1485870673112:)] %>%
1485870673113:.[, `:=`(
1485870673114:rate_lower = qbeta(lower_percentile, alpha, beta),
1485870673114:rate = alpha / (alpha + beta),
1485870673115:rate_higher = qbeta(higher_percentile, alpha, beta)
1485870673115:)] %>%
1485870673115:ggplot(aes(x = class, y = rate, fill = class)) +
1485870673116:geom_bar(stat = 'identity', position = 'dodge') +
1485870673116:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485870673117:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485870673117:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485870673118:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485870673119:labs(x = 'Segment',
1485870673120:y = "Purchase rate",
1485870673120:fill = 'Segment',
1485870673121:title = "Purchase rates",
1485870673121:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485870673122:)
1485870673123:ggsave(
1485870673123:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485870673124:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485870673124:)
1485870673125:}
1485870673126:)
1485871371244:createVariantSubtitle <- function(attribution_dt) {
1485871371245:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(dt[, unique(campaign_id)]))
1485871371245:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871371246:if (attribution_metadata$source == 'hds') {
1485871371246:source <- 'HDS'
1485871371247:} else {
1485871371247:if (attribution_metadata$method == 'webextend') {
1485871371248:source <- 'SI (Webextend-based attribution)'
1485871371248:} else {
1485871371248:source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871371249:if (attribution_metadata$filter = 'none') {
1485871371249:filter <- ''
1485871371250:} else {
1485871371250:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871371251:}
1485871371251:}
1485871371251:}
1485871371252:paste(num_campaigns, 'Source:', source, filter)
1485871371252:}
1485871371253:createVariantFileSuffix <- function(attribution_dt) {
1485871371253:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871371253:if (attribution_metadata$source == 'hds') {
1485871371254:return('hds')
1485871371254:} else {
1485871371254:if (attribution_metadata$method == 'webextend') {
1485871371255:return('si_webextend')
1485871371255:} else {
1485871371256:if (attribution_metadata$filter == 'none') {
1485871371256:return(paste(attribution_metadata[1:3], collapse = '_'))
1485871371256:} else {
1485871371257:return(paste(attribution_metadata, collapse = '_'))
1485871371257:}
1485871371258:}
1485871371259:}
1485871371259:}
1485871371260:walk(
1485871371261:attribution_variants,
1485871371261:function(dt) {
1485871371261:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871371262:.[, `:=`(
1485871371262:alpha = alpha_prior + num_purchases,
1485871371262:beta = beta_prior + N - num_purchases
1485871371263:)] %>%
1485871371263:.[, `:=`(
1485871371263:rate_lower = qbeta(lower_percentile, alpha, beta),
1485871371264:rate = alpha / (alpha + beta),
1485871371264:rate_higher = qbeta(higher_percentile, alpha, beta)
1485871371265:)] %>%
1485871371265:ggplot(aes(x = class, y = rate, fill = class)) +
1485871371266:geom_bar(stat = 'identity', position = 'dodge') +
1485871371266:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485871371267:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485871371267:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485871371268:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485871371269:labs(x = 'Segment',
1485871371270:y = "Purchase rate",
1485871371270:fill = 'Segment',
1485871371271:title = "Purchase rates in different segments",
1485871371272:subtitle = sprintf('Aggregated over %d campaign(s)', length(dt[, unique(campaign_id)]))
1485871371272:)
1485871371273:ggsave(
1485871371274:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871371275:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871371275:)
1485871371276:}
1485871371277:)
1485871384701:walk(
1485871384702:attribution_variants,
1485871384703:function(dt) {
1485871384703:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871384704:.[, `:=`(
1485871384705:alpha = alpha_prior + num_purchases,
1485871384705:beta = beta_prior + N - num_purchases
1485871384706:)] %>%
1485871384706:.[, `:=`(
1485871384707:rate_lower = qbeta(lower_percentile, alpha, beta),
1485871384708:rate = alpha / (alpha + beta),
1485871384708:rate_higher = qbeta(higher_percentile, alpha, beta)
1485871384709:)] %>%
1485871384709:ggplot(aes(x = class, y = rate, fill = class)) +
1485871384710:geom_bar(stat = 'identity', position = 'dodge') +
1485871384710:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485871384711:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485871384711:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485871384712:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485871384713:labs(x = 'Segment',
1485871384715:y = "Purchase rate",
1485871384716:fill = 'Segment',
1485871384717:title = "Purchase rates in different segments",
1485871384718:subtitle = createVariantSubtitle(dt)
1485871384719:)
1485871384720:ggsave(
1485871384721:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871384721:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871384722:)
1485871384722:}
1485871384723:)
1485871400236:createVariantSubtitle <- function(attribution_dt) {
1485871400237:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(dt[, unique(campaign_id)]))
1485871400238:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871400238:if (attribution_metadata$source == 'hds') {
1485871400239:source <- 'HDS'
1485871400239:} else {
1485871400240:if (attribution_metadata$method == 'webextend') {
1485871400240:source <- 'SI (Webextend-based attribution)'
1485871400241:} else {
1485871400242:source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871400242:if (attribution_metadata$filter = 'none') {
1485871400244:filter <- ''
1485871400245:} else {
1485871400247:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871400249:}
1485871400250:}
1485871400251:}
1485871400252:paste(num_campaigns, 'Source:', source, filter)
1485871400253:}
1485871415392:createVariantSubtitle <- function(attribution_dt) {
1485871415392:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(dt[, unique(campaign_id)]))
1485871415394:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871415395:if (attribution_metadata$source == 'hds') {
1485871415395:source <- 'HDS'
1485871415395:} else {
1485871415396:if (attribution_metadata$method == 'webextend') {
1485871415396:source <- 'SI (Webextend-based attribution)'
1485871415396:} else {
1485871415397:source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871415397:if (attribution_metadata$filter = 'none') {
1485871415397:filter <- ''
1485871415398:} else {
1485871415399:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871415399:}
1485871415400:}
1485871415400:}
1485871415400:paste(num_campaigns, 'Source:', source, filter)
1485871415401:}
1485871426970:class(source)
1485871441477:createVariantSubtitle <- function(attribution_dt) {
1485871441478:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(dt[, unique(campaign_id)]))
1485871441479:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871441479:if (attribution_metadata$source == 'hds') {
1485871441479:data_source <- 'HDS'
1485871441480:} else {
1485871441480:if (attribution_metadata$method == 'webextend') {
1485871441481:data_source <- 'SI (Webextend-based attribution)'
1485871441481:} else {
1485871441482:data_source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871441482:if (attribution_metadata$filter = 'none') {
1485871441483:filter <- ''
1485871441485:} else {
1485871441486:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871441486:}
1485871441487:}
1485871441487:}
1485871441488:paste(num_campaigns, 'Source:', data_source, filter)
1485871441489:}
1485871478337:createVariantSubtitle <- function(attribution_dt) {
1485871478337:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(dt[, unique(campaign_id)]))
1485871478338:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871478339:if (attribution_metadata$source == 'hds') {
1485871478339:data_source <- 'HDS'
1485871478339:} else {
1485871478340:if (attribution_metadata$method == 'webextend') {
1485871478340:data_source <- 'SI (Webextend-based attribution)'
1485871478340:} else {
1485871478341:data_source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871478341:if (attribution_metadata$filter == 'none') {
1485871478342:filter <- ''
1485871478342:} else {
1485871478342:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871478343:}
1485871478343:}
1485871478344:}
1485871478344:paste(num_campaigns, 'Source:', data_source, filter)
1485871478344:}
1485871482327:walk(
1485871482327:attribution_variants,
1485871482328:function(dt) {
1485871482329:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871482330:.[, `:=`(
1485871482330:alpha = alpha_prior + num_purchases,
1485871482330:beta = beta_prior + N - num_purchases
1485871482331:)] %>%
1485871482331:.[, `:=`(
1485871482331:rate_lower = qbeta(lower_percentile, alpha, beta),
1485871482332:rate = alpha / (alpha + beta),
1485871482332:rate_higher = qbeta(higher_percentile, alpha, beta)
1485871482333:)] %>%
1485871482334:ggplot(aes(x = class, y = rate, fill = class)) +
1485871482335:geom_bar(stat = 'identity', position = 'dodge') +
1485871482336:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485871482336:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485871482337:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485871482338:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485871482339:labs(x = 'Segment',
1485871482340:y = "Purchase rate",
1485871482341:fill = 'Segment',
1485871482341:title = "Purchase rates in different segments",
1485871482342:subtitle = createVariantSubtitle(dt)
1485871482342:)
1485871482343:ggsave(
1485871482343:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871482343:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871482344:)
1485871482345:}
1485871482346:)
1485871512999:attribution_variants[[1]]
1485871518884:cucc <- attribution_variants[[1]]
1485871523303:createVariantSubtitle(cucc)
1485871539526:createVariantSubtitle <- function(attribution_dt) {
1485871539527:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485871539528:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871539528:if (attribution_metadata$source == 'hds') {
1485871539529:data_source <- 'HDS'
1485871539529:} else {
1485871539530:if (attribution_metadata$method == 'webextend') {
1485871539531:data_source <- 'SI (Webextend-based attribution)'
1485871539532:} else {
1485871539533:data_source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871539535:if (attribution_metadata$filter == 'none') {
1485871539536:filter <- ''
1485871539537:} else {
1485871539539:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871539540:}
1485871539541:}
1485871539542:}
1485871539543:paste(num_campaigns, 'Source:', data_source, filter)
1485871539543:}
1485871544151:walk(
1485871544152:attribution_variants,
1485871544153:function(dt) {
1485871544153:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871544154:.[, `:=`(
1485871544155:alpha = alpha_prior + num_purchases,
1485871544156:beta = beta_prior + N - num_purchases
1485871544157:)] %>%
1485871544157:.[, `:=`(
1485871544158:rate_lower = qbeta(lower_percentile, alpha, beta),
1485871544158:rate = alpha / (alpha + beta),
1485871544158:rate_higher = qbeta(higher_percentile, alpha, beta)
1485871544159:)] %>%
1485871544160:ggplot(aes(x = class, y = rate, fill = class)) +
1485871544160:geom_bar(stat = 'identity', position = 'dodge') +
1485871544161:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485871544162:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485871544162:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485871544163:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485871544164:labs(x = 'Segment',
1485871544165:y = "Purchase rate",
1485871544166:fill = 'Segment',
1485871544167:title = "Purchase rates in different segments",
1485871544168:subtitle = createVariantSubtitle(dt)
1485871544168:)
1485871544169:ggsave(
1485871544169:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871544170:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871544170:)
1485871544171:}
1485871544172:)
1485871624098:createVariantSubtitle <- function(attribution_dt) {
1485871624099:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485871624099:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871624100:if (attribution_metadata$source == 'hds') {
1485871624100:data_source <- 'HDS'
1485871624100:} else {
1485871624101:if (attribution_metadata$method == 'webextend') {
1485871624102:data_source <- 'SI (Webextend-based attribution)'
1485871624102:} else {
1485871624103:data_source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871624104:if (attribution_metadata$filter == 'none') {
1485871624104:filter <- ''
1485871624105:} else {
1485871624106:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871624107:}
1485871624108:}
1485871624109:}
1485871624110:paste(num_campaigns, 'Source:', data_source, filter)
1485871624110:}
1485871627598:createVariantSubtitle(cucc)
1485871650046:attribution_dt <- cucc
1485871652496:num_campaings <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485871669216:createVariantSubtitle <- function(attribution_dt) {
1485871669217:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485871669217:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871669218:if (attribution_metadata$source == 'hds') {
1485871669218:data_source <- 'HDS'
1485871669218:} else {
1485871669219:if (attribution_metadata$method == 'webextend') {
1485871669220:data_source <- 'SI (Webextend-based attribution)'
1485871669221:} else {
1485871669221:data_source <- sprintf('SI (Time-based attribution with %d days)', attribution_metadata$time_window)
1485871669222:if (attribution_metadata$filter == 'none') {
1485871669222:filter <- ''
1485871669223:} else {
1485871669224:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871669224:}
1485871669225:}
1485871669227:}
1485871669228:paste(num_campaigns, 'Source:', data_source, filter)
1485871669228:}
1485871674202:walk(
1485871674203:attribution_variants,
1485871674204:function(dt) {
1485871674205:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871674206:.[, `:=`(
1485871674206:alpha = alpha_prior + num_purchases,
1485871674206:beta = beta_prior + N - num_purchases
1485871674207:)] %>%
1485871674207:.[, `:=`(
1485871674207:rate_lower = qbeta(lower_percentile, alpha, beta),
1485871674208:rate = alpha / (alpha + beta),
1485871674208:rate_higher = qbeta(higher_percentile, alpha, beta)
1485871674208:)] %>%
1485871674209:ggplot(aes(x = class, y = rate, fill = class)) +
1485871674209:geom_bar(stat = 'identity', position = 'dodge') +
1485871674210:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485871674210:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485871674211:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485871674211:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485871674212:labs(x = 'Segment',
1485871674212:y = "Purchase rate",
1485871674212:fill = 'Segment',
1485871674213:title = "Purchase rates in different segments",
1485871674214:subtitle = createVariantSubtitle(dt)
1485871674214:)
1485871674215:ggsave(
1485871674215:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871674216:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871674217:)
1485871674217:}
1485871674218:)
1485871826356:createVariantSubtitle <- function(attribution_dt) {
1485871826357:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485871826357:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871826358:if (attribution_metadata$source == 'hds') {
1485871826358:data_source <- 'HDS.'
1485871826358:} else {
1485871826359:if (attribution_metadata$method == 'webextend') {
1485871826359:data_source <- 'SI. Attribution: Webextend.)'
1485871826360:} else {
1485871826360:data_source <- sprintf('SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1485871826361:if (attribution_metadata$filter == 'none') {
1485871826361:filter <- ''
1485871826362:} else {
1485871826362:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871826363:}
1485871826363:}
1485871826364:}
1485871826364:paste(num_campaigns, 'Source:', data_source, filter)
1485871826365:}
1485871843924:createVariantSubtitle <- function(attribution_dt) {
1485871843924:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485871843925:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871843926:if (attribution_metadata$source == 'hds') {
1485871843926:data_source <- 'Source: HDS.'
1485871843927:} else {
1485871843927:if (attribution_metadata$method == 'webextend') {
1485871843928:data_source <- 'Source: SI. Attribution: Webextend.)'
1485871843929:} else {
1485871843930:data_source <- sprintf('Source: SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1485871843932:if (attribution_metadata$filter == 'none') {
1485871843933:filter <- ''
1485871843935:} else {
1485871843936:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485871843937:}
1485871843938:}
1485871843939:}
1485871843939:paste(num_campaigns, data_source, filter)
1485871843940:}
1485871845760:createVariantFileSuffix <- function(attribution_dt) {
1485871845760:attribution_metadata <- attr(attribution_dt, 'attribution')
1485871845761:if (attribution_metadata$source == 'hds') {
1485871845762:return('hds')
1485871845762:} else {
1485871845763:if (attribution_metadata$method == 'webextend') {
1485871845763:return('si_webextend')
1485871845764:} else {
1485871845766:if (attribution_metadata$filter == 'none') {
1485871845767:return(paste(attribution_metadata[1:3], collapse = '_'))
1485871845768:} else {
1485871845769:return(paste(attribution_metadata, collapse = '_'))
1485871845770:}
1485871845771:}
1485871845772:}
1485871845773:}
1485871847140:walk(
1485871856643:walk(
1485871856644:attribution_variants,
1485871856645:function(dt) {
1485871856645:dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871856646:.[, `:=`(
1485871856646:alpha = alpha_prior + num_purchases,
1485871856647:beta = beta_prior + N - num_purchases
1485871856647:)] %>%
1485871856648:.[, `:=`(
1485871856648:rate_lower = qbeta(lower_percentile, alpha, beta),
1485871856649:rate = alpha / (alpha + beta),
1485871856649:rate_higher = qbeta(higher_percentile, alpha, beta)
1485871856650:)] %>%
1485871856651:ggplot(aes(x = class, y = rate, fill = class)) +
1485871856653:geom_bar(stat = 'identity', position = 'dodge') +
1485871856653:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485871856654:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485871856654:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485871856655:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485871856656:labs(x = 'Segment',
1485871856657:y = "Purchase rate",
1485871856658:fill = 'Segment',
1485871856659:title = "Purchase rates in different segments",
1485871856659:subtitle = createVariantSubtitle(dt)
1485871856659:)
1485871856660:ggsave(
1485871856660:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871856661:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871856662:)
1485871856663:}
1485871856664:)
1485871993200:walk(
1485871993201:attribution_variants,
1485871993202:function(dt) {
1485871993203:dt[, .(.N, sales_amount = sum(sales_amount, na.rm = T), num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485871993203:ggplot(aes(x = class, y = sales_amount, fill = class)) +
1485871993204:geom_bar(stat = 'identity', position = 'dodge') +
1485871993204:geom_label(aes(label = sprintf('%0.0f', sales_amount)), show.legend = F) +
1485871993204:geom_text(aes(y = 0, label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sales_amount/num_purchases)), vjust = 'top') +
1485871993205:scale_y_continuous(expand = c(0.1, 0)) +
1485871993205:labs(x = 'Segment',
1485871993206:y = "",
1485871993206:fill = 'Segment',
1485871993206:title = "Total revenue in different segments",
1485871993207:subtitle = createVariantSubtitle(dt)
1485871993208:)
1485871993209:ggsave(
1485871993209:file = file.path('figures', selected_customer, sprintf('revenue_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485871993210:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485871993210:)
1485871993210:}
1485871993211:)
1485872571671:dir.create('figures')
1485872581320:?dir.create
1485872642945:dir.create(file.path('figures', selected_customer), showWarnings = FALSE, recursive = TRUE)
1485872651433:selected_customer <- 'japancentre'
1485872654497:dir.create(file.path('figures', selected_customer), showWarnings = FALSE, recursive = TRUE)
1485876691903:source('global.R')
1485876700590:cucc <- attribution_variants[[1]]
1485876716603:alpha_prior <- 0.5
1485876716603:beta_prior <- 0.5
1485876716604:lower_percentile <- 0.05
1485876716605:higher_percentile <- 0.95
1485876716605:createVariantSubtitle <- function(attribution_dt) {
1485876716606:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876716606:if (attribution_metadata$source == 'hds') {
1485876716606:c('HDS')
1485876716606:}
1485876716607:}
1485876716607:createVariantSubtitle <- function(attribution_dt) {
1485876716608:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485876716608:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876716608:if (attribution_metadata$source == 'hds') {
1485876716609:data_source <- 'Source: HDS.'
1485876716609:} else {
1485876716609:if (attribution_metadata$method == 'webextend') {
1485876716610:data_source <- 'Source: SI. Attribution: Webextend.)'
1485876716610:} else {
1485876716610:data_source <- sprintf('Source: SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1485876716611:if (attribution_metadata$filter == 'none') {
1485876716611:filter <- ''
1485876716611:} else {
1485876716612:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485876716612:}
1485876716613:}
1485876716614:}
1485876716615:paste(num_campaigns, data_source, filter)
1485876716616:}
1485876716616:createVariantFileSuffix <- function(attribution_dt) {
1485876716617:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876716617:if (attribution_metadata$source == 'hds') {
1485876716618:return('hds')
1485876716618:} else {
1485876716618:if (attribution_metadata$method == 'webextend') {
1485876716618:return('si_webextend')
1485876716619:} else {
1485876716619:if (attribution_metadata$filter == 'none') {
1485876716620:return(paste(attribution_metadata[1:3], collapse = '_'))
1485876716620:} else {
1485876716621:return(paste(attribution_metadata, collapse = '_'))
1485876716621:}
1485876716622:}
1485876716622:}
1485876716623:}
1485876716624:# Purchase rate
1485876716624:plotPurchaseRateForSegments <- function(attribution_dt) {
1485876716624:attribution_dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485876716625:.[, `:=`(
1485876716625:alpha = alpha_prior + num_purchases,
1485876716626:beta = beta_prior + N - num_purchases
1485876716626:)] %>%
1485876716626:.[, `:=`(
1485876716627:rate_lower = qbeta(lower_percentile, alpha, beta),
1485876716627:rate = alpha / (alpha + beta),
1485876716628:rate_higher = qbeta(higher_percentile, alpha, beta)
1485876716628:)] %>%
1485876716628:ggplot(aes(x = class, y = rate, fill = class)) +
1485876716629:geom_bar(stat = 'identity', position = 'dodge') +
1485876716629:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485876716630:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485876716631:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485876716632:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485876716633:labs(x = 'Segment',
1485876716633:y = "Purchase rate",
1485876716634:fill = 'Segment',
1485876716635:title = "Purchase rates in different segments",
1485876716636:subtitle = createVariantSubtitle(attribution_dt)
1485876716636:)
1485876716637:}
1485876719994:plotRevenueForSegments <- function(attribution_dt) {
1485876719994:attribution_dt[, .(.N, sales_amount = sum(sales_amount, na.rm = T), num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485876719995:ggplot(aes(x = class, y = sales_amount, fill = class)) +
1485876719995:geom_bar(stat = 'identity', position = 'dodge') +
1485876719996:geom_label(aes(label = sprintf('%0.0f', sales_amount)), show.legend = F) +
1485876719996:geom_text(aes(y = 0, label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sales_amount/num_purchases)), vjust = 'top') +
1485876719997:scale_y_continuous(expand = c(0.1, 0)) +
1485876719998:labs(x = 'Segment',
1485876719999:y = "",
1485876719999:fill = 'Segment',
1485876720000:title = "Total revenue in different segments",
1485876720000:subtitle = createVariantSubtitle(attribution_dt)
1485876720000:)
1485876720001:}
1485876724175:plotPurchaseRateForSegments(cucc)
1485876731504:plotRevenueForSegments(cucc)
1485876778248:walk(
1485876778251:attribution_variants,
1485876778252:function(dt) {
1485876778252:plotPurchaseRateForSegments(dt)
1485876778252:dir.create(file.path('figures', selected_customer), showWarnings = FALSE, recursive = TRUE)
1485876778253:ggsave(
1485876778253:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485876778253:width = PLOT_WIDTH, height = 0.75*PLOT_HEIGHT
1485876778254:)
1485876778254:}
1485876778254:)
1485876793231:rm(list = ls())
1485876798794:suppressPackageStartupMessages(
1485876798794:source('global.R')
1485876798795:)
1485876798820:args = commandArgs(trailingOnly=TRUE)
1485876798821:if (length(args)==0) {
1485876798822:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1485876798822:} else{
1485876798823:selected_customer <- args[1]
1485876798823:}
1485876798824:message(sprintf("Currently selected customer: %s", selected_customer))
1485876798825:load(sprintf('data/attribution_variants_%s.RData', selected_customer))
1485876833372:# non-informative Jeffreys prior
1485876833372:alpha_prior <- 0.5
1485876833374:beta_prior <- 0.5
1485876833374:lower_percentile <- 0.05
1485876833374:higher_percentile <- 0.95
1485876833375:createVariantSubtitle <- function(attribution_dt) {
1485876833375:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876833376:if (attribution_metadata$source == 'hds') {
1485876833376:c('HDS')
1485876833376:}
1485876833377:}
1485876833378:createVariantSubtitle <- function(attribution_dt) {
1485876833378:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485876833379:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876833380:if (attribution_metadata$source == 'hds') {
1485876833380:data_source <- 'Source: HDS.'
1485876833380:} else {
1485876833381:if (attribution_metadata$method == 'webextend') {
1485876833381:data_source <- 'Source: SI. Attribution: Webextend.)'
1485876833381:} else {
1485876833382:data_source <- sprintf('Source: SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1485876833382:if (attribution_metadata$filter == 'none') {
1485876833383:filter <- ''
1485876833384:} else {
1485876833384:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485876833385:}
1485876833386:}
1485876833387:}
1485876833387:paste(num_campaigns, data_source, filter)
1485876833388:}
1485876833391:createVariantFileSuffix <- function(attribution_dt) {
1485876833391:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876833392:if (attribution_metadata$source == 'hds') {
1485876833392:return('hds')
1485876833392:} else {
1485876833393:if (attribution_metadata$method == 'webextend') {
1485876833393:return('si_webextend')
1485876833394:} else {
1485876833394:if (attribution_metadata$filter == 'none') {
1485876833395:return(paste(attribution_metadata[1:3], collapse = '_'))
1485876833395:} else {
1485876833395:return(paste(attribution_metadata, collapse = '_'))
1485876833396:}
1485876833396:}
1485876833397:}
1485876833397:}
1485876833398:# Purchase rate
1485876833399:plotPurchaseRateForSegments <- function(attribution_dt) {
1485876833399:attribution_dt[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485876833399:.[, `:=`(
1485876833400:alpha = alpha_prior + num_purchases,
1485876833400:beta = beta_prior + N - num_purchases
1485876833401:)] %>%
1485876833402:.[, `:=`(
1485876833403:rate_lower = qbeta(lower_percentile, alpha, beta),
1485876833403:rate = alpha / (alpha + beta),
1485876833404:rate_higher = qbeta(higher_percentile, alpha, beta)
1485876833404:)] %>%
1485876833405:ggplot(aes(x = class, y = rate, fill = class)) +
1485876833405:geom_bar(stat = 'identity', position = 'dodge') +
1485876833406:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485876833406:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485876833407:geom_text(aes(y = 0, label = sprintf('N = %d\nNum.purch. = %d', N, num_purchases)), vjust = 'top') +
1485876833407:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1485876833408:labs(x = 'Segment',
1485876833409:y = "Purchase rate",
1485876833409:fill = 'Segment',
1485876833410:title = "Purchase rates in different segments",
1485876833411:subtitle = createVariantSubtitle(attribution_dt)
1485876833412:)
1485876833413:}
1485876833419:plotRevenueForSegments <- function(attribution_dt) {
1485876833420:attribution_dt[, .(.N, sales_amount = sum(sales_amount, na.rm = T), num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485876833420:ggplot(aes(x = class, y = sales_amount, fill = class)) +
1485876833421:geom_bar(stat = 'identity', position = 'dodge') +
1485876833422:geom_label(aes(label = sprintf('%0.0f', sales_amount)), show.legend = F) +
1485876833422:geom_text(aes(y = 0, label = sprintf('Num.purch. = %d\nunit revenue = %0.1f', num_purchases, sales_amount/num_purchases)), vjust = 'top') +
1485876833423:scale_y_continuous(expand = c(0.1, 0)) +
1485876833423:labs(x = 'Segment',
1485876833424:y = "",
1485876833424:fill = 'Segment',
1485876833425:title = "Total revenue in different segments",
1485876833425:subtitle = createVariantSubtitle(attribution_dt)
1485876833426:)
1485876833426:}
1485876837720:walk(
1485876837720:attribution_variants,
1485876837721:function(dt) {
1485876837721:plotPurchaseRateForSegments(dt)
1485876837722:dir.create(file.path('figures', selected_customer), showWarnings = FALSE, recursive = TRUE)
1485876837722:ggsave(
1485876837723:file = file.path('figures', selected_customer, sprintf('purchase_rate_%s_%s.png', selected_customer, createVariantFileSuffix(dt))),
1485876837723:width = PLOT_WIDTH, height = 0.75*PLOT_HEIGHT
1485876837723:)
1485876837724:}
1485876837725:)
1485876872797:createVariantSubtitle(attribution_variants[[1]])
1485876880669:debug(createVariantSubtitle)
1485876881485:createVariantSubtitle(attribution_variants[[1]])
1485876973857:createVariantSubtitle <- function(attribution_dt) {
1485876973858:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485876973860:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876973861:if (attribution_metadata$source == 'hds') {
1485876973862:data_source <- 'Source: HDS.'
1485876973863:return(paste(num_campaigns, data_source))
1485876973864:} else {
1485876973866:if (attribution_metadata$method == 'webextend') {
1485876973867:data_source <- 'Source: SI. Attribution: Webextend.)'
1485876973869:} else {
1485876973869:data_source <- sprintf('Source: SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1485876973870:if (attribution_metadata$filter == 'none') {
1485876973871:return(paste(num_campaigns, data_source))
1485876973872:} else {
1485876973873:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485876973874:return(paste(num_campaigns, data_source, filter))
1485876973875:}
1485876973876:}
1485876973877:}
1485876973878:}
1485876980819:createVariantSubtitle <- function(attribution_dt) {
1485876980819:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1485876980820:attribution_metadata <- attr(attribution_dt, 'attribution')
1485876980820:if (attribution_metadata$source == 'hds') {
1485876980821:data_source <- 'Source: HDS.'
1485876980821:return(paste(num_campaigns, data_source))
1485876980822:} else {
1485876980822:if (attribution_metadata$method == 'webextend') {
1485876980823:data_source <- 'Source: SI. Attribution: Webextend.)'
1485876980823:} else {
1485876980824:data_source <- sprintf('Source: SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1485876980824:if (attribution_metadata$filter == 'none') {
1485876980825:return(paste(num_campaigns, data_source))
1485876980825:} else {
1485876980826:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1485876980826:return(paste(num_campaigns, data_source, filter))
1485876980827:}
1485876980827:}
1485876980828:}
1485876980828:}
1485876985245:createVariantSubtitle(attribution_variants[[1]])
1485878640361:q()
1485940471336:source('global.R')
1485940478790:source('global.R')
1485940478816:load('data/enriched_recom_history_data_japancentre.RData')
1485940604590:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1485940604591:recom_history, purchases,
1485940604593:source = 'si', method = 'time', time_window = 7, filter = 'none'
1485940604593:)
1485940704350:recom_history_w_attribution %>%
1485940704351:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485940704352:.[, `:=`(
1485940704353:alpha = alpha_prior + num_purchases,
1485940704353:beta = beta_prior + N - num_purchases
1485940704353:)] %>%
1485940704354:.[, `:=`(
1485940704354:rate_lower = qbeta(lower_percentile, alpha, beta),
1485940704354:rate = alpha / (alpha + beta),
1485940704355:rate_higher = qbeta(higher_percentile, alpha, beta)
1485940704355:)] %>%
1485940704356:ggplot(aes(x = class, y = rate, fill = class)) +
1485940704357:geom_bar(stat = 'identity', position = 'dodge') +
1485940704358:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485940704358:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485940704359:scale_y_continuous(labels = scales::percent) +
1485940704359:labs(x = 'Segment',
1485940704360:y = "Purchase rate",
1485940704361:fill = 'Segment',
1485940704363:title = "Purchase rates in different segments"
1485940704364:)
1485940724912:alpha_prior <- 0.5
1485940724912:beta_prior <- 0.5
1485940724914:lower_percentile <- 0.05
1485940724915:higher_percentile <- 0.95
1485940724916:recom_history_w_attribution %>%
1485940724916:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485940724917:.[, `:=`(
1485940724917:alpha = alpha_prior + num_purchases,
1485940724917:beta = beta_prior + N - num_purchases
1485940724918:)] %>%
1485940724918:.[, `:=`(
1485940724919:rate_lower = qbeta(lower_percentile, alpha, beta),
1485940724919:rate = alpha / (alpha + beta),
1485940724920:rate_higher = qbeta(higher_percentile, alpha, beta)
1485940724920:)] %>%
1485940724921:ggplot(aes(x = class, y = rate, fill = class)) +
1485940724921:geom_bar(stat = 'identity', position = 'dodge') +
1485940724921:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485940724922:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485940724922:scale_y_continuous(labels = scales::percent) +
1485940724923:labs(x = 'Segment',
1485940724923:y = "Purchase rate",
1485940724924:fill = 'Segment',
1485940724925:title = "Purchase rates in different segments"
1485940724925:)
1485940826843:alpha_prior <- 0.5
1485940826844:beta_prior <- 0.5
1485940826844:lower_percentile <- 0.05
1485940826845:higher_percentile <- 0.95
1485940826846:recom_history_w_attribution %>%
1485940826846:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485940826846:.[, `:=`(
1485940826847:alpha = alpha_prior + num_purchases,
1485940826847:beta = beta_prior + N - num_purchases
1485940826848:)] %>%
1485940826848:.[, `:=`(
1485940826849:rate_lower = qbeta(lower_percentile, alpha, beta),
1485940826849:rate = alpha / (alpha + beta),
1485940826850:rate_higher = qbeta(higher_percentile, alpha, beta)
1485940826851:)] %>%
1485940826851:ggplot(aes(x = class, y = rate, fill = class)) +
1485940826852:geom_bar(stat = 'identity', position = 'dodge') +
1485940826853:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485940826854:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485940826854:scale_y_continuous(labels = scales::percent) +
1485940826856:labs(x = 'Segment',
1485940826857:y = "Purchase rate",
1485940826858:fill = 'Segment',
1485940826859:title = "Purchase rates in different segments"
1485940826860:)
1485940827249:ggsave(
1485940827249:file = file.path('figures', 'one-off-charts', 'japancentre_purchase_rate.png'),
1485940827250:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485940827250:)
1485941210492:recom_history_w_attribution %>%
1485941210493:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485941210494:.[, `:=`(
1485941210494:alpha = alpha_prior + num_purchases,
1485941210495:beta = beta_prior + N - num_purchases
1485941210495:)] %>%
1485941210495:.[, `:=`(
1485941210496:rate_lower = qbeta(lower_percentile, alpha, beta),
1485941210496:rate = alpha / (alpha + beta),
1485941210496:rate_higher = qbeta(higher_percentile, alpha, beta)
1485941210497:)] %>%
1485941210497:ggplot(aes(x = class, y = rate, fill = class)) +
1485941210498:geom_bar(stat = 'identity', position = 'dodge') +
1485941210499:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485941210500:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1485941210501:scale_y_continuous(labels = scales::percent) +
1485941210501:labs(x = 'Segment',
1485941210501:y = "Purchase rate",
1485941210502:fill = 'Segment',
1485941210502:title = "Purchase rates in different segments"
1485941210503:) +
1485941210503:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1485941235833:recom_history_w_attribution %>%
1485941235834:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485941235835:.[, `:=`(
1485941235836:alpha = alpha_prior + num_purchases,
1485941235836:beta = beta_prior + N - num_purchases
1485941235837:)] %>%
1485941235837:.[, `:=`(
1485941235838:rate_lower = qbeta(lower_percentile, alpha, beta),
1485941235839:rate = alpha / (alpha + beta),
1485941235840:rate_higher = qbeta(higher_percentile, alpha, beta)
1485941235841:)] %>%
1485941235841:ggplot(aes(x = class, y = rate, fill = class)) +
1485941235842:geom_bar(stat = 'identity', position = 'dodge') +
1485941235843:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485941235843:geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1485941235844:scale_y_continuous(labels = scales::percent) +
1485941235845:labs(x = 'Segment',
1485941235846:y = "Purchase rate",
1485941235847:fill = 'Segment',
1485941235847:title = "Purchase rates in different segments"
1485941235848:) +
1485941235849:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1485941247308:recom_history_w_attribution %>%
1485941247309:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485941247310:.[, `:=`(
1485941247310:alpha = alpha_prior + num_purchases,
1485941247310:beta = beta_prior + N - num_purchases
1485941247311:)] %>%
1485941247311:.[, `:=`(
1485941247312:rate_lower = qbeta(lower_percentile, alpha, beta),
1485941247312:rate = alpha / (alpha + beta),
1485941247312:rate_higher = qbeta(higher_percentile, alpha, beta)
1485941247313:)] %>%
1485941247313:ggplot(aes(x = class, y = rate, fill = class)) +
1485941247313:geom_bar(stat = 'identity', position = 'dodge') +
1485941247314:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485941247314:geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1485941247315:scale_y_continuous(labels = scales::percent) +
1485941247315:labs(x = 'Segment',
1485941247316:y = "Purchase rate",
1485941247317:fill = 'Segment',
1485941247318:title = "Purchase rates in different segments"
1485941247319:) +
1485941247319:theme_bw(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1485941261292:alpha_prior <- 0.5
1485941261293:beta_prior <- 0.5
1485941261294:lower_percentile <- 0.05
1485941261294:higher_percentile <- 0.95
1485941261295:recom_history_w_attribution %>%
1485941261295:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485941261296:.[, `:=`(
1485941261296:alpha = alpha_prior + num_purchases,
1485941261297:beta = beta_prior + N - num_purchases
1485941261297:)] %>%
1485941261297:.[, `:=`(
1485941261298:rate_lower = qbeta(lower_percentile, alpha, beta),
1485941261298:rate = alpha / (alpha + beta),
1485941261299:rate_higher = qbeta(higher_percentile, alpha, beta)
1485941261299:)] %>%
1485941261300:ggplot(aes(x = class, y = rate, fill = class)) +
1485941261300:geom_bar(stat = 'identity', position = 'dodge') +
1485941261301:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485941261302:geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1485941261302:scale_y_continuous(labels = scales::percent) +
1485941261303:labs(x = 'Segment',
1485941261304:y = "Purchase rate",
1485941261305:fill = 'Segment',
1485941261308:title = "Purchase rates in different segments"
1485941261309:) +
1485941261310:theme_bw() +
1485941261311:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1485941285913:?scale_fill_manual
1485941409631:recom_history_w_attribution %>%
1485941409631:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1485941409632:.[, `:=`(
1485941409633:alpha = alpha_prior + num_purchases,
1485941409634:beta = beta_prior + N - num_purchases
1485941409635:)] %>%
1485941409635:.[, `:=`(
1485941409636:rate_lower = qbeta(lower_percentile, alpha, beta),
1485941409636:rate = alpha / (alpha + beta),
1485941409637:rate_higher = qbeta(higher_percentile, alpha, beta)
1485941409637:)] %>%
1485941409637:ggplot(aes(x = class, y = rate, fill = class)) +
1485941409638:geom_bar(stat = 'identity', position = 'dodge') +
1485941409638:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1485941409638:geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1485941409639:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1485941409639:scale_y_continuous(labels = scales::percent) +
1485941409640:labs(x = 'Segment',
1485941409640:y = "Purchase rate",
1485941409641:fill = 'Segment',
1485941409642:title = "Purchase rates in different segments"
1485941409643:) +
1485941409643:theme_bw() +
1485941409644:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1485941426130:ggsave(
1485941426131:file = file.path('figures', 'one-off-charts', 'japancentre_purchase_rate.png'),
1485941426132:width = PLOT_WIDTH, height = PLOT_HEIGHT
1485941426132:)
1486117420691:packrat::restore(prompt = FALSE)
1486117461038:options(repos)
1486117464717:getOption(respos)
1486117470582:getOption('repos')
1486117481190:install.packages('emsconnectr', type = 'source')
1486199521425:source('global.R')
1486199538000:sessionInfo()
1486199569944:customer_settings <- yaml.load_file('customer_settings.yml')
1486199584272:customer_settings <- yaml::yaml.load_file('customer_settings.yml')
1486199589307:customer_settings
1486200727352:selected_customer <- 'brand_alley'
1486200729971:id <- getIdFromName(selected_customer)
1486200746143:getIdFromName(selected_customer)
1486200753280:debug(getIdFromName)
1486200754514:debug(getIdFromName)
1486200755663:getIdFromName(selected_customer)
1486200782299:getListOfAllCustomers()
1486200811208:getListOfAllCustomers()
1486200822590:getListOfAllCustomers()
1486200825383:warnings()
1486201042223:getListOfAllCustomers()
1486201068458:id <- getIdFromName(selected_customer)
1486201075371:undebug(getIdFromName)
1486201077034:id <- getIdFromName(selected_customer)
1486201079718:si_name <- getSiNameFromId(id)
1486201097153:readSqlResult
1486201198932:purchases <- readSqlResult(
1486201198933:sql_file = 'sql/purchases_si.sql'
1486201198933:result_file_name = paste(selected_customer, 'purchases_si', sep = '_')
1486201198933:database_name = 'si',
1486201198934:customer_name = si_name,
1486201198934:start_date = ymd(end_date) - months(13),
1486201198935:end_date = end_date
1486201198935:)
1486201217371:purchases <- readSqlResult(
1486201217371:sql_file = 'sql/purchases_si.sql',
1486201217372:result_file_name = paste(selected_customer, 'purchases_si', sep = '_'),
1486201217373:database_name = 'si',
1486201217373:customer_name = si_name,
1486201217374:start_date = ymd(end_date) - months(13),
1486201217374:end_date = end_date
1486201217375:)
1486201228790:install.packages('lubridate')
1486201243438:purchases <- readSqlResult(
1486201243438:sql_file = 'sql/purchases_si.sql',
1486201243439:result_file_name = paste(selected_customer, 'purchases_si', sep = '_'),
1486201243439:database_name = 'si',
1486201243440:customer_name = si_name,
1486201243441:start_date = ymd(end_date) - months(13),
1486201243441:end_date = end_date
1486201243442:)
1486201246412:source('global.R')
1486201249125:end_date <- '2017-02-01'
1486201257454:purchases <- readSqlResult(
1486201257454:sql_file = 'sql/purchases_si.sql',
1486201257455:result_file_name = paste(selected_customer, 'purchases_si', sep = '_'),
1486201257455:database_name = 'si',
1486201257455:customer_name = si_name,
1486201257456:start_date = ymd(end_date) - months(13),
1486201257456:end_date = end_date
1486201257457:)
1486201905557:purchases
1486201913707:purchases[, min(purchase_date)]
1486201916377:purchases[, max(purchase_date)]
1486202167589:getPurchaseData <- function(customer, source = c('hds', 'si'), end_date) {
1486202167590:source <- match.arg(source)
1486202167590:readSqlResult(
1486202167591:sql_file = paste0('sql/purchases_', source, '.sql'),
1486202167591:result_file_name = paste(selected_customer, 'purchases', source, sep = '_'),
1486202167592:database_name = source,
1486202167592:customer_id = getIdFromName(customer),
1486202167593:customer_name = getSiNameFromId(getIdFromName(customer)),
1486202167594:start_date = ymd(end_date) - months(13),
1486202167594:end_date = end_date
1486202167595:)
1486202167596:}
1486202170691:END_DATE <- '2017-02-01'
1486202172832:purchases <- getPurchaseData(selected_customer, 'si', END_DATE)
1486202185434:purchases
1486202218871:purchases[order_id == 'Test0002']
1486202255669:hds_purchases <- getPurchaseData(selected_customer, 'hds', END_DATE)
1486202290850:packrat::restore(prompt = FALSE)
1486206480824:ids
1486206481694:id
1486208910071:monthly_email <- readSqlResult(
1486208910072:sql_file = 'sql/monthly_email.sql',
1486208910072:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486208910073:database_name = 'hds',
1486208910073:wide_query = getQueryPart('2017-01', c('open_rate', 'click_rate')),
1486208910074:customer_id = getIdFromName(customer),
1486208910074:start_date = ymd(end_date) - months(2),
1486208910075:end_date = end_date
1486208910076:)
1486208913659:genQueryPart <- function(target_month, features) {
1486208913660:paste(
1486208913661:lapply(
1486208913661:features,
1486208913661:function(f) {
1486208913662:paste(genQueryForFeature(target_month, f), collapse = ", ")
1486208913662:}
1486208913663:),
1486208913663:collapse = ", "
1486208913664:)
1486208913664:}
1486208915250:genQueryForFeature <- function(target_month, feature) {
1486208915250:year <- as.numeric(strsplit(target_month, split = "-")[[1]][1])
1486208915251:month <- as.numeric(strsplit(target_month, split = "-")[[1]][2])
1486208915252:lapply(
1486208915253:seq(0, 12),
1486208915253:function(i) {
1486208915255:sql_month <- month - i
1486208915256:sql_year <- year
1486208915257:if (sql_month < 1) {
1486208915258:sql_month <- 12 + sql_month
1486208915259:sql_year <- sql_year - 1
1486208915260:}
1486208915262:query_part <- paste0(
1486208915263:"max(CASE WHEN YEAR = ", sql_year, " AND MONTH = ", sql_month,
1486208915264:" THEN ", feature, " ELSE NULL END) ", feature, "_", i
1486208915265:)
1486208915266:}
1486208915266:)
1486208915267:}
1486208923642:monthly_email <- readSqlResult(
1486208924136:sql_file = 'sql/monthly_email.sql',
1486208924334:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486208924511:database_name = 'hds',
1486208924670:wide_query = getQueryPart('2017-01', c('open_rate', 'click_rate')),
1486208924836:customer_id = getIdFromName(customer),
1486208925011:start_date = ymd(end_date) - months(2),
1486208925199:end_date = end_date
1486208925979:)
1486208939400:genQueryPart <- function(target_month, features) {
1486208939401:paste(
1486208939401:lapply(
1486208939402:features,
1486208939402:function(f) {
1486208939403:paste(genQueryForFeature(target_month, f), collapse = ", ")
1486208939403:}
1486208939404:),
1486208939404:collapse = ", "
1486208939405:)
1486208939405:}
1486208949936:monthly_email <- readSqlResult(
1486208949937:sql_file = 'sql/monthly_email.sql',
1486208949937:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486208949938:database_name = 'hds',
1486208949938:wide_query = genQueryPart('2017-01', c('open_rate', 'click_rate')),
1486208949939:customer_id = getIdFromName(customer),
1486208949939:start_date = ymd(end_date) - months(2),
1486208949940:end_date = end_date
1486208949940:)
1486208959842:monthly_email <- readSqlResult(
1486208959843:sql_file = 'sql/monthly_email.sql',
1486208959843:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486208959844:database_name = 'hds',
1486208959844:wide_query = genQueryPart('2017-01', c('open_rate', 'click_rate')),
1486208959845:customer_id = getIdFromName(selected_customer),
1486208959845:start_date = ymd(end_date) - months(2),
1486208959846:end_date = end_date
1486208959847:)
1486209130487:monthly_email
1486209139387:summary(monthly_email)
1486209828270:monthly_email <- readSqlResult(
1486209828271:sql_file = 'sql/monthly_email.sql',
1486209828271:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486209828272:database_name = 'hds',
1486209828272:wide_query = genQueryPart('2017-01', c('open_rate', 'click_rate')),
1486209828273:customer_id = getIdFromName(selected_customer),
1486209828273:start_date = ymd(end_date) - months(2),
1486209828274:end_date = end_date,
1486209828274:refetch = TRUE
1486209828275:)
1486209965045:monthly_email <- readSqlResult(
1486209965046:sql_file = 'sql/monthly_email.sql',
1486209965046:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486209965047:database_name = 'hds',
1486209965048:wide_query = genQueryPart('2017-01', c('open_rate', 'click_rate')),
1486209965048:customer_id = getIdFromName(selected_customer),
1486209965049:start_date = ymd(end_date) - months(2),
1486209965050:end_date = end_date,
1486209965050:refetch = TRUE
1486209965051:)
1486210015567:monthly_email <- readSqlResult(
1486210015568:sql_file = 'sql/monthly_email.sql',
1486210015568:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486210015569:database_name = 'hds',
1486210015570:wide_query = genQueryPart('2017-01', c('open_rate', 'click_rate')),
1486210015570:customer_id = getIdFromName(selected_customer),
1486210015571:start_date = ymd(end_date) - months(2),
1486210015572:end_date = end_date,
1486210015572:refetch = TRUE
1486210015573:)
1486210120486:monthly_email <- readSqlResult(
1486210120487:sql_file = 'sql/monthly_email.sql',
1486210120488:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486210120488:database_name = 'hds',
1486210120488:wide_query = genQueryPart('2017-01', c('n_opens', 'n_sends')),
1486210120489:customer_id = getIdFromName(selected_customer),
1486210120489:start_date = ymd(end_date) - months(2),
1486210120490:end_date = end_date,
1486210120490:refetch = TRUE
1486210120491:)
1486210157729:monthly_email <- readSqlResult(
1486210157730:sql_file = 'sql/monthly_email.sql',
1486210157730:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486210157731:database_name = 'hds',
1486210157731:wide_query = genQueryPart('2017-01', c('n_opens', 'n_sends')),
1486210157732:customer_id = getIdFromName(selected_customer),
1486210157732:start_date = ymd(end_date) - months(2),
1486210157733:end_date = end_date,
1486210157733:refetch = TRUE
1486210157733:)
1486210200863:System.Date()
1486210208421:Sys.Date()
1486210213517:ym(Sys.Date())
1486210449942:# Email
1486210449943:monthly_email <- readSqlResult(
1486210449944:sql_file = 'sql/monthly_email.sql',
1486210449944:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486210449945:database_name = 'hds',
1486210449945:wide_query = genQueryPart('2017-01', c('n_opens', 'n_sends')),
1486210449946:customer_id = getIdFromName(selected_customer),
1486210449946:start_date = ymd(end_date) - months(2),
1486210449947:end_date = end_date,
1486210449948:refetch = TRUE
1486210449949:)
1486210509445:# Email
1486210509446:monthly_email <- readSqlResult(
1486210509447:sql_file = 'sql/monthly_email.sql',
1486210509447:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486210509449:database_name = 'hds',
1486210509449:wide_query = genQueryPart('2017-01', c('n_opens', 'n_sends')),
1486210509450:customer_id = getIdFromName(selected_customer),
1486210509450:start_date = ymd(end_date) - months(2),
1486210509451:end_date = end_date,
1486210509451:refetch = TRUE
1486210509452:)
1486210695687:getEmailData <- function(customer, end_date, refetch = FALSE) {
1486210695688:readSqlResult(
1486210695689:sql_file = 'sql/monthly_email.sql',
1486210695689:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486210695690:database_name = 'hds',
1486210695690:wide_query = genQueryPart(end_date, c('n_sends', 'n_opens', 'n_clicks', 'n_bounces')),
1486210695691:customer_id = getIdFromName(selected_customer),
1486210695692:start_date = ymd(end_date) - months(13),
1486210695692:end_date = end_date,
1486210695693:refetch = TRUE
1486210695693:)
1486210695694:}
1486210699396:monthly_email <- getEmail(selected_customer, END_DATE, TRUE)
1486210704612:monthly_email <- getEmailData(selected_customer, END_DATE, TRUE)
1486396603913:source('global.R')
1486396605896:selected_customer <- 'brand_alley'
1486396605896:END_DATE <- '2017-02-01'
1486396617071:getPurchaseData <- function(customer, source = c('hds', 'si'), end_date, refetch = FALSE) {
1486396617072:source <- match.arg(source)
1486396617072:readSqlResult(
1486396617073:sql_file = paste0('sql/purchases_', source, '.sql'),
1486396617073:result_file_name = paste(selected_customer, 'purchases', source, sep = '_'),
1486396617074:database_name = source,
1486396617074:customer_id = getIdFromName(customer),
1486396617075:customer_name = getSiNameFromId(getIdFromName(customer)),
1486396617075:start_date = ymd(end_date) - months(13),
1486396617076:end_date = end_date
1486396617076:refetch = refetch
1486396617077:)
1486396617078:}
1486396618106:# purchases
1486396618978:si_purchases <- getPurchaseData(selected_customer, 'si', END_DATE)
1486396621371:genQueryPart <- function(target_month, features) {
1486396621373:paste(
1486396621373:lapply(
1486396621374:features,
1486396621374:function(f) {
1486396621375:paste(genQueryForFeature(target_month, f), collapse = ", ")
1486396621375:}
1486396621376:),
1486396621376:collapse = ", "
1486396621377:)
1486396621377:}
1486396622567:genQueryForFeature <- function(target_month, feature) {
1486396622568:year <- as.numeric(strsplit(target_month, split = "-")[[1]][1])
1486396622569:month <- as.numeric(strsplit(target_month, split = "-")[[1]][2])
1486396622570:lapply(
1486396622571:seq(0, 12),
1486396622572:function(i) {
1486396622572:sql_month <- month - i
1486396622573:sql_year <- year
1486396622574:if (sql_month < 1) {
1486396622575:sql_month <- 12 + sql_month
1486396622575:sql_year <- sql_year - 1
1486396622576:}
1486396622577:query_part <- paste0(
1486396622577:"max(CASE WHEN year = ", sql_year, " AND month = ", sql_month,
1486396622578:" THEN ", feature, " ELSE NULL END) ", feature, "_", i
1486396622579:)
1486396622579:}
1486396622580:)
1486396622581:}
1486396623734:getEmailData <- function(customer, end_date, refetch = FALSE) {
1486396623735:readSqlResult(
1486396623736:sql_file = 'sql/monthly_email.sql',
1486396623736:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486396623736:database_name = 'hds',
1486396623737:wide_query = genQueryPart(end_date, c('n_sends', 'n_opens', 'n_clicks', 'n_bounces')),
1486396623737:customer_id = getIdFromName(selected_customer),
1486396623738:start_date = ymd(end_date) - months(13),
1486396623739:end_date = end_date,
1486396623740:refetch = TRUE
1486396623740:)
1486396623741:}
1486396624514:monthly_email <- getEmailData(selected_customer, END_DATE, TRUE)
1486396888562:monthly_email
1486396995128:nrow(monthly_email[!is.na(n_sends_12)])
1486397054610:names(monthly_email)
1486397069153:grep('sends', names(monthly_email))
1486397074959:grep('sends', names(monthly_email), value = TRUE)
1486397080919:grep('^sends', names(monthly_email), value = TRUE)
1486397085996:grep(!'sends', names(monthly_email), value = TRUE)
1486397089416:grep('sends', names(monthly_email), value = TRUE)
1486397092613:?grep
1486397106162:grep('sends', names(monthly_email), value = TRUE, invert = TRUE)
1486397134520:install.packages('emsmetricr', type = 'source')
1486397159631:library(emsmetricr)
1486397173109:?emsmetricr
1486397205405:remove.packages("emsmetricr", lib="~/projects/programmatic-retention/packrat/lib/x86_64-apple-darwin13.4.0/3.3.2")
1486397270950:fillZerosForNA_(
1486397270951:monthly_email,
1486397270952:cols = grep('sends', names(monthly_email), value = TRUE, invert = TRUE)
1486397270952:)
1486397275664:fillZerosForNA_ <- function(dt, cols) {
1486397275665:if (missing(cols)) {
1486397275665:cols <- names(dt)
1486397275666:}
1486397275666:for (j in cols) {
1486397275667:set(dt, which(is.na(dt[[j]])), j, 0)
1486397275667:}
1486397275668:dt
1486397275668:}
1486397276654:fillZerosForNA_(
1486397277055:monthly_email,
1486397277228:cols = grep('sends', names(monthly_email), value = TRUE, invert = TRUE)
1486397277585:)
1486397318286:nrow(monthly_email[!is.na(n_sends_12 & n_opens_0 + n_opens_1 + n_opens_2 + n_opens_3 == 0)])
1486397323832:nrow(monthly_email[!is.na(n_sends_12)])
1486397331935:nrow(monthly_email[!is.na(n_sends_12) & n_opens_0 + n_opens_1 + n_opens_2 + n_opens_3 == 0])
1486397353289:nrow(monthly_email[!is.na(n_sends_12) & !is.na(n_sends_0) n_opens_0 + n_opens_1 + n_opens_2 + n_opens_3 == 0])
1486397384044:nrow(monthly_email[!is.na(n_sends_12) & !is.na(n_sends_0)])
1486397386574:nrow(monthly_email[!is.na(n_sends_12) & !is.na(n_sends_0)])
1486397390793:monthly_email
1486397409322:monthly_email[, table(n_sends_0)]
1486397414121:monthly_email[, table(n_sends_1)]
1486397534677:nrow(monthly_email[!is.na(n_sends_12) & !is.na(n_sends_1)])
1486397536795:nrow(monthly_email[!is.na(n_sends_12) & !is.na(n_sends_1)])
1486397567254:monthly_email[, table(!is.na(n_sends_12, n_sends_0))]
1486397574441:monthly_email[, table(!is.na(n_sends_12), !is.na(n_sends_0))]
1486397581612:monthly_email[, table(!is.na(n_sends_12), !is.na(n_sends_1))]
1486397585521:monthly_email[, table(!is.na(n_sends_12), !is.na(n_sends_2))]
1486397590407:monthly_email[, table(!is.na(n_sends_1), !is.na(n_sends_2))]
1486397658768:monthly_email[, table(!is.na(n_sends_1), !is.na(n_sends_6))]
1486397662084:monthly_email[, table(!is.na(n_sends_1), !is.na(n_sends_7))]
1486397675990:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)])
1486397688238:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_opens_2 + n_opens_3 == 0])
1486397720407:nrow(monthly_email[!is.na(n_sends_4) & !is.na(n_sends_1)])
1486397742774:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0])
1486397783674:monthly_email[, uniqueN(contact_id)]
1486397792371:packrat::snapshot(prompt = FALSE)
1486397815068:si_purchases <- getPurchaseData(selected_customer, 'si', END_DATE)
1486397823022:getPurchaseData <- function(customer, source = c('hds', 'si'), end_date, refetch = FALSE) {
1486397823025:source <- match.arg(source)
1486397823026:readSqlResult(
1486397823026:sql_file = paste0('sql/purchases_', source, '.sql'),
1486397823027:result_file_name = paste(selected_customer, 'purchases', source, sep = '_'),
1486397823029:database_name = source,
1486397823030:customer_id = getIdFromName(customer),
1486397823030:customer_name = getSiNameFromId(getIdFromName(customer)),
1486397823031:start_date = ymd(end_date) - months(13),
1486397823032:end_date = end_date
1486397823033:refetch = refetch
1486397823034:)
1486397823034:}
1486397829983:si_purchases <- getPurchaseData(selected_customer, 'si', END_DATE)
1486397871473:getPurchaseData <- function(customer, source = c('hds', 'si'), end_date, refetch = FALSE) {
1486397871474:source <- match.arg(source)
1486397871475:readSqlResult(
1486397871475:sql_file = paste0('sql/purchases_', source, '.sql'),
1486397871475:result_file_name = paste(selected_customer, 'purchases', source, sep = '_'),
1486397871476:database_name = source,
1486397871476:customer_id = getIdFromName(customer),
1486397871476:customer_name = getSiNameFromId(getIdFromName(customer)),
1486397871477:start_date = ymd(end_date) - months(13),
1486397871477:end_date = end_date,
1486397871478:refetch = refetch
1486397871478:)
1486397871478:}
1486397874129:si_purchases <- getPurchaseData(selected_customer, 'si', END_DATE)
1486397883771:si_purchases[, uniqueN(contact_id)]
1486397889183:monthly_email[, uniqueN(contact_id)]
1486397894846:si_purchases[, uniqueN(contact_id)]/.Last.value
1486397925393:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)])
1486397925720:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0])
1486397946728:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0 & n_opens_7 > 0])
1486397960549:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0 & (n_opens_7 > 0 | n_opens_6 > 0)])
1486397965643:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0 & (n_opens_7 > 0 | n_opens_6 > 0 | n_opens_5 > 0)])
1486397971668:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0 & (n_opens_7 > 0 | n_opens_6 > 0 | n_opens_5 > 0 | n_opens_4 > 0)])
1486398002274:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)])
1486398002587:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0])
1486398042432:nrow(monthly_email[!is.na(n_sends_4) & !is.na(n_sends_1)])
1486398047453:nrow(monthly_email[!is.na(n_sends_4) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0])
1486398067175:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)])
1486398076219:monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)]
1486398105216:summary(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)])
1486398166575:source('global.R')
1486398168679:selected_customer <- 'brand_alley'
1486398168680:END_DATE <- '2017-02-01'
1486398168682:getPurchaseData <- function(customer, source = c('hds', 'si'), end_date, refetch = FALSE) {
1486398168683:source <- match.arg(source)
1486398168684:readSqlResult(
1486398168684:sql_file = paste0('sql/purchases_', source, '.sql'),
1486398168684:result_file_name = paste(selected_customer, 'purchases', source, sep = '_'),
1486398168685:database_name = source,
1486398168686:customer_id = getIdFromName(customer),
1486398168686:customer_name = getSiNameFromId(getIdFromName(customer)),
1486398168686:start_date = ymd(end_date) - months(13),
1486398168687:end_date = end_date,
1486398168688:refetch = refetch
1486398168689:)
1486398168690:}
1486398168692:# purchases
1486398168692:si_purchases <- getPurchaseData(selected_customer, 'si', END_DATE)
1486398169796:hds_purchases <- getPurchaseData(selected_customer, 'hds', END_DATE)
1486398169975:# Email
1486398169976:genQueryPart <- function(target_month, features) {
1486398169977:paste(
1486398169978:lapply(
1486398169978:features,
1486398169978:function(f) {
1486398169978:paste(genQueryForFeature(target_month, f), collapse = ", ")
1486398169979:}
1486398169979:),
1486398169979:collapse = ", "
1486398169979:)
1486398169980:}
1486398169981:genQueryForFeature <- function(target_month, feature) {
1486398169982:year <- as.numeric(strsplit(target_month, split = "-")[[1]][1])
1486398169984:month <- as.numeric(strsplit(target_month, split = "-")[[1]][2])
1486398169985:lapply(
1486398169986:seq(0, 12),
1486398169987:function(i) {
1486398169987:sql_month <- month - i
1486398169988:sql_year <- year
1486398169989:if (sql_month < 1) {
1486398169990:sql_month <- 12 + sql_month
1486398169990:sql_year <- sql_year - 1
1486398169991:}
1486398169993:query_part <- paste0(
1486398169994:"max(CASE WHEN year = ", sql_year, " AND month = ", sql_month,
1486398169994:" THEN ", feature, " ELSE NULL END) ", feature, "_", i
1486398169995:)
1486398169996:}
1486398169997:)
1486398170002:}
1486398170005:getEmailData <- function(customer, end_date, refetch = FALSE) {
1486398170006:readSqlResult(
1486398170007:sql_file = 'sql/monthly_email.sql',
1486398170009:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486398170011:database_name = 'hds',
1486398170013:wide_query = genQueryPart(ymd(end_date) - months(1)˚, c('n_sends', 'n_opens', 'n_clicks', 'n_bounces')),
1486398170020:customer_id = getIdFromName(selected_customer),
1486398170021:start_date = ymd(end_date) - months(13),
1486398170021:end_date = end_date,
1486398170024:refetch = TRUE
1486398170025:)
1486398170026:}
1486398170028:monthly_email <- getEmailData(selected_customer, END_DATE, TRUE)
1486398170029:fillZerosForNA_ <- function(dt, cols) {
1486398170036:if (missing(cols)) {
1486398170037:cols <- names(dt)
1486398170037:}
1486398170039:for (j in cols) {
1486398170039:set(dt, which(is.na(dt[[j]])), j, 0)
1486398170040:}
1486398170040:dt
1486398170041:}
1486398170042:fillZerosForNA_(
1486398170042:monthly_email,
1486398170042:cols = grep('sends', names(monthly_email), value = TRUE, invert = TRUE)
1486398170042:)
1486398170043:# First try of inactives
1486398170043:# with us half year before and now as well
1486398170044:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1)])
1486398170044:nrow(monthly_email[!is.na(n_sends_7) & !is.na(n_sends_1) & n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0])
1486398181453:getEmailData <- function(customer, end_date, refetch = FALSE) {
1486398181453:readSqlResult(
1486398181454:sql_file = 'sql/monthly_email.sql',
1486398181455:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486398181455:database_name = 'hds',
1486398181456:wide_query = genQueryPart(ymd(end_date) - months(1)˚, c('n_sends', 'n_opens', 'n_clicks', 'n_bounces')),
1486398181457:customer_id = getIdFromName(selected_customer),
1486398181458:start_date = ymd(end_date) - months(13),
1486398181458:end_date = end_date,
1486398181459:refetch = TRUE
1486398181460:)
1486398181460:}
1486398193715:getEmailData <- function(customer, end_date, refetch = FALSE) {
1486398193716:readSqlResult(
1486398193717:sql_file = 'sql/monthly_email.sql',
1486398193717:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486398193718:database_name = 'hds',
1486398193718:wide_query = genQueryPart(ymd(end_date) - months(1), c('n_sends', 'n_opens', 'n_clicks', 'n_bounces')),
1486398193719:customer_id = getIdFromName(selected_customer),
1486398193719:start_date = ymd(end_date) - months(13),
1486398193720:end_date = end_date,
1486398193720:refetch = TRUE
1486398193721:)
1486398193721:}
1486398197918:monthly_email <- getEmailData(selected_customer, END_DATE, TRUE)
1486398209685:monthly_email <- getEmailData(selected_customer, END_DATE, TRUE)
1486398218534:x
1486398224059:strsplit(x)
1486398228001:strsplit(x, split = '-')
1486398236719:class(x)
1486398242734:month(x)
1486398246095:year(x)
1486398254048:class(year(x))
1486398256522:Q()
1486398298368:genQueryForFeature <- function(target_date, feature) {
1486398298369:lapply(
1486398298369:seq(0, 12),
1486398298370:function(i) {
1486398298370:sql_month <- month(target_date) - i
1486398298371:sql_year <- year(target_date)
1486398298371:if (sql_month < 1) {
1486398298372:sql_month <- 12 + sql_month
1486398298372:sql_year <- sql_year - 1
1486398298373:}
1486398298373:query_part <- paste0(
1486398298373:"max(CASE WHEN year = ", sql_year, " AND month = ", sql_month,
1486398298374:" THEN ", feature, " ELSE NULL END) ", feature, "_", i
1486398298374:)
1486398298374:}
1486398298375:)
1486398298375:}
1486398301499:genQueryPart <- function(target_month, features) {
1486398301500:paste(
1486398301500:lapply(
1486398301501:features,
1486398301501:function(f) {
1486398301502:paste(genQueryForFeature(target_month, f), collapse = ", ")
1486398301502:}
1486398301503:),
1486398301503:collapse = ", "
1486398301505:)
1486398301506:}
1486398304866:getEmailData <- function(customer, end_date, refetch = FALSE) {
1486398304867:readSqlResult(
1486398304868:sql_file = 'sql/monthly_email.sql',
1486398304868:result_file_name = paste(selected_customer, 'monthly_email', sep = '_'),
1486398304869:database_name = 'hds',
1486398304869:wide_query = genQueryPart(ymd(end_date) - months(1), c('n_sends', 'n_opens', 'n_clicks', 'n_bounces')),
1486398304870:customer_id = getIdFromName(selected_customer),
1486398304870:start_date = ymd(end_date) - months(13),
1486398304871:end_date = end_date,
1486398304872:refetch = TRUE
1486398304872:)
1486398304873:}
1486398306490:monthly_email <- getEmailData(selected_customer, END_DATE, TRUE)
1486398549425:monthly_email
1486398595101:nrow(monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0)])
1486398623286:nrow(monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0)])
1486398624848:nrow(monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0) & (n_opens_0 + n_clicks_0 + n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0)])
1486398626826:nrow(monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0) & (n_opens_0 + n_clicks_0 + n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0)])
1486398653805:monthly_email[!is.na(n_sends_0) & !is.na(n_sends_6)]
1486398719934:fillZerosForNA_(
1486398719939:monthly_email,
1486398719939:cols = grep('sends', names(monthly_email), value = TRUE, invert = TRUE)
1486398719940:)
1486398728018:monthly_email[!is.na(n_sends_0) & !is.na(n_sends_6)]
1486398732187:nrow(monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0) & (n_opens_0 + n_clicks_0 + n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0)])
1486398734615:nrow(monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0)])
1486398780194:filtered_dt <- monthly_email[!is.na(n_sends_6) & !is.na(n_sends_0) & (n_opens_0 + n_clicks_0 + n_opens_1 + n_clicks_1 + n_opens_2 + n_clicks_2 == 0)]
1486398783451:nrow(filtered_dt)
1486398818110:filtered_dt[, .(contact_id, segment = sample(c('treat', 'control'), prob = 0.5))]
1486398827976:sample(c('treat', 'control'))
1486398829002:sample(c('treat', 'control'))
1486398831403:sample(c('treat', 'control'), 1)
1486398832481:sample(c('treat', 'control'), 1)
1486398833270:sample(c('treat', 'control'), 1)
1486398833945:sample(c('treat', 'control'), 1)
1486398834730:sample(c('treat', 'control'), 1)
1486398836609:sample(c('treat', 'control'), 1)
1486398838699:?sample
1486398853926:sample(c('treat', 'control'), 10, replace = T)
1486398867095:filtered_dt[, .(contact_id, segment = sample(c('treat', 'control'), size = .N, replace = F))]
1486398873246:filtered_dt[, .(contact_id, segment = sample(c('treat', 'control'), size = .N, replace = T))]
1486398905260:filtered_dt[, .(contact_id, segment = sample(c('treat', 'control'), size = .N, replace = T))] %>%
1486398905550:fwrite('data/brand_alley_pilot.csv')
1486398925665:filtered_dt[, .(contact_id, segment = sample(c('treat', 'control'), size = .N, replace = T))] %>%
1486398925874:fwrite('data/brand_alley_pilot.csv')
1486398928955:source('global.R')
1486398946653:source('global.R')
1486398980875:source('global.R')
1486398996771:filtered_dt[, .(contact_id, segment = sample(c('treat', 'control'), size = .N, replace = T))] %>%
1486398997185:fwrite('data/brand_alley_pilot.csv')
1486399537816:q()
1486399793793:packrat::restore(prompt = FALSE)
1486972990642:suppressPackageStartupMessages(
1486972990645:source('global.R')
1486972990646:args = commandArgs(trailingOnly=TRUE)
1486972990647:)
1486972999151:suppressPackageStartupMessages(
1486972999152:source('global.R')
1486972999153:)
1486973016714:selected_customer <- 'globalshopdirect'
1486973019425:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1486973024605:if (!is.null(customer_settings[[selected_customer]]$first_incentive_campaign_date))
1486973024605:{
1486973024606:recom_history <- recom_history[campaign_start_date >= ymd(customer_settings[[selected_customer]]$first_incentive_campaign_date)]
1486973024607:}
1486973024608:if (!is.null(customer_settings[[selected_customer]]$campaigns_to_exclude))
1486973024608:{
1486973024609:recom_history <- recom_history[!campaign_id %in% customer_settings[[selected_customer]]$campaigns_to_exclude]
1486973024610:}
1486973028001:incentive_ids <- fread('data/incentive_ids.csv') %>%
1486973028002:.[customerId == getIdFromName(selected_customer)]
1486973028027:recom_history <- merge(
1486973028028:recom_history,
1486973028028:incentive_ids[, .(incentive_id, class, numericValue, incentive_type)],
1486973028029:by = 'incentive_id',
1486973028030:all.x = T) %>%
1486973028030:.[is.na(class), class := 'control']
1486973034581:recom_history[, table(class)]
1486973138649:recom_history <- getRecomHistory(selected_customer, refetch = TRUE)
1486999056691:suppressPackageStartupMessages(
1486999057029:source('global.R')
1486999057323:)
1486999060524:message(sprintf("Currently selected customer: %s", selected_customer))
1486999062762:recom_history <- getRecomHistory(selected_customer, refetch = FALSE)
1486999134051:load(sprintf('data/attribution_variants_%s.RData', selected_customer))
1486999360277:alpha_prior <- 0.5
1486999360278:beta_prior <- 0.5
1486999360279:lower_percentile <- 0.05
1486999360280:higher_percentile <- 0.95
1486999376106:attribution_variants[[1]]
1486999386661:attribution_variants[[1]] %>% attr('attribution')
1486999390955:attribution_variants[[1]]
1486999407530:gsd <- attribution_variants[[1]]
1486999418349:gsd[, table(campaign_id, class)]
1486999450518:gsd[, .(campaign_id, email_sent_date)] %>% unique()
1486999463623:gsd[, .(campaign_id, campaign_start_date)] %>% unique()
1486999534157:createVariantSubtitle <- function(attribution_dt) {
1486999534158:attribution_metadata <- attr(attribution_dt, 'attribution')
1486999534158:if (attribution_metadata$source == 'hds') {
1486999534159:c('HDS')
1486999534159:}
1486999534160:}
1486999534160:createVariantSubtitle <- function(attribution_dt) {
1486999534161:num_campaigns <- sprintf('Aggregated over %d campaign(s).', length(attribution_dt[, unique(campaign_id)]))
1486999534161:attribution_metadata <- attr(attribution_dt, 'attribution')
1486999534162:if (attribution_metadata$source == 'hds') {
1486999534162:data_source <- 'Source: HDS.'
1486999534163:return(paste(num_campaigns, data_source))
1486999534164:} else {
1486999534165:if (attribution_metadata$method == 'webextend') {
1486999534165:data_source <- 'Source: SI. Attribution: Webextend.'
1486999534166:} else {
1486999534166:data_source <- sprintf('Source: SI. Attribution: time-based with %d days window.', attribution_metadata$time_window)
1486999534167:if (attribution_metadata$filter == 'none') {
1486999534167:return(paste(num_campaigns, data_source))
1486999534168:} else {
1486999534168:filter <- sprintf('Only %s emails.', attribution_metadata$filter)
1486999534169:return(paste(num_campaigns, data_source, filter))
1486999534170:}
1486999534171:}
1486999534172:}
1486999534173:}
1486999537827:createVariantFileSuffix <- function(attribution_dt) {
1486999537828:attribution_metadata <- attr(attribution_dt, 'attribution')
1486999537828:if (attribution_metadata$source == 'hds') {
1486999537829:return('hds')
1486999537829:} else {
1486999537829:if (attribution_metadata$method == 'webextend') {
1486999537830:return('si_webextend')
1486999537830:} else {
1486999537830:if (attribution_metadata$filter == 'none') {
1486999537831:return(paste(attribution_metadata[1:3], collapse = '_'))
1486999537831:} else {
1486999537832:return(paste(attribution_metadata, collapse = '_'))
1486999537833:}
1486999537833:}
1486999537834:}
1486999537834:}
1486999927754:gsd
1486999986313:source('global.R')
1486999986342:load('data/enriched_recom_history_data_globalshopdirect.RData')
1487000006944:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1487000006944:recom_history, purchases,
1487000006945:source = 'hds'
1487000006945:)
1487000023362:alpha_prior <- 0.5
1487000023363:beta_prior <- 0.5
1487000023363:lower_percentile <- 0.05
1487000023364:higher_percentile <- 0.95
1487000023364:recom_history_w_attribution %>%
1487000023365:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = class] %>%
1487000023365:.[, `:=`(
1487000023365:alpha = alpha_prior + num_purchases,
1487000023366:beta = beta_prior + N - num_purchases
1487000023366:)] %>%
1487000023366:.[, `:=`(
1487000023366:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000023367:rate = alpha / (alpha + beta),
1487000023367:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000023369:)] %>%
1487000023370:ggplot(aes(x = class, y = rate, fill = class)) +
1487000023371:geom_bar(stat = 'identity', position = 'dodge') +
1487000023371:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487000023372:geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000023373:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000023373:scale_y_continuous(labels = scales::percent) +
1487000023374:labs(x = 'Segment',
1487000023375:y = "Purchase rate",
1487000023376:fill = 'Segment',
1487000023376:title = "Purchase rates in different segments"
1487000023377:) +
1487000023377:theme_bw() +
1487000023378:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000024365:ggsave(
1487000024365:file = file.path('figures', 'one-off-charts', 'globalshopdirect_purchase_rate.png'),
1487000024366:width = PLOT_WIDTH, height = PLOT_HEIGHT
1487000024366:)
1487000175984:recom_history_w_attribution %>%
1487000175985:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000175986:.[, `:=`(
1487000175986:alpha = alpha_prior + num_purchases,
1487000175987:beta = beta_prior + N - num_purchases
1487000175987:)] %>%
1487000175987:.[, `:=`(
1487000175988:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000175988:rate = alpha / (alpha + beta),
1487000175988:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000175989:)] %>%
1487000175989:ggplot(aes(x = campaign_start_date, y = rate, fill = class)) +
1487000175990:geom_line() +
1487000175990:# geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487000175990:# geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000175991:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000175991:scale_y_continuous(labels = scales::percent) +
1487000175991:labs(x = 'Campaign start date',
1487000175992:y = "Purchase rate",
1487000175993:title = "Purchase rates in different segments"
1487000175994:) +
1487000175994:theme_bw() +
1487000175995:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000203623:recom_history_w_attribution %>%
1487000203623:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000203624:.[, `:=`(
1487000203625:alpha = alpha_prior + num_purchases,
1487000203625:beta = beta_prior + N - num_purchases
1487000203626:)] %>%
1487000203626:.[, `:=`(
1487000203626:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000203627:rate = alpha / (alpha + beta),
1487000203628:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000203628:)] %>%
1487000203629:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000203629:geom_line() +
1487000203629:# geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487000203630:# geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000203630:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000203631:scale_y_continuous(labels = scales::percent) +
1487000203631:labs(x = 'Campaign start date',
1487000203631:y = "Purchase rate",
1487000203632:title = "Purchase rates in different segments"
1487000203633:) +
1487000203633:theme_bw() +
1487000203634:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000258393:?reom_ribbon
1487000261817:?geom_ribbon
1487000281758:recom_history_w_attribution %>%
1487000281759:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000281760:.[, `:=`(
1487000281760:alpha = alpha_prior + num_purchases,
1487000281761:beta = beta_prior + N - num_purchases
1487000281761:)] %>%
1487000281761:.[, `:=`(
1487000281762:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000281762:rate = alpha / (alpha + beta),
1487000281762:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000281763:)] %>%
1487000281763:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000281764:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class), alpha = 0.2) +
1487000281764:geom_line(size = 2) +
1487000281765:# geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000281766:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000281767:scale_y_continuous(labels = scales::percent) +
1487000281767:labs(x = 'Campaign start date',
1487000281767:y = "Purchase rate",
1487000281768:title = "Purchase rates in different segments"
1487000281768:) +
1487000281769:theme_bw() +
1487000281769:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000313246:recom_history_w_attribution %>%
1487000313247:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000313247:.[, `:=`(
1487000313248:alpha = alpha_prior + num_purchases,
1487000313248:beta = beta_prior + N - num_purchases
1487000313249:)] %>%
1487000313249:.[, `:=`(
1487000313250:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000313250:rate = alpha / (alpha + beta),
1487000313251:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000313252:)] %>%
1487000313252:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000313253:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class), color = NULL, alpha = 0.2) +
1487000313254:geom_line(size = 2) +
1487000313255:# geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000313256:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000313257:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000313258:scale_y_continuous(labels = scales::percent) +
1487000313259:labs(x = 'Campaign start date',
1487000313259:y = "Purchase rate",
1487000313260:title = "Purchase rates in different segments"
1487000313261:) +
1487000313261:theme_bw() +
1487000313261:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000334614:recom_history_w_attribution %>%
1487000334615:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000334616:.[, `:=`(
1487000334617:alpha = alpha_prior + num_purchases,
1487000334618:beta = beta_prior + N - num_purchases
1487000334618:)] %>%
1487000334619:.[, `:=`(
1487000334619:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000334619:rate = alpha / (alpha + beta),
1487000334620:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000334620:)] %>%
1487000334620:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000334621:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487000334621:geom_line(size = 2) +
1487000334622:# geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000334623:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000334623:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000334624:scale_y_continuous(labels = scales::percent) +
1487000334624:labs(x = 'Campaign start date',
1487000334625:y = "Purchase rate",
1487000334625:title = "Purchase rates in different segments"
1487000334626:) +
1487000334626:theme_bw() +
1487000334627:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000593956:recom_history_w_attribution %>%
1487000593957:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000593958:.[, `:=`(
1487000593958:alpha = alpha_prior + num_purchases,
1487000593959:beta = beta_prior + N - num_purchases
1487000593959:)] %>%
1487000593959:.[, `:=`(
1487000593960:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000593960:rate = alpha / (alpha + beta),
1487000593961:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000593961:)] %>%
1487000593962:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000593962:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487000593963:geom_line(size = 2) +
1487000593963:# geom_label(aes(label = sprintf('%0.3f%%', 100*rate), family = 'Canaro Medium'), show.legend = F) +
1487000593964:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000593964:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000593965:scale_y_continuous(labels = scales::percent) +
1487000593966:labs(x = 'Campaign start date',
1487000593967:y = "Purchase rate",
1487000593968:title = "Purchase rates in different segments, by date"
1487000593969:) +
1487000593969:theme_bw() +
1487000593970:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487000594454:ggsave(
1487000594454:file = file.path('figures', 'one-off-charts', 'globalshopdirect_purchase_rate_by_date.png'),
1487000594455:width = PLOT_WIDTH, height = PLOT_HEIGHT
1487000594455:)
1487000711825:recom_history_w_attribution %>%
1487000711826:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000711827:.[, `:=`(
1487000711827:alpha = alpha_prior + num_purchases,
1487000711827:beta = beta_prior + N - num_purchases
1487000711828:)] %>%
1487000711828:.[, `:=`(
1487000711828:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000711829:rate = alpha / (alpha + beta),
1487000711829:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000711829:)] %>%
1487000711830:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000711830:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487000711831:geom_line(size = 2) +
1487000711831:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000711833:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000711834:scale_y_continuous(labels = scales::percent) +
1487000711835:labs(x = 'Campaign start date',
1487000711836:y = "Purchase rate",
1487000711837:title = "Purchase rates in different segments, by date"
1487000711837:) +
1487000711838:theme_bw() +
1487000711838:theme(legend.position = c('2017-02-02', 0.05), text = element_text(family = 'Canaro Medium'))
1487000731881:recom_history_w_attribution %>%
1487000731882:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000731883:.[, `:=`(
1487000731884:alpha = alpha_prior + num_purchases,
1487000731884:beta = beta_prior + N - num_purchases
1487000731885:)] %>%
1487000731886:.[, `:=`(
1487000731886:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000731887:rate = alpha / (alpha + beta),
1487000731888:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000731889:)] %>%
1487000731890:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000731891:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487000731892:geom_line(size = 2) +
1487000731893:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000731894:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000731895:scale_y_continuous(labels = scales::percent) +
1487000731895:labs(x = 'Campaign start date',
1487000731896:y = "Purchase rate",
1487000731896:title = "Purchase rates in different segments, by date"
1487000731897:) +
1487000731897:theme_bw() +
1487000731898:theme(legend.position = c(as.numeric(ymd('2017-02-02')), 0.05), text = element_text(family = 'Canaro Medium'))
1487000761123:recom_history_w_attribution %>%
1487000761123:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487000761124:.[, `:=`(
1487000761125:alpha = alpha_prior + num_purchases,
1487000761125:beta = beta_prior + N - num_purchases
1487000761126:)] %>%
1487000761126:.[, `:=`(
1487000761126:rate_lower = qbeta(lower_percentile, alpha, beta),
1487000761127:rate = alpha / (alpha + beta),
1487000761127:rate_higher = qbeta(higher_percentile, alpha, beta)
1487000761127:)] %>%
1487000761128:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487000761128:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487000761128:geom_line(size = 2) +
1487000761129:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000761129:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487000761130:scale_y_continuous(labels = scales::percent) +
1487000761130:labs(x = 'Campaign start date',
1487000761130:y = "Purchase rate",
1487000761131:title = "Purchase rates in different segments, by date"
1487000761131:) +
1487000761132:theme_bw() +
1487000761132:theme(legend.position = 'top', text = element_text(family = 'Canaro Medium'))
1487001374937:recom_history_w_attribution %>%
1487001374938:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487001374939:.[, `:=`(
1487001374939:alpha = alpha_prior + num_purchases,
1487001374939:beta = beta_prior + N - num_purchases
1487001374940:)] %>%
1487001374940:.[, `:=`(
1487001374940:rate_lower = qbeta(lower_percentile, alpha, beta),
1487001374941:rate = alpha / (alpha + beta),
1487001374941:rate_higher = qbeta(higher_percentile, alpha, beta)
1487001374942:)] %>%
1487001374943:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487001374943:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487001374944:geom_line(size = 2) +
1487001374945:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487001374946:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487001374946:scale_y_continuous(labels = scales::percent) +
1487001374947:labs(x = 'Campaign start date',
1487001374947:y = "Purchase rate",
1487001374947:title = "Purchase rates in different segments, by date"
1487001374948:) +
1487001374949:theme_bw() +
1487001374949:theme(legend.position = c(as.numeric(ymd('2017-01-30')), 0.05), text = element_text(family = 'Canaro Medium'))
1487001393383:recom_history_w_attribution %>%
1487001393385:.[, .(.N, num_purchases = sum(num_purchases, na.rm = T)), by = .(campaign_start_date, class)] %>%
1487001393386:.[, `:=`(
1487001393386:alpha = alpha_prior + num_purchases,
1487001393387:beta = beta_prior + N - num_purchases
1487001393388:)] %>%
1487001393388:.[, `:=`(
1487001393388:rate_lower = qbeta(lower_percentile, alpha, beta),
1487001393389:rate = alpha / (alpha + beta),
1487001393389:rate_higher = qbeta(higher_percentile, alpha, beta)
1487001393390:)] %>%
1487001393391:ggplot(aes(x = campaign_start_date, y = rate, color = class)) +
1487001393391:geom_ribbon(aes(ymin = rate_lower, ymax = rate_higher, fill = class, color = NULL), alpha = 0.2) +
1487001393392:geom_line(size = 2) +
1487001393392:scale_color_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487001393393:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487001393393:scale_y_continuous(labels = scales::percent) +
1487001393394:labs(x = 'Campaign start date',
1487001393396:y = "Purchase rate",
1487001393397:title = "Purchase rates in different segments, by date"
1487001393398:) +
1487001393399:theme_bw() +
1487001393399:theme(text = element_text(family = 'Canaro Medium'))
1487001425986:ggsave(
1487001425986:file = file.path('figures', 'one-off-charts', 'globalshopdirect_purchase_rate_by_date.png'),
1487001425987:width = PLOT_WIDTH, height = PLOT_HEIGHT
1487001425987:)
1487001468953:effect_data <- gsd %>%
1487001468953:.[,
1487001468954:.(buying_prob,
1487001468955:numericValue = ifelse(is.na(numericValue), 0, as.numeric(numericValue)),
1487001468955:got_incentive = !(is.na(numericValue) | numericValue == 0),
1487001468955:num_purchases = ifelse(is.na(num_purchases), 0, num_purchases),
1487001468956:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount),
1487001468956:has_purchased = factor(!is.na(num_purchases)),
1487001468957:campaign_start_date
1487001468957:)] %>%
1487001468958:.[,
1487001468958:prob_group := factor(
1487001468958:Hmisc::cut2(buying_prob,
1487001468959:g = NUM_BP_BINS,
1487001468960:oneval = F,
1487001468960:minmax = T),
1487001468961:labels = paste('Prob. group',1:NUM_BP_BINS)),
1487001468961:by = campaign_start_date] %>%
1487001468961:# ] %>%
1487001468962:.[is.na(prob_group), prob_group := 'No buying_prob'] %>%
1487001468962:.[, prob_group := factor(prob_group)] %>%
1487001468963:.[, prob_group := relevel(prob_group, 'No buying_prob')]
1487001475593:NUM_BP_BINS <- 4
1487001475594:effect_data <- gsd %>%
1487001475594:.[,
1487001475594:.(buying_prob,
1487001475595:numericValue = ifelse(is.na(numericValue), 0, as.numeric(numericValue)),
1487001475595:got_incentive = !(is.na(numericValue) | numericValue == 0),
1487001475595:num_purchases = ifelse(is.na(num_purchases), 0, num_purchases),
1487001475596:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount),
1487001475596:has_purchased = factor(!is.na(num_purchases)),
1487001475596:campaign_start_date
1487001475597:)] %>%
1487001475597:.[,
1487001475597:prob_group := factor(
1487001475598:Hmisc::cut2(buying_prob,
1487001475598:g = NUM_BP_BINS,
1487001475599:oneval = F,
1487001475600:minmax = T),
1487001475600:labels = paste('Prob. group',1:NUM_BP_BINS)),
1487001475601:by = campaign_start_date] %>%
1487001475601:# ] %>%
1487001475602:.[is.na(prob_group), prob_group := 'No buying_prob'] %>%
1487001475602:.[, prob_group := factor(prob_group)] %>%
1487001475602:.[, prob_group := relevel(prob_group, 'No buying_prob')]
1487001483654:effect_data %>%
1487001483655:.[, .(.N, num_purchases = sum(num_purchases)), by = .(prob_group, got_incentive, campaign_start_date)] %>%
1487001483656:.[order(campaign_start_date, prob_group, got_incentive)]
1487001489264:effect_data %>%
1487001489266:copy() %>%
1487001489266:.[, got_incentive := factor(got_incentive, levels = c(T,F))] %>%
1487001489267:# .[, got_incentive := factor(numericValue)] %>%
1487001489267:ggplot() +
1487001489268:geom_histogram(aes(x = buying_prob, fill = got_incentive), alpha = 0.7, bins = 50, position = 'identity') +
1487001489268:scale_x_log10() +
1487001489269:facet_grid(campaign_start_date~., scales = 'free_y') +
1487001489269:ggtitle(sprintf('Distribution of the buying probabilites in different campaigns (%s)', Hmisc::capitalize(selected_customer)))
1487001805285:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487001805319:selected_customer <- 'globalshopdirect'
1487001805328:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487001805329:recom_history, purchases,
1487001805331:source = 'hds'
1487001805334:# method = 'time',
1487001805335:# time_window = 2
1487001805336:) %>%
1487001805338:.[]
1487001812437:lambdas <- seq(0,1.2, by = 0.05)
1487001812443:distribution_param_grid <- CJ(n_bins = 3:8,
1487001812445:prior = c('Jeffreys', 'Uniform', 'Skewed')) %>%
1487001812446:.[prior == 'Jeffreys', `:=`(prior_alpha = 0.5, prior_beta = 0.5)] %>%
1487001812448:.[prior == 'Uniform', `:=`(prior_alpha = 1, prior_beta = 1)] %>%
1487001812450:.[prior == 'Skewed', `:=`(prior_alpha = 0.1, prior_beta = 10)] %>%
1487001812451:.[,
1487001812453:distributeIncentives(recom_history = recom_history_w_attributions,
1487001812455:n_bins = n_bins,
1487001812456:prior_alpha = prior_alpha,
1487001812458:prior_beta = prior_beta,
1487001812459:lambda = lambdas,
1487001812461:keepOnlyLastCampaign = F),
1487001812463:by = .(n_bins, prior)
1487001812467:]
1487080418906:source('scripts/load_data_for_incentive_analysis.R')
1487080440380:source('scripts/load_enriched_recom_history.R')
1487080457461:source('global.R')
1487080565629:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487080567387:source('global.R')
1487080567455:selected_customer <- 'evolution_slimming'
1487080581525:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487080886443:recom_history[, .N, by = campaign_id]
1487081049535:tmp_dt <- recom_history %>%
1487081049536:# .[registered_on < first_campaign] %>%
1487081049537:.[,
1487081049538:.(.N,
1487081049540:num_open = sum(did_open, na.rm = T),
1487081049541:num_click = sum(did_click, na.rm = T),
1487081049542:open_rate = 100*sum(did_open, na.rm = T) / .N,
1487081049544:click_rate = 100*sum(did_click, na.rm = T) / .N,
1487081049546:ctr = 100*sum(did_click, na.rm = T) / sum(did_open, na.rm = T),
1487081049547:open_sd = 100*sd(!is.na(did_open), na.rm = T) / sqrt(.N),
1487081049549:click_sd = 100*sd(!is.na(did_click), na.rm = T) / sqrt(.N),
1487081049550:ctr_sd = 100*sd(!is.na(did_click[!is.na(did_open)])) / sqrt(sum(!is.na(did_open)))),
1487081049552:by = .(class, has_buying_prob)
1487081049553:] %>%
1487081049554:.[, facet := ifelse(has_buying_prob, "Has buying prob.", "No buying prob.")] %>%
1487081049556:.[order(has_buying_prob, class)]
1487081049868:tmp_dt %>%
1487081049869:ggplot(aes(x = class, y = open_rate, fill = class)) +
1487081049870:geom_bar(stat = 'identity') +
1487081049872:geom_linerange(aes(ymin = open_rate - open_sd, ymax = open_rate + open_sd)) +
1487081049873:facet_grid(facet ~ ., scales = 'free_y') +
1487081049874:labs(x = 'Segment',
1487081049875:y = "%",
1487081049878:fill = 'Segment',
1487081049879:title = sprintf("Aggregated open rates (%s)\n(N is summed up over %d campaigns)",
1487081049881:Hmisc::capitalize(selected_customer), num_campaigns))
1487081197408:tmp_dt <- recom_history %>%
1487081197409:# .[registered_on < first_campaign] %>%
1487081197410:.[,
1487081197412:.(.N,
1487081197413:num_open = sum(did_open, na.rm = T),
1487081197414:num_click = sum(did_click, na.rm = T),
1487081197416:open_rate = 100*sum(did_open, na.rm = T) / .N,
1487081197417:click_rate = 100*sum(did_click, na.rm = T) / .N,
1487081197419:ctr = 100*sum(did_click, na.rm = T) / sum(did_open, na.rm = T),
1487081197420:open_sd = 100*sd(!is.na(did_open), na.rm = T) / sqrt(.N),
1487081197421:click_sd = 100*sd(!is.na(did_click), na.rm = T) / sqrt(.N),
1487081197423:ctr_sd = 100*sd(!is.na(did_click[!is.na(did_open)])) / sqrt(sum(!is.na(did_open)))),
1487081197424:by = .(class, has_buying_prob)
1487081197425:] %>%
1487081197427:.[, facet := ifelse(has_buying_prob, "Has buying prob.", "No buying prob.")] %>%
1487081197428:.[order(has_buying_prob, class)]
1487081201968:tmp_dt
1487081911632:recom_history %>%
1487081911732:.[, .N, by = campaign_id]
1487081926298:recom_history %>%
1487081926447:.[, .N, by = .(campaign_id, class)]
1487081948872:recom_history %>%
1487081949048:.[, .N, by = .(campaign_id, class)] %>%
1487081949203:dcast(~campaign_id)
1487081962149:recom_history %>%
1487081962298:.[, .N, by = .(campaign_id, class)] %>%
1487081962468:dcast(id.vars = 'campaign_id')
1487081992097:?dcast
1487082045921:recom_history %>%
1487082046066:.[, .N, by = .(campaign_id, class)] %>%
1487082046223:dcast(campaign_id ~ class)
1487082910665:recom_history %>%
1487082910999:.[, .N, by = .(campaign_id, incentive_type)] %>%
1487082913807:recom_history %>%
1487082913807:.[, .N, by = .(campaign_id, incentive_type)] %>%
1487082913808:dcast(campaign_id ~ incentive_type)
1487082920021:recom_history %>%
1487082920022:.[, .N, by = .(campaign_id, incentive_type)] %>%
1487082920022:dcast(campaign_id ~ incentive_type)
1487082989357:recom_history %>%
1487082989683:.[, .N, by = .(campaign_id, numericValue)] %>%
1487082993711:recom_history %>%
1487082993712:.[, .N, by = .(campaign_id, numericValue)] %>%
1487082993712:dcast(campaign_id ~ numericValue)
1487082995579:recom_history %>%
1487082995580:.[, .N, by = .(campaign_id, numericValue)] %>%
1487082995581:dcast(campaign_id ~ numericValue)
1487083046318:recom_history[, table(class, numericValue)]
1487083069469:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487084813111:recom_history
1487084859842:recom_history[is.na(did_open)]
1487084884347:recom_history %>%
1487084885521:.[, .(open_rate = mean(did_open), by = .(campaign_start_date, class))] %>%
1487084906943:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487084910105:recom_history %>%
1487084910106:.[, .(open_rate = mean(did_open), by = .(campaign_start_date, class))] %>%
1487084910107:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487084910107:geom_line(aes(color = class))
1487084928521:recom_history %>%
1487084928521:.[, .(open_rate = mean(did_open), by = .(campaign_start_date, class))] %>%
1487084928522:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487084928522:geom_line(aes(color = class))
1487084946880:recom_history %>%
1487084946880:.[, .(open_rate = mean(did_open), by = .(campaign_start_date, class))]
1487084965408:recom_history %>%
1487084965578:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, class)] %>%
1487084965858:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487084969105:recom_history %>%
1487084969107:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, class)] %>%
1487084969107:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487084969108:geom_line(aes(color = class))
1487084973604:recom_history %>%
1487084973605:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, class)] %>%
1487084973606:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487084973606:geom_line(aes(color = class))
1487085394734:recom_history
1487085806551:recom_history[, unique(campaign_id)]
1487154252486:recom_history %>%
1487154252487:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, class)] %>%
1487154252487:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487154252488:geom_line(aes(color = class))
1487154316488:recom_history[campaign_id == 863889]
1487154332624:recom_history[campaign_id == 863889][did_open == TRUE]
1487154340281:recom_history[campaign_id == 863889][did_open == TRUE, mean(did_click)]
1487154387215:recom_history %>%
1487154387216:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, class)] %>%
1487154387217:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487154387218:geom_line(aes(color = class)) +
1487154387219:scale_y_continuous(label = scales::percent)
1487154540665:recom_history
1487154553542:names(recom_history)
1487154563312:recom_history[, buying_prob]
1487154929649:recom_history[, buying_prob]
1487154964227:recom_history[, cut(buying_prob, breaks = quantile(buying_prob, 0.5))]
1487154973587:recom_history[, cut(buying_prob, breaks = quantile(buying_prob, 0.5, na.rm = TRUE))]
1487154982691:recom_history[, cut(buying_prob, breaks = quantile(buying_prob, 0.5, na.rm = TRUE))]
1487154993379:cucc <- recom_history[, buying_prob]
1487154999991:quantile(cucc, 0.5)
1487155004251:quantile(cucc, 0.5, na.rm = T)
1487155037781:recom_history[, cut(buying_prob, breaks = quantile(buying_prob, 0.5, na.rm = TRUE), include.lowest = T)]
1487155064679:recom_history[, cut(buying_prob, breaks = quantile(buying_prob, c(0, 0.5, 1), na.rm = TRUE), include.lowest = T)]
1487155148834:recom_history[, prob_group := cut(
1487155148835:buying_prob,
1487155148836:breaks = quantile(buying_prob, seq(0, 1, 0.5), na.rm = TRUE),
1487155148836:include.lowest = TRUE
1487155148837:)]
1487155168738:recom_history[, table(prob_group, useNA = 'ifany')]
1487155204100:recom_history[, prob_group := cut(
1487155204542:buying_prob,
1487155204875:breaks = quantile(buying_prob, c(0, 0.5, 1), na.rm = TRUE),
1487155205215:include.lowest = TRUE
1487155220556:recom_history[, prob_group := cut(
1487155220557:buying_prob,
1487155220557:breaks = quantile(buying_prob, c(0, 0.5, 1), na.rm = TRUE),
1487155220558:include.lowest = TRUE
1487155220558:)]
1487155222508:recom_history[, prob_group := cut(
1487155222508:buying_prob,
1487155222509:breaks = quantile(buying_prob, c(0, 0.5, 1), na.rm = TRUE),
1487155222509:include.lowest = TRUE
1487155222510:)]
1487155233462:recom_history[, table(prob_group)]
1487155262302:recom_history[, prob_group := cut(
1487155262302:buying_prob,
1487155262303:breaks = c(0, quantile(buying_prob, c(0.5), na.rm = TRUE), 1),
1487155262303:include.lowest = TRUE
1487155262304:)]
1487155264911:recom_history[, table(prob_group)]
1487155281312:recom_history[, prob_group := cut(
1487155281312:buying_prob,
1487155281313:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487155281313:include.lowest = TRUE
1487155281313:)]
1487155288648:recom_history[, table(prob_group)]
1487155328280:recom_history %>%
1487155328281:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, class, prob_group)] %>%
1487155328282:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487155328282:geom_line(aes(color = class)) +
1487155328282:scale_y_continuous(label = scales::percent) +
1487155328283:labs(
1487155328283:x = 'Campaign date',
1487155328283:y = 'Click-through rate'
1487155328284:) +
1487155328284:facet_wrap(~prob_group)
1487155352218:recom_history %>%
1487155352218:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, class, prob_group)] %>%
1487155352219:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487155352220:geom_line(aes(color = class)) +
1487155352220:scale_y_continuous(label = scales::percent) +
1487155352220:labs(
1487155352221:x = 'Campaign date',
1487155352221:y = 'Click-through rate'
1487155352222:) +
1487155352222:facet_wrap(~prob_group, ncol = 1)
1487155408979:recom_history %>%
1487155408980:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, class, prob_group)] %>%
1487155408981:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487155408982:geom_line(aes(color = class)) +
1487155408983:scale_y_continuous(label = scales::percent) +
1487155408983:labs(
1487155408984:x = 'Campaign date',
1487155408984:y = 'Click-through rate'
1487155408984:) +
1487155408985:facet_wrap(~prob_group, nrow = 1) +
1487155408985:theme(legend.position = 'top')
1487156048072:recom_history[buying_prob > 0.5]
1487156065370:recom_history[buying_prob > 0.5, unique(contact_id)]
1487156071040:recom_history[buying_prob > 0.5, unique(contact_id)] %>% length()
1487156074322:recom_history[buying_prob > 0.1, unique(contact_id)] %>% length()
1487156079561:recom_history[buying_prob > 0.05, unique(contact_id)] %>% length()
1487156086546:recom_history[buying_prob > 0.012, unique(contact_id)] %>% length()
1487156138642:recom_history %>%
1487156138643:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(class, prob_group)]
1487156179387:recom_history %>%
1487156179388:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(class, prob_group)] %>%
1487156179389:dcast(prob_group ~ class)
1487156246722:recom_history[, unique(campaign_start_date)]
1487156396017:recom_history %>%
1487156396017:.[campaign_start_date > ymd('2016-10-12')] %>% # good cohorts
1487156396018:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(class, prob_group)] %>%
1487156396019:dcast(prob_group ~ class)
1487156438235:recom_history %>%
1487156438236:.[campaign_start_date > ymd('2016-10-12')] %>% # good cohorts
1487156438237:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(numericValue, prob_group)] %>%
1487156438238:dcast(prob_group ~ numericValue)
1487156508307:recom_history %>%
1487156508308:.[campaign_start_date > ymd('2016-10-12')] %>% # good cohorts
1487156508309:.[,.N, by = .(numericValue, prob_group)] %>%
1487156508309:dcast(prob_group ~ numericValue)
1487156530749:recom_history %>%
1487156530750:.[campaign_start_date > ymd('2016-10-12')] %>% # good cohorts
1487156530751:.[,.N, by = .(class, prob_group)] %>%
1487156530751:dcast(prob_group ~ class)
1487156547016:recom_history %>%
1487156547016:.[campaign_start_date > ymd('2016-10-12')] %>% # good cohorts
1487156547017:.[,.N, by = .(class, numericValue)] %>%
1487156547017:dcast(numericValue ~ class)
1487156581661:recom_history %>%
1487156581662:.[campaign_start_date > ymd('2016-10-12')] %>% # good cohorts
1487156581663:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(numericValue, prob_group)] %>%
1487156581663:dcast(prob_group ~ numericValue)
1487158157365:lm(data = recom_history, did_open ~ buying_prob)
1487158165147:lm(data = recom_history, did_open ~ buying_prob) %>% summary
1487158186179:lm(data = recom_history, did_open ~ 1) %>% summary
1487158206998:lm(data = recom_history, did_open ~ prob_group) %>% summary
1487161331313:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487161331314:recom_history, purchases,
1487161331314:source = 'hds'
1487161331315:)
1487161342967:recom_history_w_attributions
1487161375496:recom_history_w_attributions[, did_buy := (sales_amount > 0)]
1487161381056:recom_history_w_attributions
1487161420064:recom_history_w_attributions[, did_buy := !(sales_amount == 0 | is.na(sales_amount))]
1487161422659:recom_history_w_attributions
1487161462761:lm(did_buy ~ buying_prob, data = recom_history_w_attributions) %>% summary()
1487161482774:lm(did_buy ~ log(buying_prob), data = recom_history_w_attributions) %>% summary()
1487161600804:glm(
1487161600805:did_buy ~ log(buying_prob),
1487161600805:data = recom_history_w_attributions,
1487161600806:family = 'binomial'
1487161600806:) %>% summary()
1487161713239:recom_history_w_attributions %>%
1487161713239:.[is.na(buying_prob), buying_prob := 10^(-6)] %>%
1487161713240:.[, did_buy := !(sales_amount == 0 | is.na(sales_amount))]
1487161726084:glm(
1487161726085:did_buy ~ log(buying_prob) + has_buying_prob,
1487161726086:data = recom_history_w_attributions,
1487161726086:family = 'binomial'
1487161726087:) %>% summary()
1487161871939:recom_history[, registration_date]
1487161883877:names(recom_history)
1487161892661:recom_history[, registered_on]
1487161900093:recom_history[, registered_on] %>% is.na()
1487161907863:recom_history[, registered_on] %>% is.na() %>% all()
1487161948865:recom_history_w_attributions %>%
1487161948865:.[is.na(buying_prob), buying_prob := 10^(-6)] %>%
1487161948866:.[, did_buy := !(sales_amount == 0 | is.na(sales_amount))] %>%
1487161948866:.[, registered_since := campaign_start_date - registered_on]
1487161952983:recom_history_w_attributions
1487161971768:recom_history_w_attributions$registered_since %>% hist
1487161974176:recom_history_w_attributions$registered_since %>% hist()
1487161980790:recom_history_w_attributions$registered_since %>% summary()
1487161995776:recom_history_w_attributions$registered_on %>% as.numeric() %>% hist()
1487162024147:recom_history_w_attributions %>% ggplot(aes(x = registered_on)) + geom_hist()
1487162028810:recom_history_w_attributions %>% ggplot(aes(x = registered_on)) + geom_histogram()
1487162042235:recom_history_w_attributions %>% ggplot(aes(x = registered_since)) + geom_histogram()
1487162104496:glm(
1487162104497:did_buy ~ log(buying_prob) + has_buying_prob + registered_since,
1487162104497:data = recom_history_w_attributions,
1487162104498:family = 'binomial'
1487162104498:) %>% summary()
1487162195451:lm(
1487162195452:did_buy ~ log(buying_prob) + has_buying_prob + registered_since,
1487162195453:data = recom_history_w_attributions
1487162195454:) %>% summary()
1487162242762:lm(
1487162242763:did_buy ~ log(buying_prob) + has_buying_prob + registered_since + factor(campaign_id),
1487162242764:data = recom_history_w_attributions
1487162242765:) %>% summary()
1487162277860:log(10^(-6))
1487162285042:log(0.01
1487162286139:)
1487162312299:lm(
1487162312299:did_buy ~ buying_prob + has_buying_prob + registered_since + factor(campaign_id),
1487162312301:data = recom_history_w_attributions
1487162312301:) %>% summary()
1487162386057:recom_history_w_attributions[registered_since < 365, table(has_buying_prob)]
1487162399441:recom_history_w_attributions[registered_since < 5, table(has_buying_prob)]
1487162402424:recom_history_w_attributions[registered_since < 1, table(has_buying_prob)]
1487162406047:recom_history_w_attributions[registered_since < 2, table(has_buying_prob)]
1487162408976:recom_history_w_attributions[registered_since < 1, table(has_buying_prob)]
1487162433882:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487162433883:recom_history, purchases,
1487162433884:source = 'hds'
1487162433884:)
1487162434156:recom_history_w_attributions %>%
1487162434156:.[, did_buy := !(sales_amount == 0 | is.na(sales_amount))] %>%
1487162434157:.[, registered_since := campaign_start_date - registered_on]
1487162439708:glm(
1487162439708:did_buy ~ buying_prob + has_buying_prob + registered_since,
1487162439709:data = recom_history_w_attributions,
1487162439710:family = 'binomial'
1487162439711:) %>% summary()
1487162456686:glm(
1487162456687:did_buy ~ buying_prob + registered_since,
1487162456688:data = recom_history_w_attributions,
1487162456688:family = 'binomial'
1487162456688:) %>% summary()
1487162510241:lm(
1487162510242:did_buy ~ buying_prob + factor(campaign_id),
1487162510243:data = recom_history_w_attributions
1487162510244:) %>% summary()
1487162565505:recom_history_w_attributions[is.na(numericValue), class]
1487162572256:recom_history_w_attributions[is.na(numericValue), table(class)]
1487162578006:recom_history_w_attributions %>%
1487162578007:.[, did_buy := !(sales_amount == 0 | is.na(sales_amount))] %>%
1487162578007:.[, registered_since := campaign_start_date - registered_on] %>%
1487162578008:.[is.na(numericValue), numericValue := 0]
1487162589231:lm(
1487162589231:did_buy ~ buying_prob + factor(numericValue),
1487162589232:data = recom_history_w_attributions
1487162589233:) %>% summary()
1487162634995:str(recom_history_w_attributions)
1487162647005:glm(
1487162647006:did_buy ~ buying_prob + factor(numericValue),
1487162647007:data = recom_history_w_attributions,
1487162647007:family = 'binomial'
1487162647007:) %>% summary()
1487162670788:lm(
1487162670789:did_buy ~ buying_prob + numericValue,
1487162670790:data = recom_history_w_attributions
1487162670790:) %>% summary()
1487162722597:lm(
1487162722597:did_buy ~ log(buying_prob) + factor(numericValue),
1487162722598:data = recom_history_w_attributions
1487162722599:) %>% summary()
1487162800788:recom_history_w_attributions %>%
1487162801146:.[, did_buy := !(is.na(num_purchases))] %>%
1487162801313:.[, registered_since := campaign_start_date - registered_on] %>%
1487162801481:.[is.na(numericValue), numericValue := 0]
1487162820634:glm(
1487162820635:did_buy ~ log(buying_prob) + factor(numericValue),
1487162820636:data = recom_history_w_attributions,
1487162820636:family = 'binomial'
1487162820636:) %>% summary()
1487162912434:glm(
1487162912435:did_buy ~ log(buying_prob) + factor(numericValue) + factor(campaign_id),
1487162912436:data = recom_history_w_attributions,
1487162912436:family = 'binomial'
1487162912436:) %>% summary()
1487163489898:recom_history[, prob_group := cut(
1487163489899:buying_prob,
1487163489900:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487163489900:include.lowest = TRUE
1487163489901:)]  %>%
1487163489901:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487163494475:recom_history %>%
1487163494475:.[, .(open_rate = mean(did_open)), by = .(class, prob_group)] %>%
1487163494476:dcast(prob_group ~ class)
1487163549927:recom_history %>%
1487163549928:.[, .(open_rate = mean(did_open)), by = .(incentive_group, prob_group)] %>%
1487163549929:dcast(prob_group ~ incentive_group)
1487163649403:recom_history %>%
1487163649404:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487163649405:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487163649405:geom_line(aes(color = class)) +
1487163649406:scale_y_continuous(label = scales::percent) +
1487163649406:labs(
1487163649406:x = 'Campaign date',
1487163649407:y = 'Open rate'
1487163649407:)
1487163665585:recom_history %>%
1487163665585:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487163665586:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487163665586:geom_line(aes(color = incentive_group)) +
1487163665587:scale_y_continuous(label = scales::percent) +
1487163665587:labs(
1487163665587:x = 'Campaign date',
1487163665588:y = 'Open rate'
1487163665588:)
1487163716038:recom_history %>%
1487163716038:.[, .(open_rate = mean(did_open)), by = .(incentive_group, prob_group)] %>%
1487163716039:dcast(prob_group ~ incentive_group)
1487163970178:recom_history %>%
1487163970178:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487163970179:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487163970180:geom_line(aes(color = incentive_group), size = 2) +
1487163970180:scale_y_continuous(label = scales::percent) +
1487163970180:labs(
1487163970181:x = 'Campaign date',
1487163970181:y = 'Open rate'
1487163970181:)
1487164009066:recom_history %>%
1487164009066:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487164009067:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487164009068:geom_line(aes(color = incentive_group), size = 2) +
1487164009068:scale_y_continuous(label = scales::percent) +
1487164009068:labs(
1487164009069:x = 'Campaign date',
1487164009069:y = 'Open rate'
1487164009069:) +
1487164009070:theme(legend.position = 'top')
1487164026487:recom_history %>%
1487164026487:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487164026488:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487164026489:geom_line(aes(color = incentive_group), size = 2) +
1487164026489:scale_y_continuous(label = scales::percent) +
1487164026490:labs(
1487164026492:x = 'Campaign date',
1487164026493:y = 'Open rate',
1487164026495:color = 'Got incentive'
1487164026496:) +
1487164026496:theme(legend.position = 'top')
1487164173438:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487164173459:source('global.R')
1487164173539:selected_customer <- 'evolution_slimming'
1487164173542:# Load incentive history
1487164173544:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487164178120:recom_history %>%
1487164178121:.[, .N, by = .(campaign_id, class)] %>%
1487164178122:dcast(campaign_id ~ class)
1487164178207:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487164178829:recom_history %>%
1487164178830:.[, .N, by = .(campaign_id, numericValue)] %>%
1487164178832:dcast(campaign_id ~ numericValue)
1487164178926:recom_history[, prob_group := cut(
1487164178927:buying_prob,
1487164178928:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487164178930:include.lowest = TRUE
1487164178931:)]  %>%
1487164178932:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487164193868:recom_history %>%
1487164193869:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487164193871:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487164193872:geom_line(aes(color = incentive_group), size = 2) +
1487164193873:scale_y_continuous(label = scales::percent) +
1487164193874:labs(
1487164193876:x = 'Campaign date',
1487164193878:y = 'Open rate',
1487164193880:color = 'Got incentive'
1487164193882:) +
1487164193884:theme(legend.position = 'top')
1487164414888:recom_history %>%
1487164414888:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, incentive_group, prob_group)] %>%
1487164414889:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487164414889:geom_line(aes(color = incentive_group)) +
1487164414890:scale_y_continuous(label = scales::percent) +
1487164414890:labs(
1487164414890:x = 'Campaign date',
1487164414891:y = 'Click-through rate'
1487164414891:) +
1487164414892:facet_wrap(~prob_group, nrow = 1) +
1487164414892:theme(legend.position = 'top')
1487164453901:recom_history %>%
1487164453902:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, incentive_group)] %>%
1487164453903:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487164453903:geom_line(aes(color = incentive_group), size = 2) +
1487164453903:scale_y_continuous(label = scales::percent) +
1487164453904:labs(
1487164453904:x = 'Campaign date',
1487164453904:y = 'Click-through rate'
1487164453905:) +
1487164453905:theme(legend.position = 'top')
1487164959694:recom_history %>% ggplot(aes(x = log(buying_prob), fill = class)) + geom_density(alpha = 0.3)
1487165742651:recom_history_w_attributions %>%
1487165742652:.[did_click == TRUE, .(purchase_rate = mean(did_buy)), by = .(campaign_start_date, incentive_group)] %>%
1487165742652:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487165742653:geom_line(aes(color = incentive_group), size = 2) +
1487165742653:scale_y_continuous(label = scales::percent) +
1487165742653:labs(
1487165742654:x = 'Campaign date',
1487165742654:y = 'Conversion rate (purchased from click)'
1487165742654:) +
1487165742655:theme(legend.position = 'top')
1487165751756:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487165751756:recom_history, purchases,
1487165751757:source = 'hds'
1487165751757:)
1487165752261:recom_history_w_attributions %>%
1487165752262:.[, did_buy := !(is.na(num_purchases))] %>%
1487165752263:.[, registered_since := campaign_start_date - registered_on] %>%
1487165752263:.[is.na(numericValue), numericValue := 0]
1487165752438:recom_history_w_attributions %>%
1487165752438:.[did_click == TRUE, .(purchase_rate = mean(did_buy)), by = .(campaign_start_date, incentive_group)] %>%
1487165752440:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487165752440:geom_line(aes(color = incentive_group), size = 2) +
1487165752440:scale_y_continuous(label = scales::percent) +
1487165752441:labs(
1487165752441:x = 'Campaign date',
1487165752441:y = 'Conversion rate (purchased from click)'
1487165752442:) +
1487165752442:theme(legend.position = 'top')
1487165761723:recom_history_w_attributions %>%
1487165761724:.[did_click == TRUE, .(purchase_rate = mean(did_buy)), by = .(campaign_start_date, incentive_group)] %>%
1487165761725:ggplot(aes(x = campaign_start_date, y = purchase_rate)) +
1487165761725:geom_line(aes(color = incentive_group), size = 2) +
1487165761726:scale_y_continuous(label = scales::percent) +
1487165761726:labs(
1487165761727:x = 'Campaign date',
1487165761727:y = 'Conversion rate (purchased from click)'
1487165761727:) +
1487165761728:theme(legend.position = 'top')
1487166023003:source('global.R')
1487166023031:selected_customer <- 'japancentre'
1487166023032:# Load incentive history
1487166023032:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487166028351:recom_history %>%
1487166028352:.[, .N, by = .(campaign_id, class)] %>%
1487166028353:dcast(campaign_id ~ class)
1487166028371:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487166028460:recom_history %>%
1487166028460:.[, .N, by = .(campaign_id, numericValue)] %>%
1487166028461:dcast(campaign_id ~ numericValue)
1487166049742:recom_history[, prob_group := cut(
1487166049742:buying_prob,
1487166049743:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487166049744:include.lowest = TRUE
1487166049744:)]  %>%
1487166049744:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487166055606:recom_history %>%
1487166055606:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487166055607:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487166055608:geom_line(aes(color = incentive_group), size = 2) +
1487166055608:scale_y_continuous(label = scales::percent) +
1487166055609:labs(
1487166055609:x = 'Campaign date',
1487166055610:y = 'Open rate',
1487166055610:color = 'Got incentive'
1487166055611:) +
1487166055611:theme(legend.position = 'top')
1487166072370:recom_history %>%
1487166072371:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, incentive_group)] %>%
1487166072372:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487166072373:geom_line(aes(color = incentive_group), size = 2) +
1487166072373:scale_y_continuous(label = scales::percent) +
1487166072374:labs(
1487166072374:x = 'Campaign date',
1487166072375:y = 'Click-through rate'
1487166072375:) +
1487166072376:theme(legend.position = 'top')
1487166080790:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487166080790:recom_history, purchases,
1487166080791:source = 'hds'
1487166080792:)
1487166080847:recom_history_w_attributions %>%
1487166080847:.[, did_buy := !(is.na(num_purchases))] %>%
1487166080848:.[, registered_since := campaign_start_date - registered_on] %>%
1487166080849:.[is.na(numericValue), numericValue := 0]
1487166080879:recom_history_w_attributions %>%
1487166080880:.[did_click == TRUE, .(purchase_rate = mean(did_buy)), by = .(campaign_start_date, incentive_group)] %>%
1487166080880:ggplot(aes(x = campaign_start_date, y = purchase_rate)) +
1487166080880:geom_line(aes(color = incentive_group), size = 2) +
1487166080881:scale_y_continuous(label = scales::percent) +
1487166080881:labs(
1487166080881:x = 'Campaign date',
1487166080882:y = 'Conversion rate (purchased from click)'
1487166080882:) +
1487166080883:theme(legend.position = 'top')
1487168604807:source('global.R')
1487168604881:selected_customer <- 'brand_alley'
1487168604884:# Load incentive history
1487168604886:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487168611650:recom_history %>%
1487168611651:.[, .N, by = .(campaign_id, class)] %>%
1487168611653:dcast(campaign_id ~ class)
1487168611673:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487168611702:recom_history %>%
1487168611703:.[, .N, by = .(campaign_id, numericValue)] %>%
1487168611704:dcast(campaign_id ~ numericValue)
1487168631749:recom_history %>%
1487168631750:.[, .N, by = .(campaign_id, class)] %>%
1487168631751:dcast(campaign_id ~ class)
1487168631768:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487168631791:recom_history %>%
1487168631792:.[, .N, by = .(campaign_id, numericValue)] %>%
1487168631794:dcast(campaign_id ~ numericValue)
1487168651980:source('global.R')
1487168652055:selected_customer <- 'grandshopdirect'
1487168652058:# Load incentive history
1487168652059:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487168712140:source('global.R')
1487168712245:selected_customer <- 'globalshopdirect'
1487168712249:# Load incentive history
1487168712251:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487168717939:recom_history %>%
1487168717941:.[, .N, by = .(campaign_id, class)] %>%
1487168717942:dcast(campaign_id ~ class)
1487168718068:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487168718756:recom_history %>%
1487168718758:.[, .N, by = .(campaign_id, numericValue)] %>%
1487168718759:dcast(campaign_id ~ numericValue)
1487168797905:source('global.R')
1487168797981:selected_customer <- 'globalshopdirect'
1487168797983:# Load incentive history
1487168797985:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487168802512:recom_history[numericValue == 99, numericValue := 1]
1487168803407:recom_history %>%
1487168803409:.[, .N, by = .(campaign_id, class)] %>%
1487168803410:dcast(campaign_id ~ class)
1487168803531:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487168804323:recom_history %>%
1487168804327:.[, .N, by = .(campaign_id, numericValue)] %>%
1487168804328:dcast(campaign_id ~ numericValue)
1487168812440:recom_history[, prob_group := cut(
1487168812441:buying_prob,
1487168812442:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487168812443:include.lowest = TRUE
1487168812444:)]  %>%
1487168812446:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487168817076:recom_history %>%
1487168817077:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487168817078:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487168817079:geom_line(aes(color = incentive_group), size = 2) +
1487168817080:scale_y_continuous(label = scales::percent) +
1487168817082:labs(
1487168817083:x = 'Campaign date',
1487168817085:y = 'Open rate',
1487168817086:color = 'Got incentive'
1487168817088:) +
1487168817089:theme(legend.position = 'top')
1487168842804:recom_history %>%
1487168842805:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, incentive_group)] %>%
1487168842806:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487168842808:geom_line(aes(color = incentive_group), size = 2) +
1487168842809:scale_y_continuous(label = scales::percent) +
1487168842810:labs(
1487168842812:x = 'Campaign date',
1487168842814:y = 'Click-through rate'
1487168842816:) +
1487168842817:theme(legend.position = 'top')
1487168848037:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487168848039:recom_history, purchases,
1487168848040:source = 'hds'
1487168848041:)
1487168848535:recom_history_w_attributions %>%
1487168848537:.[, did_buy := !(is.na(num_purchases))] %>%
1487168848538:.[, registered_since := campaign_start_date - registered_on] %>%
1487168848540:.[is.na(numericValue), numericValue := 0]
1487168851794:recom_history_w_attributions %>%
1487168851795:.[did_click == TRUE, .(purchase_rate = mean(did_buy)), by = .(campaign_start_date, incentive_group)] %>%
1487168851796:ggplot(aes(x = campaign_start_date, y = purchase_rate)) +
1487168851797:geom_line(aes(color = incentive_group), size = 2) +
1487168851799:scale_y_continuous(label = scales::percent) +
1487168851800:labs(
1487168851802:x = 'Campaign date',
1487168851803:y = 'Conversion rate (purchased from click)'
1487168851805:) +
1487168851807:theme(legend.position = 'top')
1487169433573:recom_history[, uniqueN(class), by = contact_id]
1487169450414:recom_history[, uniqueN(class), by = contact_id][class > 1]
1487169462906:recom_history[, uniqueN(class), by = contact_id][V1 > 1]
1487169484041:recom_history[contact_id == 215714]
1487169507893:recom_history[contact_id == 42427]
1487169524934:recom_history[contact_id == 999541991]
1487172948803:source('global.R')
1487172948867:selected_customer <- 'evolution_slimming'
1487172948872:# Load incentive history
1487172948874:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487172973876:headers <- list(
1487172973878:categories = c(
1487172973879:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1487172973881:),
1487172973883:product = c(
1487172973886:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1487172973888:)
1487172973890:)
1487172973897:types_to_read <- c('viewed', 'added', 'purchased')
1487172973902:data_read <- sapply(
1487172973904:types_to_read,
1487172973906:function(type) readInPredictData(selected_customer, type),
1487172973907:simplify = FALSE
1487172973909:)
1487172974572:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1487172974767:predict_data <- addContactId(predict_data, selected_customer)
1487173011692:daily_visits <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1487173011693:.[, .(contact_id, day = as.Date(timestamp))] %>%
1487173011695:unique()
1487173029758:# how many rows
1487173029760:merge(
1487173029761:recom_history[, .(contact_id, class)] %>% unique(),
1487173029762:predict_data[, .N, by = contact_id],
1487173029764:by = 'contact_id',
1487173029765:all.x = TRUE
1487173029766:) %>%
1487173029768:fillZerosForNA_() %>%
1487173029770:.[, mean(N), by = class]
1487173029871:# how many days
1487173029873:merge(
1487173029874:recom_history[, .(contact_id, class)] %>% unique(),
1487173029875:daily_visits[, .N, by = contact_id],
1487173029877:by = 'contact_id',
1487173029878:all.x = TRUE
1487173029879:) %>%
1487173029881:fillZerosForNA_() %>%
1487173029882:.[, mean(N), by = class]
1487173029976:# evolution
1487173029978:merge(
1487173029980:recom_history[, .(contact_id, class)] %>% unique(),
1487173029981:daily_visits,
1487173029983:by = 'contact_id',
1487173029985:all.y = TRUE
1487173029988:) %>%
1487173029989:.[, .N, by = .(day, class)] %>%
1487173029992:ggplot(aes(day, N, col = class)) +
1487173029994:geom_line() +
1487173029996:geom_vline(
1487173029998:data = unique(recom_history[, .(campaign_start_date)]),
1487173030000:aes(xintercept = as.integer(campaign_start_date)),
1487173030002:linetype = 'dotted'
1487173030005:)
1487173236788:recom_history
1487173241260:daily_visits
1487173901620:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487173904596:source('global.R')
1487173904679:selected_customer <- 'evolution_slimming'
1487173904683:# Load incentive history
1487173904684:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487173909206:recom_history %>%
1487173909207:.[buying_prob > 0.01] %>%
1487173909210:.[, .N, by = .(campaign_id, class)] %>%
1487173909211:dcast(campaign_id ~ class)
1487173909293:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487173910064:recom_history %>%
1487173910065:.[, .N, by = .(campaign_id, numericValue)] %>%
1487173910066:dcast(campaign_id ~ numericValue)
1487173928741:recom_history[, prob_group := cut(
1487173928742:buying_prob,
1487173928744:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487173928745:include.lowest = TRUE
1487173928747:)]  %>%
1487173928748:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487173940004:recom_history %>%
1487173940005:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487173940006:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487173940007:geom_line(aes(color = incentive_group), size = 2) +
1487173940009:scale_y_continuous(label = scales::percent) +
1487173940011:labs(
1487173940012:x = 'Campaign date',
1487173940014:y = 'Open rate',
1487173940015:color = 'Got incentive'
1487173940017:) +
1487173940019:theme(legend.position = 'top')
1487174014706:recom_history <- recom_history[buying_prob > 0.01]
1487174014778:recom_history %>%
1487174014779:.[, .N, by = .(campaign_id, class)] %>%
1487174014780:dcast(campaign_id ~ class)
1487174014802:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487174014853:recom_history %>%
1487174014855:.[, .N, by = .(campaign_id, numericValue)] %>%
1487174014857:dcast(campaign_id ~ numericValue)
1487174020026:recom_history[, prob_group := cut(
1487174020027:buying_prob,
1487174020028:breaks = c(0, quantile(buying_prob, c(0.25, 0.5, 0.75), na.rm = TRUE), 1),
1487174020029:include.lowest = TRUE
1487174020031:)]  %>%
1487174020032:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487174092282:recom_history %>%
1487174092285:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487174095696:recom_history %>%
1487174095697:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487174095698:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487174095699:geom_line(aes(color = incentive_group), size = 2) +
1487174095701:scale_y_continuous(label = scales::percent) +
1487174095703:labs(
1487174095704:x = 'Campaign date',
1487174095706:y = 'Open rate',
1487174095707:color = 'Got incentive'
1487174095709:) +
1487174095711:theme(legend.position = 'top')
1487174103649:recom_history %>%
1487174103650:.[did_open == TRUE, .(click_through_rate = mean(did_click)), by = .(campaign_start_date, incentive_group)] %>%
1487174103652:ggplot(aes(x = campaign_start_date, y = click_through_rate)) +
1487174103653:geom_line(aes(color = incentive_group), size = 2) +
1487174103655:scale_y_continuous(label = scales::percent) +
1487174103656:labs(
1487174103658:x = 'Campaign date',
1487174103660:y = 'Click-through rate'
1487174103662:) +
1487174103664:theme(legend.position = 'top')
1487174108790:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1487174108792:recom_history, purchases,
1487174108793:source = 'hds'
1487174108794:)
1487174108836:recom_history_w_attributions %>%
1487174108838:.[, did_buy := !(is.na(num_purchases))] %>%
1487174108839:.[, registered_since := campaign_start_date - registered_on] %>%
1487174108840:.[is.na(numericValue), numericValue := 0]
1487174113133:recom_history_w_attributions %>%
1487174113135:.[did_click == TRUE, .(purchase_rate = mean(did_buy)), by = .(campaign_start_date, incentive_group)] %>%
1487174113136:ggplot(aes(x = campaign_start_date, y = purchase_rate)) +
1487174113138:geom_line(aes(color = incentive_group), size = 2) +
1487174113139:scale_y_continuous(label = scales::percent) +
1487174113141:labs(
1487174113142:x = 'Campaign date',
1487174113144:y = 'Conversion rate (purchased from click)'
1487174113146:) +
1487174113147:theme(legend.position = 'top')
1487174122561:headers <- list(
1487174122562:categories = c(
1487174122563:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1487174122564:),
1487174122566:product = c(
1487174122567:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1487174122568:)
1487174122570:)
1487174122577:types_to_read <- c('viewed', 'added', 'purchased')
1487174122580:data_read <- sapply(
1487174122581:types_to_read,
1487174122583:function(type) readInPredictData(selected_customer, type),
1487174122584:simplify = FALSE
1487174122585:)
1487174122990:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1487174123197:predict_data <- addContactId(predict_data, selected_customer)
1487174183519:x = data.table(start=c(5,31,22,16), end=c(8,50,25,18), val2 = 7:10)
1487174183521:y = data.table(start=c(10, 20, 30), end=c(15, 35, 45), val1 = 1:3)
1487174184599:x
1487174185128:y
1487174205401:foverlaps(x, y, type = 'any', which = TRUE)
1487174216065:daily_visits
1487174234058:daily_visits[contact_id %in% (99588187, 411361853)]
1487174240258:daily_visits[contact_id %in% c(99588187, 411361853)]
1487174246707:dv <- daily_visits[contact_id %in% c(99588187, 411361853)]
1487174268564:rh <- recom_history[contact_id %in% c(99588187, 411361853)]
1487174269628:rh
1487174275749:rh
1487174296816:rh[, .(contact_id, campaign_id, campaign_start_date)]
1487174299831:rh <- rh[, .(contact_id, campaign_id, campaign_start_date)]
1487174300441:rh
1487174302134:dv
1487174352742:foverlaps(rh, dv)
1487174366599:foverlaps(rh, dv, by.x = 'campaign_start_date', by.y = 'day')
1487174483853:?merge.data.table
1487174513966:setnames(dv, 'day', 'campaign_start_date')
1487174514924:dv
1487174515725:rh
1487174524134:setkey(dv, campaign_start_date)
1487174532383:setkey(rh, campaign_start_date)
1487174541663:dv[rh, roll = T]
1487174566488:setkeys(rh, c('campaign_start_date', 'contact_id'))
1487174569792:?setkey
1487174576511:setkeyv(rh, c('campaign_start_date', 'contact_id'))
1487174586602:setkeyv(dv, c('campaign_start_date', 'contact_id'))
1487174587832:rh
1487174588367:dv
1487174593681:dv[rh, roll = T]
1487174716174:isabel_website <- data.table(name = rep('Indecisive Isabel', 5),
1487174716175:session_start_time = as.POSIXct(c('2016-01-01 11:01', '2016-01-02 8:59', '2016-01-05 18:18', '2016-01-07 19:03', '2016-01-08 19:01')))
1487174716178:isabel_paypal <- data.table(name = 'Indecisive Isabel', purchase_time = as.POSIXct('2016-01-08 19:10'))
1487174724194:sally_website <- data.table(name = 'Spendy Sally', session_start_time = as.POSIXct('2016-01-03 10:00'))
1487174724198:sally_paypal <- data.table(name = rep('Spendy Sally', 2), purchase_time = as.POSIXct(c('2016-01-03 10:06', '2016-01-03 10:15')))
1487174733391:francis_website <- data.table(name = rep('Frequent Francis', 6),
1487174733392:session_start_time = as.POSIXct(c('2016-01-02 13:09', '2016-01-03 19:22', '2016-01-08 8:44', '2016-01-08 20:22', '2016-01-10 17:36', '2016-01-15 16:56')))
1487174733394:francis_paypal <- data.table(name = rep('Frequent Francis', 3), purchase_time = as.POSIXct(c('2016-01-03 19:28', '2016-01-08 20:33', '2016-01-10 17:46')))
1487174737335:francis_paypal
1487174746487:erica_website <- data.table(name = rep('Error-prone Erica', 2),
1487174746487:session_start_time = as.POSIXct(c('2016-01-04 19:12', '2016-01-04 21:05')))
1487174746489:erica_paypal <- data.table(name = 'Error-prone Erica', purchase_time = as.POSIXct('2016-01-03 08:02'))
1487174754074:vivian_website <- data.table(name = rep('Visitor Vivian', 2),
1487174754075:session_start_time = as.POSIXct(c('2016-01-01 9:10', '2016-01-09 2:15')))
1487174754077:vivian_paypal <- erica_paypal[0] # has 0 rows, but the same column names/classes
1487174764587:mom_website <- vivian_website[0] # has 0 rows, but the same column names/classes
1487174764588:mom_paypal <- data.table(name = 'Mom', purchase_time = as.POSIXct('2015-12-02 17:58'))
1487174770075:website <- rbindlist(list(isabel_website, sally_website, francis_website, erica_website, vivian_website, mom_website))
1487174770076:paypal <- rbindlist(list(isabel_paypal, sally_paypal, francis_paypal, erica_paypal, vivian_paypal, mom_paypal))
1487174772024:website
1487174792305:paypal
1487174803955:website[, session_id:=.GRP, by = .(name, session_start_time)]
1487174803957:paypal[, payment_id:=.GRP, by = .(name, purchase_time)]
1487174806121:website
1487174807313:paypal
1487174829497:website[, join_time:=session_start_time]
1487174829499:paypal[, join_time:=purchase_time]
1487174834018:setkey(website, name, join_time)
1487174834019:setkey(paypal, name, join_time)
1487174843500:website[paypal, roll = T]
1487174850373:website[paypal, roll = T]
1487174856220:website
1487174859630:paypal
1487175757630:x <- data.table(
1487175757631:id = c(1, 1, 2, 2)
1487175757631:date = as.Date(rep(c('2017-02-01', '2017-02-10'), 2)
1487175757632:)
1487175764997:x <- data.table(
1487175764998:id = c(1, 1, 2, 2),
1487175764998:date = as.Date(rep(c('2017-02-01', '2017-02-10'), 2)
1487175764999:)
1487175781653:)
1487175783493:x
1487175852234:events <- data.table(
1487175852235:id = c(1, 1, 1, 2),
1487175852235:date = as.Date(c('2017-01-31', '2017-02-02', '2017-02-05', '2016-02-11'))
1487175852236:)
1487175855127:events
1487175858117:dates <- data.table(
1487175858118:id = c(1, 1, 2, 2),
1487175858118:date = as.Date(rep(c('2017-02-01', '2017-02-10'), 2))
1487175858119:)
1487175860920:dates
1487175956306:dates <- data.table(
1487175956307:id = c(1, 1, 2, 2, 2),
1487175956307:date = as.Date(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14')
1487175956307:)
1487175970473:dates <- data.table(
1487175970474:id = c(1, 1, 2, 2, 2),
1487175970474:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14'))
1487175970474:)
1487175971947:events <- data.table(
1487175972132:id = c(1, 1, 1, 2),
1487175972299:date = as.Date(c('2017-01-31', '2017-02-02', '2017-02-05', '2016-02-11'))
1487175972501:)
1487175974579:dates
1487175975733:events
1487176001046:data.table(
1487176001047:id = c(1, 1, 2, 2, 2),
1487176001048:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14'))
1487176001048:n_events = c(2, 0, 0, 1, 0)
1487176001048:)
1487176007547:data.table(
1487176007548:id = c(1, 1, 2, 2, 2),
1487176007549:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14')),
1487176007549:n_events = c(2, 0, 0, 1, 0)
1487176007549:)
1487176113964:library(data.table) # 1.9.6
1487176113966:DT1 <- data.table(id = rep(c("a", "b"), c(3, 2)),
1487176113966:x  = c(6,12,15,37,41),
1487176113966:y  = 1)
1487176113967:DT1[]
1487176113969:DT2 <- data.table(id = rep(c("a", "b"), c(4, 5)),
1487176113969:x = c(2,7,11,15,27,30, 35, 38,40))
1487176113970:DT2[]
1487176134121:DT2[DT1, y := y, on = c("id", "x"), roll = -Inf]
1487176134127:DT2[]
1487176254024:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487176256575:source('global.R')
1487176256666:selected_customer <- 'evolution_slimming'
1487176256669:# Load incentive history
1487176256671:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487176261141:recom_history %>%
1487176261142:.[, .N, by = .(campaign_id, class)] %>%
1487176261143:dcast(campaign_id ~ class)
1487176261241:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487176261792:recom_history %>%
1487176261794:.[, .N, by = .(campaign_id, numericValue)] %>%
1487176261795:dcast(campaign_id ~ numericValue)
1487176268060:recom_history %>%
1487176268062:.[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487176274698:recom_history %>%
1487176274700:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487176274701:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487176274702:geom_line(aes(color = incentive_group), size = 2) +
1487176274704:scale_y_continuous(label = scales::percent) +
1487176274705:labs(
1487176274707:x = 'Campaign date',
1487176274709:y = 'Open rate',
1487176274711:color = 'Got incentive'
1487176274713:) +
1487176274714:theme(legend.position = 'top')
1487176288221:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487176290561:recom_history %>%
1487176290563:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487176290565:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487176290566:geom_line(aes(color = incentive_group), size = 2) +
1487176290568:scale_y_continuous(label = scales::percent) +
1487176290569:labs(
1487176290571:x = 'Campaign date',
1487176290573:y = 'Open rate',
1487176290575:color = 'Got incentive'
1487176290577:) +
1487176290578:theme(legend.position = 'top')
1487176294962:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487176296053:recom_history %>%
1487176296054:.[, .(open_rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487176296055:ggplot(aes(x = campaign_start_date, y = open_rate)) +
1487176296057:geom_line(aes(color = incentive_group), size = 2) +
1487176296059:scale_y_continuous(label = scales::percent) +
1487176296061:labs(
1487176296064:x = 'Campaign date',
1487176296066:y = 'Open rate',
1487176296068:color = 'Got incentive'
1487176296069:) +
1487176296071:theme(legend.position = 'top')
1487231901609:dates <- data.table(
1487231901610:id = c(1, 1, 2, 2, 2),
1487231901611:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14'))
1487231901611:)
1487231901613:events <- data.table(
1487231901613:id = c(1, 1, 1, 2),
1487231901613:date = as.Date(c('2017-01-31', '2017-02-02', '2017-02-05', '2016-02-11'))
1487231901613:)
1487231901615:result <- data.table(
1487231901615:id = c(1, 1, 2, 2, 2),
1487231901616:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14')),
1487231901616:n_events = c(2, 0, 0, 1, 0)
1487231901617:)
1487231905066:dates
1487231906692:events
1487231932320:dates[, end := shift(date, 1)]
1487231934614:dates
1487231946770:dates[, end := shift(date, -1)]
1487231956152:?shift
1487231964775:dates[, end := shift(date, 1, type = 'lead')][]
1487232089620:results
1487232093043:result
1487232121066:events
1487232230969:dates[, end := shift(date, 1, type = 'lead'), by = id][]
1487232336582:setkeyv(dates, c('id', 'date'))
1487232336811:setkeyv(events, c('id', 'date'))
1487232344792:dates[events, roll = T]
1487232682003:events[dates, roll = T]
1487232698273:events[dates, roll = T] %>%
1487232698431:.[, .N, by = .(id, date)]
1487232711037:events
1487232790096:dates <- data.table(
1487232790096:id = c(1, 1, 2, 2, 2),
1487232790097:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14'))
1487232790097:)
1487232790099:events <- data.table(
1487232790100:id = c(1, 1, 1, 2),
1487232790100:date = as.Date(c('2017-01-31', '2017-02-02', '2017-02-05', '2016-02-11'))
1487232790100:)
1487232822713:dates[, join_date := date]
1487232823033:events[, join_date := event_date]
1487232827947:dates <- data.table(
1487232827947:id = c(1, 1, 2, 2, 2),
1487232827948:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14'))
1487232827949:)
1487232827950:events <- data.table(
1487232827951:id = c(1, 1, 1, 2),
1487232827951:event_date = as.Date(c('2017-01-31', '2017-02-02', '2017-02-05', '2016-02-11'))
1487232827951:)
1487232827953:result <- data.table(
1487232827953:id = c(1, 1, 2, 2, 2),
1487232827954:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14')),
1487232827954:n_events = c(2, 0, 0, 1, 0)
1487232827954:)
1487232827956:dates[, join_date := date]
1487232827958:events[, join_date := event_date]
1487232829393:setkeyv(dates, c('id', 'join_date'))
1487232829753:setkeyv(events, c('id', 'join_date'))
1487232837488:events[dates, roll = T]
1487232860422:event_date
1487232862944:events
1487232889976:events[dates, roll = T, rollends = Inf]
1487232898034:?roll join
1487232938012:dates[events, roll = T]
1487232962252:result
1487232985141:dates
1487232988444:events
1487233001294:dates[events, roll = T]
1487233024645:events <- data.table(
1487233024645:id = c(1, 1, 1, 2),
1487233024646:event_date = as.Date(c('2017-01-31', '2017-02-02', '2017-02-05', '2017-02-11'))
1487233024647:)
1487233024650:result <- data.table(
1487233024650:id = c(1, 1, 2, 2, 2),
1487233024651:date = as.Date(c(rep(c('2017-02-01', '2017-02-10'), 2), '2017-02-14')),
1487233024651:n_events = c(2, 0, 0, 1, 0)
1487233024651:)
1487233024653:dates[, join_date := date]
1487233024655:events[, join_date := event_date]
1487233024657:setkeyv(dates, c('id', 'join_date'))
1487233024658:setkeyv(events, c('id', 'join_date'))
1487233024659:dates[events, roll = T] %>%
1487233024659:.[, .N, by = .(id, date)]
1487237318486:source('global.R')
1487237318524:selected_customer <- 'evolution_slimming'
1487237400949:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487237406985:headers <- list(
1487237406986:categories = c(
1487237406987:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1487237406987:),
1487237406988:product = c(
1487237406988:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1487237406989:)
1487237406989:)
1487237406990:types_to_read <- c('viewed', 'added', 'purchased')
1487237406991:data_read <- sapply(
1487237406992:types_to_read,
1487237406992:function(type) readInPredictData(selected_customer, type),
1487237406992:simplify = FALSE
1487237406993:)
1487237407387:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1487237407549:predict_data <- addContactId(predict_data, selected_customer)
1487237417352:daily_visits <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1487237417355:.[, .(contact_id, day = as.Date(timestamp))] %>%
1487237417356:unique()
1487237498853:daily_visits[, join_date := day]
1487237498855:recom_history[, join_date := campaign_start_date]
1487237498883:setkeyv(daily_visits, c('contact_id', 'join_date'))
1487237498884:setkeyv(recom_history, c('contact_id', 'join_date'))
1487237519319:merged <- recom_history[recom_history, roll = TRUE]
1487237523324:merged
1487237541878:merged <- recom_history[daily_visits, roll = TRUE]
1487237546189:merged
1487237606840:daily_visits <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1487237606842:.[, .(contact_id, day = as.Date(timestamp))] %>%
1487237606842:unique()
1487237610152:daily_visits
1487237615949:daily_visits[, join_date := day]
1487237615950:recom_history[, join_date := campaign_start_date]
1487237615982:setkeyv(daily_visits, c('contact_id', 'join_date'))
1487237615984:setkeyv(recom_history, c('contact_id', 'join_date'))
1487237627232:daily_visits[contact_id == 460890041]
1487237637081:recom_history[contact_id == 460890041]
1487237665006:recom_history[daily_visits, roll = TRUE] %>%
1487237665007:.[, .(.N), by = .(contact_id, campaign_start_date, class)] %>%
1487237665008:.[contact_id == 460890041]
1487237731915:merged <- recom_history[daily_visits, roll = TRUE] %>%
1487237731917:.[, .(.N), by = .(contact_id, campaign_start_date, class)]
1487239406155:merged <- recom_history[daily_visits, roll = TRUE] %>%
1487239406157:.[, .(n_visit = .N), by = .(contact_id, campaign_id, class)]
1487239434356:merged <- recom_history[daily_visits, roll = TRUE] %>%
1487239434357:.[, .(n_visit = .N), by = .(contact_id, campaign_id)]
1487239456084:recom_history_w_visits <- merge(
1487239456086:recom_history,
1487239456087:merged,
1487239456087:by = c('contact_id', 'campaign_id'),
1487239456088:all.x = TRUE
1487239456088:)
1487239498169:recom_history_w_visits
1487239506231:recom_history_w_visits %>% table(n_visit)
1487239511563:recom_history_w_visits[, table(n_visit)]
1487239523641:recom_history_w_visits[, table(num_purchase)]
1487239530305:recom_history_w_attributions[, table(num_purchase)]
1487239536071:recom_history_w_attributions[, table(num_purchases)]
1487239560953:recom_history_w_attributions
1487239622638:source('global.R')
1487239622686:selected_customer <- 'evolution_slimming'
1487239622687:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487239627082:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487239638265:headers <- list(
1487239638267:categories = c(
1487239638268:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1487239638268:),
1487239638269:product = c(
1487239638269:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1487239638269:)
1487239638270:)
1487239638271:types_to_read <- c('viewed', 'added', 'purchased')
1487239638271:data_read <- sapply(
1487239638271:types_to_read,
1487239638272:function(type) readInPredictData(selected_customer, type),
1487239638272:simplify = FALSE
1487239638272:)
1487239638607:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1487239638768:predict_data <- addContactId(predict_data, selected_customer)
1487239661563:daily_visits <- predict_data[timestamp >= '2016-09-13' & timestamp < '2016-10-29'] %>%
1487239661564:.[, .(contact_id, day = as.Date(timestamp))] %>%
1487239661565:unique()
1487239661589:daily_visits[, join_date := day]
1487239661591:recom_history[, join_date := campaign_start_date]
1487239661621:setkeyv(daily_visits, c('contact_id', 'join_date'))
1487239661623:setkeyv(recom_history, c('contact_id', 'join_date'))
1487239661661:merged <- recom_history[daily_visits, roll = TRUE] %>%
1487239661662:.[, .(n_visit = .N), by = .(contact_id, campaign_id)]
1487239661674:recom_history_w_visits <- merge(
1487239661675:recom_history,
1487239661676:merged,
1487239661677:by = c('contact_id', 'campaign_id'),
1487239661677:all.x = TRUE
1487239661678:)
1487239666600:recom_history_w_visits %>%
1487239666602:.[, .(visit_rate = mean(!is.na(n_visit))), by = .(campaign_start_date, incentive_group)] %>%
1487239666602:ggplot(aes(x = campaign_start_date, y = purchase_rate)) +
1487239666603:geom_line(aes(color = incentive_group), size = 2) +
1487239666603:scale_y_continuous(label = scales::percent) +
1487239666604:labs(
1487239666604:x = 'Campaign date',
1487239666604:y = 'Conversion rate (purchased from click)'
1487239666605:) +
1487239666605:theme(legend.position = 'top')
1487239678099:recom_history_w_visits %>%
1487239678100:.[, .(visit_rate = mean(!is.na(n_visit))), by = .(campaign_start_date, incentive_group)] %>%
1487239678101:ggplot(aes(x = campaign_start_date, y = visit_rate)) +
1487239678101:geom_line(aes(color = incentive_group), size = 2) +
1487239678102:scale_y_continuous(label = scales::percent) +
1487239678103:labs(
1487239678103:x = 'Campaign date',
1487239678103:y = 'Conversion rate (purchased from click)'
1487239678104:) +
1487239678104:theme(legend.position = 'top')
1487240138999:alpha_prior <- 0.5
1487240138999:beta_prior <- 0.5
1487240139000:lower_percentile <- 0.05
1487240139001:higher_percentile <- 0.95
1487240139002:recom_history_w_visits %>%
1487240139002:.[, .(.N, num_visit = sum(n_visit, na.rm = TRUE)), by = class] %>%
1487240139003:.[, `:=`(
1487240139003:alpha = alpha_prior + num_visit,
1487240139004:beta = beta_prior + N - num_visit
1487240139004:)] %>%
1487240139004:.[, `:=`(
1487240139005:rate_lower = qbeta(lower_percentile, alpha, beta),
1487240139005:rate = alpha / (alpha + beta),
1487240139006:rate_higher = qbeta(higher_percentile, alpha, beta)
1487240139006:)] %>%
1487240139006:ggplot(aes(x = class, y = rate, fill = class)) +
1487240139007:geom_bar(stat = 'identity', position = 'dodge') +
1487240139007:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240139007:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1487240139008:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240139009:labs(x = 'Segment',
1487240139010:y = "Visit rate",
1487240139010:fill = 'Segment',
1487240139010:title = "Web visit rates in different segments"
1487240139011:)
1487240291898:recom_history_w_visits[, sum('n_visit', na.rm = TRUE), with = FALSE]
1487240334876:recom_history_w_visits[, sum(get('n_visit'), na.rm = TRUE)]
1487240345020:recom_history_w_visits[, .(.N, sum(get('n_visit')), na.rm = TRUE)]
1487240351836:recom_history_w_visits[, .(.N, sum(get('n_visit'), na.rm = TRUE)]
1487240354103:recom_history_w_visits[, .(.N, sum(get('n_visit'), na.rm = TRUE))]
1487240359540:recom_history_w_visits[, .(.N, sum(get('n_visit'), na.rm = TRUE)), by = class]
1487240609862:merged <- recom_history[daily_visits, roll = TRUE] %>%
1487240609862:.[, .(num_visit = .N), by = .(contact_id, campaign_id)]
1487240609878:recom_history_w_visits <- merge(
1487240609879:recom_history,
1487240609879:merged,
1487240609880:by = c('contact_id', 'campaign_id'),
1487240609880:all.x = TRUE
1487240609880:)
1487240623276:recom_history_w_visits %>%
1487240623276:.[, .(visit_rate = mean(!is.na(num_visit))), by = .(campaign_start_date, incentive_group)] %>%
1487240623277:ggplot(aes(x = campaign_start_date, y = visit_rate)) +
1487240623277:geom_line(aes(color = incentive_group), size = 2) +
1487240623278:scale_y_continuous(label = scales::percent) +
1487240623278:labs(
1487240623279:x = 'Campaign date',
1487240623279:y = 'Visit rate'
1487240623280:) +
1487240623280:theme(legend.position = 'top')
1487240640451:recom_history_w_visits %>%
1487240640452:calculateRateWithErrors(variable = 'num_visit') %>%
1487240640452:plotRatesBySegments(recom_history_w_visits, 'n_visit')
1487240645068:calculateRateWithErrors <- function(history, variable, alpha_prior = 0.5, beta_prior = 0.5, error = 0.05) {
1487240645069:history %>%
1487240645070:.[, .(.N, num_variable = sum(get(variable), na.rm = TRUE)), by = class] %>%
1487240645071:.[, `:=`(
1487240645072:alpha = alpha_prior + num_variable,
1487240645072:beta = beta_prior + N - num_variable
1487240645073:)] %>%
1487240645073:.[, `:=`(
1487240645074:rate_lower = qbeta(error, alpha, beta),
1487240645074:rate = alpha / (alpha + beta),
1487240645074:rate_higher = qbeta(1 - error, alpha, beta)
1487240645075:)]
1487240645075:}
1487240645076:plotRatesBySegments <- function(rate_by_segments, label) {
1487240645076:rate_by_segments %>%
1487240645077:ggplot(aes(x = class, y = rate, fill = class)) +
1487240645077:geom_bar(stat = 'identity', position = 'dodge') +
1487240645078:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240645078:geom_label(aes(label = sprintf('%0.3f%%', 100*rate)), show.legend = F) +
1487240645079:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240645079:labs(x = 'Segment',
1487240645080:y = label,
1487240645080:fill = 'Segment',
1487240645081:title = paste0(label, "s in different segments")
1487240645081:)
1487240645082:}
1487240645083:recom_history_w_visits %>%
1487240645084:calculateRateWithErrors(variable = 'num_visit') %>%
1487240645084:plotRatesBySegments(recom_history_w_visits, 'n_visit')
1487240667308:recom_history_w_visits %>%
1487240667309:calculateRateWithErrors(variable = 'num_visit') %>%
1487240667310:plotRatesBySegments(label = 'Web visit rate')
1487240694337:plotRatesBySegments <- function(rate_by_segments, label) {
1487240694337:rate_by_segments %>%
1487240694338:ggplot(aes(x = class, y = rate, fill = class)) +
1487240694339:geom_bar(stat = 'identity', position = 'dodge') +
1487240694340:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240694340:geom_label(aes(label = scales::percent(rate), show.legend = FALSE) +
1487240694341:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240694341:labs(x = 'Segment',
1487240694342:y = label,
1487240694342:fill = 'Segment',
1487240694342:title = paste0(label, "s in different segments")
1487240694343:)
1487240694343:}
1487240696997:recom_history_w_visits %>%
1487240696998:calculateRateWithErrors(variable = 'num_visit') %>%
1487240696998:plotRatesBySegments(label = 'Web visit rate')
1487240709949:plotRatesBySegments <- function(rate_by_segments, label) {
1487240709950:rate_by_segments %>%
1487240709950:ggplot(aes(x = class, y = rate, fill = class)) +
1487240709951:geom_bar(stat = 'identity', position = 'dodge') +
1487240709951:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240709952:geom_label(aes(label = scales::percent(rate)), show.legend = FALSE) +
1487240709952:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240709952:labs(x = 'Segment',
1487240709953:y = label,
1487240709953:fill = 'Segment',
1487240709954:title = paste0(label, "s in different segments")
1487240709955:)
1487240709955:}
1487240709956:recom_history_w_visits %>%
1487240709957:calculateRateWithErrors(variable = 'num_visit') %>%
1487240709958:plotRatesBySegments(label = 'Web visit rate')
1487240724315:?scales::percent
1487240736652:?scales::percent_format
1487240755679:plotRatesBySegments <- function(rate_by_segments, label) {
1487240755679:rate_by_segments %>%
1487240755680:ggplot(aes(x = class, y = rate, fill = class)) +
1487240755680:geom_bar(stat = 'identity', position = 'dodge') +
1487240755681:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240755681:geom_label(aes(label = scales::percent(round(rate, 2))), show.legend = FALSE) +
1487240755681:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240755682:labs(x = 'Segment',
1487240755682:y = label,
1487240755682:fill = 'Segment',
1487240755683:title = paste0(label, "s in different segments")
1487240755683:)
1487240755684:}
1487240755684:recom_history_w_visits %>%
1487240755685:calculateRateWithErrors(variable = 'num_visit') %>%
1487240755685:plotRatesBySegments(label = 'Web visit rate')
1487240763735:plotRatesBySegments <- function(rate_by_segments, label) {
1487240763735:rate_by_segments %>%
1487240763736:ggplot(aes(x = class, y = rate, fill = class)) +
1487240763736:geom_bar(stat = 'identity', position = 'dodge') +
1487240763737:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240763737:geom_label(aes(label = scales::percent(round(rate, 4))), show.legend = FALSE) +
1487240763737:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240763738:labs(x = 'Segment',
1487240763738:y = label,
1487240763738:fill = 'Segment',
1487240763739:title = paste0(label, "s in different segments")
1487240763739:)
1487240763739:}
1487240763741:recom_history_w_visits %>%
1487240763741:calculateRateWithErrors(variable = 'num_visit') %>%
1487240763742:plotRatesBySegments(label = 'Web visit rate')
1487240917740:plotRatesBySegments <- function(rate_by_segments, label) {
1487240917741:rate_by_segments %>%
1487240917742:ggplot(aes(x = class, y = rate, fill = class)) +
1487240917743:geom_bar(stat = 'identity', position = 'dodge') +
1487240917743:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240917744:geom_label(aes(label = scales::percent(round(rate, 4)))) +
1487240917745:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240917745:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487240917746:labs(x = 'Segment',
1487240917746:y = label,
1487240917746:title = paste0(label, "s in different segments")
1487240917747:) %>%
1487240917747:theme_bw() +
1487240917748:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487240917750:}
1487240917752:recom_history_w_visits %>%
1487240917752:calculateRateWithErrors(variable = 'num_visit') %>%
1487240917752:plotRatesBySegments(label = 'Web visit rate')
1487240937374:plotRatesBySegments <- function(rate_by_segments, label) {
1487240937374:rate_by_segments %>%
1487240937375:ggplot(aes(x = class, y = rate, fill = class)) +
1487240937376:geom_bar(stat = 'identity', position = 'dodge') +
1487240937376:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487240937377:geom_label(aes(label = scales::percent(round(rate, 4)))) +
1487240937377:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487240937377:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487240937378:labs(x = 'Segment',
1487240937378:y = label,
1487240937379:title = paste0(label, "s in different segments")
1487240937379:) +
1487240937379:theme_bw() +
1487240937380:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487240937380:}
1487240937381:recom_history_w_visits %>%
1487240937382:calculateRateWithErrors(variable = 'num_visit') %>%
1487240937383:plotRatesBySegments(label = 'Web visit rate')
1487241350657:dir.create('report')
1487241357775:dir.create('report', showWarnings = FALSE)
1487241407402:source("scripts/generate_web_effect_report.R")
1487241428350:source("scripts/generate_web_effect_report.R")
1487241452519:source("scripts/generate_web_effect_report.R")
1487241460327:source("scripts/generate_web_effect_report.R")
1487241475151:source("scripts/generate_web_effect_report.R")
1487241516625:source("scripts/generate_web_effect_report.R")
1487241623850:source("scripts/generate_web_effect_report.R")
1487241785270:source("scripts/generate_web_effect_report.R")
1487241834980:source("scripts/generate_web_effect_report.R")
1487241933593:source("scripts/generate_web_effect_report.R")
1487242021171:source("scripts/generate_web_effect_report.R")
1487242349348:source("scripts/generate_web_effect_report.R")
1487242358003:source("scripts/generate_web_effect_report.R")
1487247830143:plotRatesBySegments <- function(rate_by_segments, label) {
1487247830144:ggplot(rate_by_segments, aes(x = class, y = rate, fill = class)) +
1487247830145:geom_bar(stat = 'identity', position = 'dodge') +
1487247830145:geom_linerange(aes(ymin = rate_lower, ymax = rate_higher)) +
1487247830146:geom_label(aes(label = scales::percent(round(rate, 4))), family = 'Canaro Medium') +
1487247830146:scale_y_continuous(expand = c(0.1, 0), labels = scales::percent) +
1487247830147:scale_fill_manual(values = c("#32D17E", "#D9E506", "#6984D1" )) +
1487247830148:labs(x = 'Segment',
1487247830148:y = label,
1487247830149:title = paste0(label, "s in different segments")
1487247830149:) +
1487247830150:theme_bw() +
1487247830150:theme(legend.position = 'none', text = element_text(family = 'Canaro Medium'))
1487247830151:}
1487247830152:recom_history_w_visits %>%
1487247830153:calculateRateWithErrors(variable = 'num_visit') %>%
1487247830154:plotRatesBySegments(label = 'Web visit rate')
1487247900793:source("scripts/generate_web_effect_report.R")
1487248032088:dir(file.path('data', 'predict_data', 'evolution_slimming'))
1487248045127:dir(file.path('data', 'predict_data', customer_settings$evolution_slimming$merchant_id))
1487248051525:dir(file.path('data', 'predict_data', customer_settings$evolution_slimming$merchant_id))
1487248062279:dir(file.path('data', 'predict_data'), pattern = customer_settings$evolution_slimming$merchant_id))
1487248065472:dir(file.path('data', 'predict_data'), pattern = customer_settings$evolution_slimming$merchant_id)
1487248074120:dir(file.path('data', 'predict_data'), pattern = 'evolution_slimming')
1487248187095:source("scripts/generate_web_effect_report.R")
1487248223689:source("scripts/generate_web_effect_report.R")
1487248361260:source("scripts/generate_web_effect_report.R")
1487248468430:source("scripts/generate_web_effect_report.R")
1487248500398:plotRatesByCampaigns <- function(rate_by_campaigns, label) {
1487248500399:ggplot(rate_by_campaigns, aes(x = campaign_start_date, y = visit_rate)) +
1487248500400:geom_line(aes(color = incentive_group), size = 2) +
1487248500401:scale_y_continuous(label = scales::percent) +
1487248500401:scale_color_manual(values = c("#32D17E", "#0C2838")) +
1487248500401:labs(
1487248500402:title = paste0(label, "s in different campaigns"),
1487248500402:x = 'Campaign date',
1487248500402:y = label,
1487248500403:Color = 'Got incentive'
1487248500403:) +
1487248500404:theme_bw() +
1487248500404:theme(legend.position = 'top', text = element_text(family = 'Canaro Medium'))
1487248500405:}
1487248500406:recom_history_w_visits %>%
1487248500406:.[, .(visit_rate = mean(!is.na(num_visit))), by = .(campaign_start_date, incentive_group)] %>%
1487248500406:plotRatesByCampaigns(label = 'Web visit rate')
1487248511630:plotRatesByCampaigns <- function(rate_by_campaigns, label) {
1487248511630:ggplot(rate_by_campaigns, aes(x = campaign_start_date, y = visit_rate)) +
1487248511631:geom_line(aes(color = incentive_group), size = 2) +
1487248511632:scale_y_continuous(label = scales::percent) +
1487248511633:scale_color_manual(values = c("#32D17E", "#0C2838")) +
1487248511634:labs(
1487248511634:title = paste0(label, "s in different campaigns"),
1487248511634:x = 'Campaign date',
1487248511635:y = label,
1487248511635:color = 'Got incentive'
1487248511635:) +
1487248511636:theme_bw() +
1487248511636:theme(legend.position = 'top', text = element_text(family = 'Canaro Medium'))
1487248511636:}
1487248511637:recom_history_w_visits %>%
1487248511638:.[, .(visit_rate = mean(!is.na(num_visit))), by = .(campaign_start_date, incentive_group)] %>%
1487248511639:plotRatesByCampaigns(label = 'Web visit rate')
1487248517251:source("scripts/generate_web_effect_report.R")
1487248760940:selected_customer <- 'globalshopdirect'
1487248768183:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487248778741:recom_history
1487248784716:recom_history[, unique(campaign_start_date)]
1487248953837:selected_customer <- 'japancentre'
1487248956885:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487248961158:recom_history[, unique(campaign_start_date)]
1487248968244:recom_history[, unique(campaign_start_date)] %>% sort()
1487250729760:source("scripts/generate_web_effect_report.R")
1487250757175:getwd()
1487250905774:rm(list = ls())
1487250907742:source("scripts/generate_web_effect_report.R")
1487253442816:selected_customer <- 'globalshopdirect'
1487253446210:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487253492424:recom_history[, unique(campaign_start_date)]
1487326800027:packrat::restore(prompt = FALSE)
1487327119675:selected_customer
1487327124626:selected_customer <- 'evolution_slimming'
1487327145857:source('global.R')
1487327147299:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487327151942:recom_history[numericValue == 99, numericValue := 1]
1487327152078:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1487327157503:recom_history %>%
1487327157503:.[, .N, by = .(campaign_id, class)] %>%
1487327157504:dcast(campaign_id ~ class)
1487327157590:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487327158112:recom_history %>%
1487327158112:.[, .N, by = .(campaign_id, numericValue)] %>%
1487327158113:dcast(campaign_id ~ numericValue)
1487327158204:`
1487327160745:``
1487327162107:`
1487327174411:recom_history %>%
1487327174412:calculateRateWithErrors(variable = 'did_open') %>%
1487327174413:plotRatesBySegments(label = 'Open rate')
1487327322499:recom_history
1487327739510:recom_history[, quantile(buying_prob)]
1487327745758:recom_history[, quantile(buying_prob, na.rm = TRUE)]
1487327753302:recom_history[, quantile(buying_prob, na.rm = TRUE), by = campaign_id]
1487327953546:recom_history[order(buying_prob)] %>%
1487327953547:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1487327972106:n_bins <- 4
1487327972107:recom_history[order(buying_prob)] %>%
1487327972108:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1487327985704:recom_history %>%
1487327985705:.[, .N, by = .(campaign_id, class)] %>%
1487327985706:dcast(campaign_id ~ class)
1487327985800:recom_history[, table(class, numericValue, useNA = 'ifany')]
1487327986335:recom_history %>%
1487327986336:.[, .N, by = .(campaign_id, numericValue)] %>%
1487327986337:dcast(campaign_id ~ numericValue)
1487328036994:recom_history %>%
1487328036994:.[, .N, by = prob_group, useNA = 'ifany']
1487328047676:recom_history %>%
1487328047676:.[, .N, by = prob_group]
1487328066916:recom_history
1487328075261:recom_history[order(buying_prob)] %>%
1487328075262:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1487328080217:recom_history
1487328123292:recom_history[order(buying_prob)] %>%
1487328123294:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date] %>% .[]
1487328128230:recom_history
1487328220227:recom_history <- recom_history[order(buying_prob)] %>%
1487328220228:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1487328245583:recom_history[, .N, by = prob_group]
1487328253207:recom_history %>%
1487328253208:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1487328253209:plotRatesByCampaigns(label = 'Open rate')
1487328256709:recom_history %>%
1487328256709:calculateRateWithErrors(variable = 'did_open') %>%
1487328256710:plotRatesBySegments(label = 'Open rate')
1487328275691:recom_history %>%
1487328275691:calculateRateWithErrors(variable = 'did_open', by_prob_group = TRUE) %>%
1487328275692:plotRatesBySegments(label = 'Open rate', by_prob_group = TRUE)
1487328280564:source('global.R')
1487328288154:recom_history %>%
1487328288155:calculateRateWithErrors(variable = 'did_open', by_prob_group = TRUE) %>%
1487328288156:plotRatesBySegments(label = 'Open rate', by_prob_group = TRUE)
1487328496277:?facet_wrap
1487328509644:source('global.R')
1487328524032:recom_history %>%
1487328524032:calculateRateWithErrors(variable = 'did_open') %>%
1487328524033:plotRatesBySegments(label = 'Open rate')
1487328528251:recom_history %>%
1487328528252:calculateRateWithErrors(variable = 'did_open', by_prob_group = TRUE) %>%
1487328528253:plotRatesBySegments(label = 'Open rate', by_prob_group = TRUE)
1487328648238:source("scripts/generate_engagement_effect_report.R")
1487685480047:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487685481496:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1487685481629:selected_customer <- params$customer
1487685999725:knitr::opts_knit$set(root.dir = normalizePath(".."))
1487685999990:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1487686000265:selected_customer <- params$customer
1487686001386:# Load data
1487686001627:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1487686062677:lapply(purchases, names)
1487686074223:lapply(purchases, head)
1487926800102:source('global.R')
1487926805631:maxd <- 0.4
1487926815910:dt <- data.table(e = seq(0, 3, by = 0.01)) %>%
1487926816361:.[, `:=`(d40 = 0.4, d30 = .3, d20 = .2, d15 = .15, d10 = .1, d05 = .05)] %>%
1487926816684:melt(., id.vars = 'e') %>%
1487926816941:setnames(., 'value', 'd') %>%
1487926817434:.[, value := effectScalerByDiscount(d, maxd)*e - (1 + effectScalerByDiscount(d, maxd)*e) * d]
1487926818137:dt %>%
1487926818504:ggplot() +
1487926818843:geom_line(aes(x = e, y = value, col = variable)) +
1487926819184:geom_hline(yintercept = 0)
1487926836983:discounts <- c(0.1, 0.2, 0.3, 0.4)
1487926838739:precision_effect <- 3
1487926839212:precision_lambda <- 2
1487926839645:effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487926839970:lambda <- round(seq(0, 1, by = 10^(-precision_lambda)), precision_lambda)
1487926842333:grid <- as.data.table(
1487926843025:expand.grid(
1487926843483:effect = effect,
1487926844525:lambda = lambda,
1487926844951:discount = discounts
1487926845301:)
1487926845638:)
1487926846456:grid %>%
1487926846856:.[, incr_profit := lambda * effectScalerByDiscount(discount, max(discounts)) * effect - (1-lambda) * discount * (1 + effectScalerByDiscount(discount, max(discounts)) * effect)]
1487926849923:sim_dt <- grid %>%
1487926850271:.[, max_incr_profit := max(incr_profit), by = .(effect, lambda)] %>%
1487926850590:.[max_incr_profit == incr_profit] %>%
1487926850923:.[, selected_discount := ifelse(incr_profit > 0, discount, 0.00)] %>%
1487926851308:unique(., by = c('lambda', 'effect'))
1487926993327:num_effect_quantiles <- 50
1487926994518:effect_levels <- round(seq(3/num_effect_quantiles,3, length.out = num_effect_quantiles), precision_effect)
1487926994968:effect_levels_for_plotting <- round(seq(3/10,3, length.out = 10), precision_effect)
1487926996324:num_diff_discounts_per_lambda <- sim_dt %>%
1487926996703:.[effect %in% effect_levels] %>%
1487926997020:.[, .(num_diff_discount = uniqueN(selected_discount),
1487926997317:num_zero_discount = sum(selected_discount == 0.0),
1487926997668:num_max_discount = sum(selected_discount == max(discounts))),
1487926998077:by = .(lambda)]
1487927006304:lambda_states <- calculateLambdas(discounts, num_quantiles = 50, effect_scaler = 3, effect_offset = 0, transform = F)
1487927009709:sim_dt %>%
1487927010108:ggplot(aes(x = effect, y = lambda)) +
1487927010396:geom_tile(aes(fill = factor(selected_discount))) +
1487927010674:geom_vline(xintercept = effect_levels, linetype = 'dotted') +
1487927011463:geom_hline(yintercept = lambda_states, linetype = 'dashed')
1487927019797:sim_dt %>%
1487927019798:.[effect %in% effect_levels_for_plotting] %>%
1487927019798:ggplot +
1487927019799:geom_line(aes(x = lambda, y = selected_discount)) +
1487927019799:facet_grid(effect~.)
1487927020788:num_diff_discounts_per_lambda %>%
1487927020788:ggplot +
1487927020789:geom_line(aes(x = lambda, y = num_diff_discount)) +
1487927020790:geom_vline(xintercept = lambda_states, linetype = 'dotted')
1487927021242:sim_dt %>%
1487927021242:.[effect %in% effect_levels] %>%
1487927021243:.[lambda %in% round(lambda_states, precision_lambda)] %>%
1487927021244:.[, .(N = .N/num_effect_quantiles), by = .(lambda, selected_discount)] %>%
1487927021244:.[order(lambda, selected_discount)] %>%
1487927021244:ggplot() +
1487927021244:geom_bar(aes(x = factor(selected_discount, levels = c(0, discounts)), y = N), stat = 'identity') +
1487927021245:scale_x_discrete(drop=FALSE) +
1487927021245:facet_wrap(~lambda) +
1487927021245:theme(axis.text.x = element_text(angle = 75, hjust = 1))
1487927249104:lambda_states
1487927275093:lambda_states <- calculateLambdas(discounts, num_quantiles = 50, effect_scaler = 3, effect_offset = 0, transform = T)
1487927278716:lambda_states
1487951532859:discounts <- c(0.1, 0.2, 0.3, 0.4)
1487951532861:precision_effect <- 5
1487951532861:precision_lambda <- 3
1487951532862:effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487951532885:lambda <- round(seq(0, 1, by = 10^(-precision_lambda)), precision_lambda)
1487951532886:grid <- as.data.table(
1487951532886:expand.grid(
1487951532886:effect = effect,
1487951532887:lambda = lambda,
1487951532887:discount = discounts
1487951532887:)
1487951532888:)
1487951832371:discounts <- c(0.1, 0.2, 0.3, 0.4)
1487951832373:precision_effect <- 4
1487951832373:precision_lambda <- 3
1487951832374:effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487951832376:lambda <- round(seq(0, 1, by = 10^(-precision_lambda)), precision_lambda)
1487951836555:grid <- as.data.table(
1487951836556:expand.grid(
1487951836557:effect = effect,
1487951836557:lambda = lambda,
1487951836558:discount = discounts
1487951836558:)
1487951836559:)
1487951839988:source('global.R')
1487951842243:source('global.R')
1487951860005:install.packages("purrr")
1487951869933:source('global.R')
1487951875109:discounts <- c(0.1, 0.2, 0.3, 0.4)
1487951876657:precision_effect <- 4
1487951877081:precision_lambda <- 3
1487951877503:effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487951877920:lambda <- round(seq(0, 1, by = 10^(-precision_lambda)), precision_lambda)
1487951880558:grid <- as.data.table(
1487951880998:expand.grid(
1487951881412:effect = effect,
1487951881818:lambda = lambda,
1487951882243:discount = discounts
1487951882638:)
1487951897636:)
1487951931486:precision_effect <- 3
1487951931487:precision_lambda <- 2
1487951931488:effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487951931489:lambda <- round(seq(0, 1, by = 10^(-precision_lambda)), precision_lambda)
1487951931491:grid <- as.data.table(
1487951931492:expand.grid(
1487951931493:effect = effect,
1487951931494:lambda = lambda,
1487951931494:discount = discounts
1487951931494:)
1487951931495:)
1487951973934:precision_effect <- 5
1487951974335:precision_lambda <- 4
1487951975295:lambda <- 0.5
1487951976953:effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487951978120:grid <- as.data.table(
1487951978423:expand.grid(
1487951978678:effect = effect,
1487951978935:lambda = lambda,
1487951979258:discount = discounts
1487951979543:)
1487951979839:)
1487951986279:grid %>%
1487951986280:.[, incr_profit := lambda * effectScalerByDiscount(discount, max(discounts)) * effect - (1-lambda) * discount * (1 + effectScalerByDiscount(discount, max(discounts)) * effect)]
1487951986292:sim_dt <- grid %>%
1487951986293:.[, max_incr_profit := max(incr_profit), by = .(effect, lambda)] %>%
1487951986294:.[max_incr_profit == incr_profit] %>%
1487951986294:.[, selected_discount := ifelse(incr_profit > 0, discount, 0.00)] %>%
1487951986295:unique(., by = c('lambda', 'effect'))
1487951986422:num_effect_quantiles <- 50
1487951986423:effect_levels <- round(seq(3/num_effect_quantiles,3, length.out = num_effect_quantiles), precision_effect)
1487951986423:effect_levels_for_plotting <- round(seq(3/10,3, length.out = 10), precision_effect)
1487951986424:num_diff_discounts_per_lambda <- sim_dt %>%
1487951986424:.[effect %in% effect_levels] %>%
1487951986425:.[, .(num_diff_discount = uniqueN(selected_discount),
1487951986425:num_zero_discount = sum(selected_discount == 0.0),
1487951986425:num_max_discount = sum(selected_discount == max(discounts))),
1487951986426:by = .(lambda)]
1487951993672:source('global.R')
1487952001723:source('project_values.R')
1487952003224:sapply(list.files('src', full.names = TRUE, pattern = '\\.R$'), source)
1487952016624:grid <- as.data.table(
1487952016625:expand.grid(
1487952016625:effect = effect,
1487952016626:lambda = lambda,
1487952016626:discount = discounts
1487952016626:)
1487952016627:)
1487952023081:grid %>%
1487952023506:.[, incr_profit := lambda * effectScalerByDiscount(discount, max(discounts)) * effect - (1-lambda) * discount * (1 + effectScalerByDiscount(discount, max(discounts)) * effect)]
1487952056969:source('global.R')
1487952063851:source('project_values.R')
1487952065013:sapply(list.files('src', full.names = TRUE, pattern = '\\.R$'), source)
1487952086484:effectScalerByDiscount <- function(d, maxd = 0.3, discount_slope = 2) {
1487952086485:ifelse(d == 0, 0, 1 - abs(maxd-d)*discount_slope)
1487952086486:}
1487952093267:grid %>%
1487952093845:.[, incr_profit := lambda * effectScalerByDiscount(discount, max(discounts)) * effect - (1-lambda) * discount * (1 + effectScalerByDiscount(discount, max(discounts)) * effect)]
1487952095527:sim_dt <- grid %>%
1487952095957:.[, max_incr_profit := max(incr_profit), by = .(effect, lambda)] %>%
1487952096205:.[max_incr_profit == incr_profit] %>%
1487952096476:.[, selected_discount := ifelse(incr_profit > 0, discount, 0.00)] %>%
1487952098263:unique(., by = c('lambda', 'effect'))
1487952100485:num_effect_quantiles <- 50
1487952101942:effect_levels <- round(seq(3/num_effect_quantiles,3, length.out = num_effect_quantiles), precision_effect)
1487952102627:effect_levels_for_plotting <- round(seq(3/10,3, length.out = 10), precision_effect)
1487952103949:num_diff_discounts_per_lambda <- sim_dt %>%
1487952104364:.[effect %in% effect_levels] %>%
1487952104736:.[, .(num_diff_discount = uniqueN(selected_discount),
1487952105093:num_zero_discount = sum(selected_discount == 0.0),
1487952105469:num_max_discount = sum(selected_discount == max(discounts))),
1487952105822:by = .(lambda)]
1487952109719:lambda_states <- calculateLambdas(discounts, num_quantiles = 50, effect_scaler = 3, effect_offset = 0, transform = T)
1487952114865:calculateLambdas <- function(discounts, num_quantiles = 50, effect_scaler = 3.0, effect_offset = 0.0, transform = TRUE) {
1487952114866:precision_lambda <- 3
1487952114867:# effect <- round(seq(0, 3, by = 10^(-precision_effect)), precision_effect)
1487952114867:lambda_levels <- round(seq(0, 1, by = 10^(-precision_lambda)), precision_lambda)
1487952114868:effect_levels <- seq(
1487952114869:effect_scaler/num_quantiles + effect_offset,
1487952114869:effect_scaler + effect_offset,
1487952114870:length.out = num_quantiles
1487952114870:)
1487952114872:grid <- as.data.table(
1487952114874:expand.grid(
1487952114875:effect = effect_levels,
1487952114876:lambda = lambda_levels,
1487952114877:discount = discounts
1487952114879:)
1487952114879:)
1487952114881:grid %>%
1487952114881:.[, incr_profit := lambda * effectScalerByDiscount(discount, max(discounts)) * effect - (1-lambda) * discount * (1 + effectScalerByDiscount(discount, max(discounts)) * effect)]
1487952114883:sim_dt <- grid %>%
1487952114884:.[, max_incr_profit := max(incr_profit), by = .(effect, lambda)] %>%
1487952114884:.[max_incr_profit == incr_profit] %>%
1487952114885:.[, selected_discount := ifelse(incr_profit > 0, discount, 0.00)] %>%
1487952114886:unique(., by = c('lambda', 'effect'))
1487952114887:num_diff_discounts_per_lambda <- sim_dt %>%
1487952114888:.[effect %in% effect_levels] %>%
1487952114889:.[, .(num_diff_discount = uniqueN(selected_discount),
1487952114890:num_zero_discount = sum(selected_discount == 0.0),
1487952114891:num_max_discount = sum(selected_discount == max(discounts))),
1487952114892:by = .(lambda)]
1487952114894:lambdas <- c(
1487952114895:0.5,
1487952114896:num_diff_discounts_per_lambda[num_diff_discount == length(c(discounts)) & num_max_discount == 0 & lambda < 0.5, min(lambda)],
1487952114897:# num_diff_discounts_per_lambda[num_diff_discount == length(c(discounts)) & num_max_discount == 0 & lambda < 0.5, round(0.5 - (0.5-min(lambda))/2, precision_lambda)],
1487952114898:num_diff_discounts_per_lambda[num_diff_discount == length(c(discounts)) & num_max_discount == 0 & lambda < 0.5, max(lambda)],
1487952114900:num_diff_discounts_per_lambda[num_diff_discount == length(c(0, discounts)) & lambda > 0.5, round((max(lambda)-0.5)/4 + 0.5, precision_lambda)],
1487952114901:num_diff_discounts_per_lambda[num_diff_discount == length(c(0, discounts)) & lambda > 0.5, max(lambda)]
1487952114902:) %>% unique() %>% sort()
1487952114905:if (transform) {
1487952114906:lambdas <- 2*lambdas - 1
1487952114908:}
1487952114911:return(lambdas)
1487952114912:}
1487952119334:lambda_states <- calculateLambdas(discounts, num_quantiles = 50, effect_scaler = 3, effect_offset = 0, transform = T)
1487952126766:lambda_states
1487952182258:num_diff_discounts_per_lambda
1487952212398:sim_dt %>%
1487952212399:ggplot(aes(x = effect, y = lambda)) +
1487952212400:geom_tile(aes(fill = factor(selected_discount))) +
1487952212400:geom_vline(xintercept = effect_levels, linetype = 'dotted') +
1487952212400:geom_hline(yintercept = lambda_states, linetype = 'dashed')
1487952218277:library(ggplot2)
1487952225590:install.packages("ggplot2")
1487952251020:sim_dt %>%
1487952251021:ggplot(aes(x = effect, y = lambda)) +
1487952251022:geom_tile(aes(fill = factor(selected_discount))) +
1487952251022:geom_vline(xintercept = effect_levels, linetype = 'dotted') +
1487952251023:geom_hline(yintercept = lambda_states, linetype = 'dashed')
1487952257110:library(ggplot2)
1487952259051:sim_dt %>%
1487952259052:ggplot(aes(x = effect, y = lambda)) +
1487952259053:geom_tile(aes(fill = factor(selected_discount))) +
1487952259053:geom_vline(xintercept = effect_levels, linetype = 'dotted') +
1487952259054:geom_hline(yintercept = lambda_states, linetype = 'dashed')
1487952329326:sim_dt %>%
1487952329328:.[effect %in% effect_levels_for_plotting] %>%
1487952329328:ggplot +
1487952329329:geom_line(aes(x = lambda, y = selected_discount)) +
1487952329329:facet_grid(effect~.)
1488450979015:selected_customer <- "posterxxl_de"
1488451022453:knitr::opts_knit$set(root.dir = normalizePath(".."))
1488451022455:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1488451022457:selected_customer <- params$customer
1488451022466:headers <- list(
1488451022467:categories = c(
1488451022469:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1488451022471:),
1488451022472:product = c(
1488451022473:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1488451022475:)
1488451022476:)
1488451026188:types_to_read <- c('categories', 'viewed', 'added', 'purchased') %>%
1488451026189:setdiff(customer_settings[[selected_customer]]$predict_missing_fields)
1488451032010:source('global.R')
1488451041439:types_to_read <- c('categories', 'viewed', 'added', 'purchased') %>%
1488451041440:setdiff(customer_settings[[selected_customer]]$predict_missing_fields)
1488451043906:data_read <- sapply(
1488451043907:types_to_read,
1488451043909:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488451043910:simplify = FALSE
1488451043912:)
1488451063795:data_read
1488451090804:selected_customer
1488451098605:selected_customer <- 'posterxxl_de'
1488451102197:types_to_read <- c('categories', 'viewed', 'added', 'purchased') %>%
1488451102199:setdiff(customer_settings[[selected_customer]]$predict_missing_fields)
1488451107640:types_to_read
1488451116347:customer_settings[[selected_customer]]$predict_missing_fields
1488451121009:data_read <- sapply(
1488451121010:types_to_read,
1488451121011:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488451121013:simplify = FALSE
1488451121014:)
1488452266016:1/0
1488452283161:try(
1488452283162:data_read <- sapply(
1488452283163:types_to_read,
1488452283164:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488452283165:simplify = FALSE
1488452283166:)
1488452283167:)
1488452315076:log('a')
1488452317975:try(log('a'))
1488452329618:try(log('a'), silent = TRUE)
1488452342231:try(
1488452342232:data_read <- sapply(
1488452342233:types_to_read,
1488452342235:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488452342236:simplify = FALSE
1488452342240:)
1488452342242:)
1488452342247:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE) %>%
1488452342249:addContactId(selected_customer)
1488452434250:predict_data
1488452894061:rm(predict_data)
1488452896362:rm(data_read)
1488452908157:try(
1488452908157:data_read <- sapply(
1488452908158:types_to_read,
1488452908159:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488452908159:simplify = FALSE
1488452908159:)
1488452908160:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE) %>%
1488452908160:addContactId(selected_customer)
1488452908166:)
1488452915764:types_to_read <- c('categories', 'viewed', 'added', 'purchased') %>%
1488452915765:setdiff(customer_settings[[selected_customer]]$predict_missing_fields)
1488452915766:try(
1488452915767:data_read <- sapply(
1488452915767:types_to_read,
1488452915767:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488452915768:simplify = FALSE
1488452915769:)
1488452915770:predict_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE) %>%
1488452915771:addContactId(selected_customer)
1488452915777:)
1488452931675:try(
1488452931676:data_read <- sapply(
1488452931677:types_to_read,
1488452931677:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488452931677:simplify = FALSE
1488452931678:)
1488452931678:)
1488453044498:try(
1488453044499:predict_data <- sapply(
1488453044499:types_to_read,
1488453044500:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488453044500:simplify = FALSE
1488453044502:) %>%
1488453044503:rbindlist(lapply(., cleanData), fill = TRUE) %>%
1488453044503:addContactId(selected_customer)
1488453044504:)
1488453061321:exists(headers)
1488453067906:exists(x = 'headers')
1488453074978:exists('predict_data')
1488453200513:knitr::opts_knit$set(root.dir = normalizePath(".."))
1488453200515:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1488453200518:selected_customer <- params$customer
1488453202719:source('global.R')
1488453202869:# Load incentive history
1488453202870:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1488453209042:recom_history[numericValue == 99, numericValue := 1]
1488453209081:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1488453209994:n_bins <- 4
1488453209998:recom_history <- recom_history[order(buying_prob)] %>%
1488453210000:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1488453215197:recom_history %>%
1488453215201:.[, .N, by = .(campaign_id, campaign_start_date, class)] %>%
1488453215206:dcast(campaign_id + campaign_start_date ~ class)
1488453215362:recom_history[, table(class, numericValue, useNA = 'ifany')]
1488453216097:recom_history %>%
1488453216099:.[, .N, by = .(campaign_id, numericValue)] %>%
1488453216101:dcast(campaign_id ~ numericValue)
1488453216221:recom_history[, .N, by = .(prob_group, numericValue)] %>%
1488453216223:dcast(prob_group ~ numericValue)
1488453226273:recom_history %>%
1488453226274:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1488453226276:plotRatesByCampaigns(label = 'Open rate')
1488453226882:```
1488453232442:recom_history %>%
1488453232444:calculateRateWithErrors(variable = 'did_open', by_prob_group = TRUE) %>%
1488453232446:plotRatesBySegments(label = 'Open rate', by_prob_group = TRUE)
1488453238723:recom_history %>%
1488453238725:.[did_open == TRUE, .(rate = mean(did_click)), by = .(campaign_start_date, incentive_group)] %>%
1488453238726:plotRatesByCampaigns(label = 'Click-through rate')
1488453239114:```
1488453244354:recom_history %>%
1488453244355:.[did_open == TRUE] %>%
1488453244356:calculateRateWithErrors(variable = 'did_click', by_prob_group = TRUE) %>%
1488453244358:plotRatesBySegments(label = 'Click-through rate', by_prob_group = TRUE)
1488453248590:# Load predict data
1488453248592:headers <- list(
1488453248594:categories = c(
1488453248595:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'category'
1488453248597:),
1488453248600:product = c(
1488453248603:'merchant_id', 'email_hash', 'timestamp', 'session_id', 'product_id', 'product_price', 'product_quantity'
1488453248605:)
1488453248607:)
1488453248615:types_to_read <- c('categories', 'viewed', 'added', 'purchased') %>%
1488453248617:setdiff(customer_settings[[selected_customer]]$predict_missing_fields)
1488453248623:try(
1488453248624:predict_data <- sapply(
1488453248627:types_to_read,
1488453248629:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488453248633:simplify = FALSE
1488453248636:) %>%
1488453248638:rbindlist(lapply(., cleanData), fill = TRUE) %>%
1488453248640:addContactId(selected_customer)
1488453248645:)
1488453272377:predict_data <- sapply(
1488453272377:types_to_read,
1488453272378:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488453272379:simplify = FALSE
1488453272379:)
1488453276249:predict_data
1488453292689:sapply(
1488453292689:types_to_read,
1488453292690:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488453292690:simplify = FALSE
1488453292691:) %>%
1488453292691:rbindlist(lapply(., cleanData), fill = TRUE)
1488455710168:predict_data <- sapply(
1488455710172:types_to_read,
1488455710172:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488455710172:simplify = FALSE
1488455710173:)
1488455715127:class(predict_data)
1488455723421:debug(rbindlist)
1488455729000:predict_data <- sapply(
1488455729006:types_to_read,
1488455729006:function(type) readInPredictData(selected_customer, type, list_of_headers = headers),
1488455729006:simplify = FALSE
1488455729007:) %>%
1488455729007:rbindlist(lapply(., cleanData), fill = TRUE)
1488455741785:Q]
1488456332734:predict_setup <- yaml.load_file('predict_setup.yml')
1488456352320:predict_data_setup <- yaml.load_file('predict_data_setup.yml')
1488456598880:predict_data_setup <- yaml.load_file('predict_data_setup.yml')
1488456785416:predict_data_setup$types['categories']
1488456791394:predict_data_setup$types[['categories']]
1488456805027:headers[[predict_data_setup$types[['categories']]]]
1488457075529:generatePredictHeader <- function(event) {
1488457075530:if (!exists.(predict_data_setup)) {
1488457075530:stop('Predict data setup yml is missing.')
1488457075531:}
1488457075531:type <- predict_data_setup$types[[event]]
1488457075531:gsub(type, event, headers[[predict_data_setup$types[[type]]]])
1488457075531:}
1488457083607:generatePredictHeader('categories')
1488457094226:generatePredictHeader <- function(event) {
1488457094226:if (!exists(predict_data_setup)) {
1488457094227:stop('Predict data setup yml is missing.')
1488457094228:}
1488457094228:type <- predict_data_setup$types[[event]]
1488457094229:gsub(type, event, headers[[predict_data_setup$types[[type]]]])
1488457094229:}
1488457095577:generatePredictHeader('categories')
1488457103825:generatePredictHeader <- function(event) {
1488457103826:if (!exists('predict_data_setup')) {
1488457103827:stop('Predict data setup yml is missing.')
1488457103827:}
1488457103828:type <- predict_data_setup$types[[event]]
1488457103828:gsub(type, event, headers[[predict_data_setup$types[[type]]]])
1488457103828:}
1488457106063:generatePredictHeader('categories')
1488457116106:generatePredictHeader('added')
1488457163258:predict_data_setup$types
1488457242140:predict_data_setup$types
1488457278864:lapply(predict_data_setup$types, function(x) 'added' %in% x)
1488457300920:names(predict_data_setup$types)[lapply(predict_data_setup$types, function(x) 'added' %in% x)]
1488457312112:names(predict_data_setup$types)
1488457323600:names(predict_data_setup$types)[c(FALSE, TRUE)]
1488457378588:type <- sapply(predict_data_setup$types, function(x) event %in% x)
1488457383617:generatePredictHeader <- function(event) {
1488457383618:if (!exists('predict_data_setup')) {
1488457383619:stop('Predict data setup yml is missing.')
1488457383619:}
1488457383619:type <- sapply(predict_data_setup$types, function(x) event %in% x)
1488457383620:gsub(type, event, headers[[predict_data_setup$types[[type]]]])
1488457383620:}
1488457389571:generatePredictHeader('categories')
1488457398497:event <- 'added'
1488457401015:type <- sapply(predict_data_setup$types, function(x) event %in% x)
1488457404028:type
1488457415906:predict_data_setup$types[type]
1488457451559:type
1488457454013:which(type)
1488457464261:which(type) %>% names()
1488457554609:type <- sapply(predict_data_setup$types, function(x) ifelse(event %in% x, names(x), NULL)
1488457557159:)
1488457558557:type
1488457594088:generatePredictHeader <- function(event) {
1488457594089:if (!exists('predict_data_setup')) {
1488457594093:stop('Predict data setup yml is missing.')
1488457594094:}
1488457594094:type <- sapply(predict_data_setup$types, function(x) event %in% x) %>%
1488457594095:which(.) %>% names()
1488457594096:gsub(type, event, headers[[predict_data_setup$types[[type]]]])
1488457594097:}
1488457601133:generatePredictHeader('categories')
1488457605480:generatePredictHeader('added')
1488457656460:generatePredictHeader <- function(event) {
1488457656461:if (!exists('predict_data_setup')) {
1488457656462:stop('Predict data setup yml is missing.')
1488457656462:}
1488457656462:type <- sapply(predict_data_setup$types, function(x) event %in% x) %>%
1488457656463:which(.) %>% names()
1488457656464:gsub(type, event, predict_data_setup$headers[[type]])
1488457656465:}
1488457658416:generatePredictHeader('added')
1488457662936:generatePredictHeader('categories')
1488457667795:generatePredictHeader('purchased')
1488457760352:getWebData <- function(customer, events_to_read = c('categories', 'viewed', 'added', 'purchased')) {
1488457762197:getWebData <- function(customer, events_to_read = c('categories', 'viewed', 'added', 'purchased')) {
1488457766699:getWebData <- function(customer, events_to_read = c('categories', 'viewed', 'added', 'purchased')) {
1488457766699:sapply(
1488457766700:events_to_read,
1488457766700:function(event) readInPredictData(customer, event),
1488457766701:simplify = FALSE
1488457766701:)
1488457766701:}
1488457769447:}
1488457771403:}
1488457773698:getWebData <- function(customer, events_to_read = c('categories', 'viewed', 'added', 'purchased')) {
1488457773699:sapply(
1488457773700:events_to_read,
1488457773700:function(event) readInPredictData(customer, event),
1488457773700:simplify = FALSE
1488457773701:)
1488457773701:}
1488457791291:getWebData('evolution_slimming')
1488457800999:generatePredictHeader <- function(event) {
1488457800999:if (!exists('predict_data_setup')) {
1488457801000:stop('Predict data setup yml is missing.')
1488457801001:}
1488457801001:type <- sapply(predict_data_setup$types, function(x) event %in% x) %>%
1488457801002:which(.) %>% names()
1488457801002:gsub(type, event, predict_data_setup$headers[[type]])
1488457801003:}
1488457805463:readInPredictData <- function(customer, event, predict_data_folder = 'predict_data') {
1488457805464:if (!file.exists(file.path('data', predict_data_folder))) {
1488457805465:stop(
1488457805465:'Predict data folder does not exist. Now the data is only available
1488457805465:in text files, not in any db to query.'
1488457805466:)
1488457805466:}
1488457805466:if (!event %in% c('categories', 'viewed', 'added', 'purchased')) {
1488457805467:stop(
1488457805467:'The parameter event should be one of categories, viewed, added, purchased.'
1488457805467:)
1488457805468:}
1488457805468:if (!exists('customer_settings')) {
1488457805469:stop(
1488457805469:'Do not know how to translate customer name to merchant id.
1488457805469:Customer settings are missing.'
1488457805470:)
1488457805470:}
1488457805471:merchant_id <- customer_settings[[customer]]$merchant_id
1488457805471:predict_files <- dir(
1488457805472:file.path('data', predict_data_folder),
1488457805473:pattern = paste0(merchant_id, '.*', event),
1488457805476:full.names = TRUE
1488457805476:)
1488457805477:if (length(predict_files) == 0) {
1488457805478:stop(paste('No predict files found for customer', customer))
1488457805478:} else {
1488457805479:column_names <- generatePredictHeader(event)
1488457805480:rbindlist(lapply(
1488457805481:predict_files,
1488457805482:function(file) {
1488457805482:fread(
1488457805483:file,
1488457805484:col.names = column_names, sep = '\t'
1488457805485:)
1488457805485:}
1488457805486:))
1488457805487:}
1488457805489:}
1488457809460:getWebData('evolution_slimming')
1488457849281:undebug(rbindlist)
1488457851152:getWebData('evolution_slimming')
1488457860278:cucc <- getWebData('evolution_slimming')
1488457861592:cucc
1488457863810:str(cucc)
1488457893572:getWebData <- function(customer, events_to_read = c('categories', 'viewed', 'added', 'purchased')) {
1488457893573:sapply(
1488457893573:events_to_read,
1488457893574:function(event) readInPredictData(customer, event) %>% cleanData(),
1488457893574:simplify = FALSE
1488457893575:)
1488457893576:}
1488457896182:cucc <- getWebData('evolution_slimming')
1488457897938:cucc
1488457899930:str(cucc)
1488457913093:rbindlist(cucc, fill = TRUE)
1488457918914:rbindlist(cucc)
1488457949078:getWebData <- function(customer, events_to_read = c('categories', 'viewed', 'added', 'purchased')) {
1488457949079:sapply(
1488457949080:events_to_read,
1488457949080:function(event) readInPredictData(customer, event) %>% cleanData(),
1488457949080:simplify = FALSE
1488457949081:) %>%
1488457949081:rbindlist(fill = TRUE) %>%
1488457949082:addContactId(customer)
1488457949082:}
1488457952194:cucc <- getWebData('evolution_slimming')
1488457956698:cucc
1488457966655:cucc <- getWebData('posterxxl_de')
1488466557520:recom_history <- getRecomHistory('posterxxl_de')
1488466560563:recom_history
1488466563347:recom_history
1488466585788:load('data/enriched_recom_history_data_posterxxl_de.RData')
1488466592475:rm(cucc)
1488466610900:head(purchases$hds)
1488466621629:summary(purchases$hds)
1488467389743:summary(purchases$si)
1488530704476:packrat::restore(prompt = FALSE)
1488530717473:install.packages('git2r')
1488530791456:packrat::restore(prompt = FALSE)
1488531259348:library(shiny); source('app.R')
1488531307185:install.packages('plotly')
1488531321150:install.packages('ggplot2')
1488531331956:source('app.R')
1488531342311:install.packages('Rcpp')
1488531367583:source('app.R')
1488531506331:library(shiny); source('app.R')
1488531975323:getGroupData(input$program) %>%
1488531975324:mergeRelevantPurchases_() %>%
1488531975325:addConversionRate_()
1488531991543:cucc <- getGroupData('Cold_leads') %>%
1488531991544:mergeRelevantPurchases_() %>%
1488531991545:addConversionRate_()
1488532021975:cucc
1488532635516:source('app.R')
1488533680263:cucc
1488540428428:setwd("~/homeworks/Biro")
1488540430210:list.files()
1488540431820:library(data.table)
1488540432957:library(openxlsx)
1488540434192:library(rpart)
1488540434827:library(rpart.plot)
1488540444821:install.packages('rpart.plot')
1488540452361:library(ROCR)
1488540453484:library(ggplot2)
1488540454451:library(Hmisc)
1488540468161:install.packages('Hmisc')
1488540473685:library(Hmisc)
1488540475304:library(lubridate)
1488540476330:library(caret)
1488540477476:library(xgboost)
1488540486791:install.packages('xgboost')
1488540492781:plot_roc <- function(model,train,valid, target)
1488540492781:{
1488540492782:(pred_train <- predict(model,newdata = train,type = "prob"))
1488540492783:train_pred_obj <- prediction(predictions = pred_train[,"1"],
1488540492783:labels = as.factor(train$amt13))
1488540492783:train_perf <- performance(prediction.obj = train_pred_obj,
1488540492784:measure ="rch" )
1488540492784:train_auc <- performance(prediction.obj = train_pred_obj,
1488540492784:measure ="auc" )
1488540492785:(pred_valid <- predict(model,newdata = valid,type = "prob"))
1488540492786:valid_pred_obj <- prediction(predictions = pred_valid[,"1"],
1488540492786:labels = as.factor(valid$amt13))
1488540492787:valid_perf <- performance(prediction.obj = valid_pred_obj,
1488540492787:measure ="rch" )
1488540492788:valid_auc <- performance(prediction.obj = valid_pred_obj,
1488540492789:measure ="auc" )
1488540492791:plot(train_perf,
1488540492792:main="ROC",
1488540492794:col="blue",
1488540492795:lwd=2,
1488540492796:xlab="FPR",
1488540492798:ylab="TPR")
1488540492799:lines(x = c(0:1),y=c(0:1),col="red",lty=3,lwd=4)
1488540492800:lines(x = valid_perf@x.values[[1]],
1488540492801:y = valid_perf@y.values[[1]],
1488540492801:col="green",
1488540492802:lwd=4)
1488540492802:legend(x = 0.6,
1488540492802:y=0.5,
1488540492803:legend = c(paste("Train_AUC: ",round(train_auc@y.values[[1]],2),sep = ""),
1488540492803:paste("Valid_AUC: ",round(valid_auc@y.values[[1]],2),sep = "")),
1488540492804:lty=c(1,1),
1488540492805:col=c("blue",'green'))
1488540492806:}
1488540494712:dt <- fread(input = "training.csv", sep = ",")
1488540584618:dt <- fread(input = "training.csv", sep = ",")
1488540586475:dt$purchase_date <- as.Date(dt$purchase_date, format="%Y-%m-%d")
1488540610306:dt$purchase_year <- year(dt[,purchase_date])
1488540611306:dt_save <- copy(dt)
1488540614343:colnames(dt)
1488540615678:colnames(dt)
1488540617122:colnames(dt_save)
1488540618266:dt1=unique(dt[, ':='(amt=sum(sales_amount)), by=.(order_id, contact_id, purchase_date, purchase_year)][,list(order_id, contact_id, purchase_date, purchase_year, amt)])
1488540619201:dt <- copy(dt_save)
1488540620330:dt2=unique(dt1[,':='(cnt=.N, amt=sum(amt)), by=.(contact_id, purchase_year)][, list(contact_id, purchase_year, cnt, amt)][order(c(contact_id, purchase_year), decreasing=TRUE),])
1488540621681:dt21=unique(dt1[,':='(cnt=.N), by=.(contact_id)][, list(contact_id, cnt)][order(c(contact_id), decreasing=FALSE),])
1488540623473:dt_2012 <- dt2[purchase_year==2012,,]
1488540624507:setnames(dt_2012, "cnt", "cnt12")
1488540627250:setnames(dt_2012, "amt", "amt12")
1488540628075:dt_2013 <- dt2[purchase_year==2013,,]
1488540671794:setnames(dt_2013, "cnt", "cnt13")
1488540672551:setnames(dt_2013, "amt", "amt13")
1488540675428:setkey(dt_2012, contact_id)
1488540676218:setkey(dt_2013, contact_id)
1488540677037:dt_join <- merge(dt_2012, dt_2013, all.x=TRUE)[,c('contact_id','cnt12','amt12','cnt13','amt13')]
1488540679734:dt_join[!is.na(cnt13),.N,] #aminek van parja: 23626
1488540692353:dt_join[is.na(cnt13),.N,] #aminek nincs parja: 140327
1488540693269:dt_join[,cnt13:=replace(cnt13, is.na(cnt13), 0)]
1488540694351:dt_join[,amt13:=replace(amt13, is.na(amt13), 0)]
1488540695674:dt_train_entities <- copy(dt_join[,c('contact_id', 'amt13')])
1488540697231:dt_join[,pct:=amt13/amt12,]
1488540698944:dt_join_dist <- dt_join[pct>0,]
1488540719877:hist(dt_join_dist$pct)
1488540721271:dt_join_dist_rnd <- data.table(round(dt_join_dist$pct, digits=1))
1488540721995:dt_join_dist_rnd_cnt <- dt_join_dist_rnd[,.N,by=V1][order(c(V1), decreasing=FALSE),]
1488540723054:write.csv(dt_join_dist_rnd_cnt, file = "dt_join_dist_rnd_cnt.csv")
1488540727298:dt_order<-unique(dt[, ':='(basket_d_cnt=.N ,basket_cnt=sum(quantity) , basket_amt=sum(sales_amount)), by=.(order_id, contact_id, purchase_date, purchase_year)][,list(order_id, contact_id, purchase_date, purchase_year, basket_d_cnt, basket_cnt, basket_amt)])
1488540728203:dt_contact<-unique(dt[, ':='(contact_d_cnt=.N ,contact_cnt=sum(quantity) , contact_amt=sum(sales_amount)), by=.(contact_id, purchase_year)][,list(contact_id, purchase_year, contact_d_cnt, contact_cnt, contact_amt)])
1488540728920:dt_contact_d_prod <- dt[, .N, keyby=list(contact_id, product_id, purchase_year)][, .N, by=.(contact_id, purchase_year)]
1488540729129:setnames(dt_contact_d_prod, "N", "contact_d_prod_cnt")
1488540729587:setkey(dt, "contact_id", "order_id","purchase_date" , "purchase_year", "product_id")
1488540730022:setkey(dt_contact_d_prod, "contact_id", "purchase_year")
1488540730390:dt <- merge(dt, dt_contact_d_prod, all.x = TRUE)
1488540730967:dt_product <- unique(dt[, ':='(prod_d_cnt=.N , prod_cnt=sum(quantity) , prod_amt=sum(sales_amount)), by=.(product_id, purchase_year)][,list(product_id, purchase_year, prod_d_cnt, prod_cnt, prod_amt)])
1488540731474:dt_features <- copy(dt)
1488540731970:setkey(dt_features, "contact_id", "purchase_year")
1488540732614:dt_features <- copy(unique(dt_features[, ':='(basket_d_max_cnt = max(basket_d_cnt), basket_d_min_cnt = min(basket_d_cnt), basket_max_cnt = max(basket_cnt), basket_min_cnt = min(basket_cnt), basket_max_amt = max(basket_amt), basket_min_amt = min(basket_amt)
1488540732615:, prod_d_cnt_mean=mean(as.numeric(prod_d_cnt)), prod_cnt_mean=mean(as.numeric(prod_cnt)), prod_amt_mean=mean(as.numeric(prod_amt))   )
1488540732616:, by=.(contact_id, purchase_year) ]
1488540732616:[,list(contact_id, purchase_year,
1488540732617:basket_d_max_cnt, basket_d_min_cnt, basket_max_cnt, basket_min_cnt, basket_max_amt, basket_min_amt,
1488540732617:contact_cnt, contact_d_cnt, contact_amt, contact_d_prod_cnt, prod_d_cnt_mean, prod_cnt_mean, prod_amt_mean)]
1488540732618:))
1488540734491:dt_h1_h2 <- copy(dt);
1488540734667:dt_h1_h2$half_year <-ifelse(as.numeric(month(dt$purchase_date)) <= 6, "H1", "H2")
1488540735789:dt_contact_h1 <- unique(dt_h1_h2[half_year=="H1"][, ':='(h1_contact_d_cnt=.N ,h1_contact_cnt=sum(quantity) , h1_contact_amt=sum(sales_amount)), by=.(contact_id, purchase_year)][,list(contact_id, purchase_year, h1_contact_d_cnt, h1_contact_cnt, h1_contact_amt)])
1488540736315:dt_contact_d_prod_h1 <- dt_h1_h2[half_year=="H1"][, .N, keyby=list(contact_id, product_id, purchase_year)][, .N, by=.(contact_id, purchase_year)]
1488540736923:setnames(dt_contact_d_prod_h1, "N", "h1_contact_d_prod_cnt")
1488540737525:dt_contact_h2 <- unique(dt_h1_h2[half_year=="H2"][, ':='(h2_contact_d_cnt=.N ,h2_contact_cnt=sum(quantity) , h2_contact_amt=sum(sales_amount)), by=.(contact_id, purchase_year)][,list(contact_id, purchase_year, h2_contact_d_cnt, h2_contact_cnt, h2_contact_amt)])
1488540738125:dt_contact_d_prod_h2 <- dt_h1_h2[half_year=="H2"][, .N, keyby=list(contact_id, product_id, purchase_year)][, .N, by=.(contact_id, purchase_year)]
1488540738596:setnames(dt_contact_d_prod_h2, "N", "h2_contact_d_prod_cnt")
1488540739174:setkey(dt_features, "contact_id","purchase_year")
1488540739545:setkey(dt_contact_h1, "contact_id","purchase_year")
1488540739870:setkey(dt_contact_h2, "contact_id","purchase_year")
1488540740103:setkey(dt_contact_d_prod_h1, "contact_id","purchase_year")
1488540740368:setkey(dt_contact_d_prod_h2, "contact_id","purchase_year")
1488540740658:dt_features <- merge(dt_features, dt_contact_h1, all.x=TRUE)
1488540740974:dt_features <- merge(dt_features, dt_contact_h2, all.x=TRUE)
1488540741369:dt_features <- merge(dt_features, dt_contact_d_prod_h1, all.x=TRUE)
1488540741744:dt_features <- merge(dt_features, dt_contact_d_prod_h2, all.x=TRUE)
1488540742226:dt_features_2 <- copy(dt_features)
1488540742500:dt_features_2[is.na(dt_features_2)] <- 0
1488540749744:dt_features_2 <- dt_features_2[,':='(basket_avg_cnt = contact_cnt/contact_d_cnt, basket_max_cov_pct=basket_max_amt/contact_amt,
1488540749745:h2_h1_contact_d_cnt_pct=h2_contact_d_cnt/h1_contact_d_cnt, h2_h1_contact_cnt_pct=h2_contact_cnt/h1_contact_cnt, h2_h1_contact_amt_pct=h2_contact_amt/h1_contact_amt, h2_h1_contact_d_prod_cnt_pct=h2_contact_d_prod_cnt/h1_contact_d_prod_cnt),]
1488540751492:setkey(dt_train_entities, "contact_id")
1488540752742:dt_features_train <- copy(dt_features_2[purchase_year==2012,,])
1488540753879:setkey(dt_features_train, "contact_id")
1488540754963:dt_train <- merge(dt_train_entities, dt_features_train, all.x = TRUE)
1488540755949:dt_train_class <- merge(dt_train_entities, dt_features_train, all.x = TRUE)
1488540757471:dt_train_class$amt13 <- ifelse(dt_train_class$amt13 > 0, 1, 0)
1488540758243:sum(dt_train_class$amt13) / length(dt_train_class$amt13) # 0.1441023
1488540758778:hist(log10(dt_train$amt13))
1488540783891:hist(dt_train$amt13)
1488540784500:plot(dt_train$amt13)
1488540797102:set.seed(11)
1488540797104:(train <- dt_train[,.SD[sample(.N,size = .N*0.7)]])
1488540797177:setkey(train, "contact_id")
1488540797209:setkey(dt_train, "contact_id")
1488540797211:(valid <- dt_train[!train,,])
1488540797262:tree_anova = rpart(formula = amt13~. -contact_id, method = "anova", data = train,
1488540797262:control = rpart.control(#maxdepth = 2
1488540797263:minsplit = 50, minbucket = 500, cp = 0.00001 ))
1488540815367:summary(tree_anova)
1488540820865:rpart.plot(tree_anova)
1488540828576:library(rpart.plot)
1488540830796:rpart.plot(tree_anova)
1488540905714:varImp(tree_anova)
1488540908559:printcp(tree_anova)
1488540911379:valid_pred <- valid
1488540912729:valid_pred$pred <- predict(tree_anova, valid)
1488540913427:sum(abs(valid_pred$pred-valid_pred$amt13))/length(valid_pred$pred)
1488540914496:set.seed(11)
1488540919279:(train_class <- dt_train_class[,.SD[sample(.N,size = .N*0.7)]])
1488540920476:setkey(train_class, "contact_id")
1488540921169:setkey(dt_train_class, "contact_id")
1488540922037:(valid_class <- dt_train_class[!train_class,,])
1488540923410:tree_class = rpart(formula = amt13~. -contact_id, method = "class", data = train_class,
1488540923410:control = rpart.control(#maxdepth = 2
1488540923411:minsplit = 50, minbucket = 200, cp = 0.0001 ))
1488540942226:summary(tree_class)
1488540942257:rpart.plot(tree_class, digits=4, cex=0.5)
1488540942584:varImp(tree_class)
1488540943309:printcp(tree_class)
1488540943311:valid_pred_class <- valid_class
1488541005755:valid_pred_class$pred <- predict(tree_class, valid_class, type="prob")[,"1"]
1488541006721:write.csv(valid_pred_class, file = "valid_pred_class.csv")
1488541007770:plot_roc(tree_class,train = train_class,valid = valid_class, target=amt13 )
1488541012397:pred_valid_class_l <- predict(tree_class,  newdata = valid_class,  type = "prob")
1488541014094:valid_pred_obj <- prediction(predictions = pred_valid_class_l[,"1"],   labels = as.factor(valid_class$amt13))
1488541015065:lift <- performance(prediction.obj = valid_pred_obj, measure="lift",  x.measure="rpp")
1488541015674:plot(lift)
1488541017708:dt_train_pred_cl <- dt_train
1488541018693:dt_train_pred_cl$pred <- predict(tree_class, dt_train_pred_cl, type="prob")[,"1"]
1488541019271:dt_train_anova2 <- dt_train_pred_cl[dt_train_pred_cl$pred > 0.25,]
1488541019685:dt_train_pred_cl[dt_train_pred_cl$pred > 0.25, .N,]/163953
1488541020062:dt_train_pred_cl[dt_train_pred_cl$pred > 0.25, .N,]
1488541020381:set.seed(11)
1488541021112:(train_anova2 <- dt_train_anova2[,.SD[sample(.N,size = .N*0.7)]])
1488541021365:setkey(train_anova2, "contact_id")
1488541021598:setkey(dt_train_anova2, "contact_id")
1488541021884:(valid_anova2 <- dt_train_anova2[!train_anova2,,])
1488545461991:library(emsconnectr)
1488545467120:sessionInfo()
1488545473975:getIdFromName('brand_alley')
1488545479594:getIdFromName('brand_alley')
1488545491015:getIdFromName('brandalley')
1488545494790:getIdFromName('brand_alley')
1488552752114:knitr::opts_knit$set(root.dir = normalizePath(".."))
1488552752116:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1488552752118:selected_customer <- params$customer
1488552752128:source('global.R')
1488552755843:# Load incentive history
1488552755844:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1488552759772:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1488552759792:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1488552759847:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1488552760385:n_bins <- 4
1488552760388:recom_history <- recom_history[order(buying_prob)] %>%
1488552760389:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1488552761426:recom_history %>%
1488552761427:.[, .N, by = .(campaign_id, campaign_start_date, class)] %>%
1488552761429:dcast(campaign_id + campaign_start_date ~ class)
1488552761547:recom_history[, table(class, numericValue, useNA = 'ifany')]
1488552762299:recom_history %>%
1488552762301:.[, .N, by = .(campaign_id, numericValue)] %>%
1488552762302:dcast(campaign_id ~ numericValue)
1488552762389:recom_history[, .N, by = .(prob_group, numericValue)] %>%
1488552762390:dcast(prob_group ~ numericValue)
1488552762503:recom_history %>%
1488552762504:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1488552762506:plotRatesByCampaigns(label = 'Open rate')
1488552763021:```
1488552877894:recom_history %>%
1488552877895:calculateRateWithErrors(variable = 'did_open')
1488552883358:recom_history %>%
1488552883359:calculateRateWithErrors(variable = 'did_open') %>%
1488552883360:plotRatesBySegments(label = 'Open rate')
1488552926778:recom_history %>%
1488552926780:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1488552926781:plotRatesByCampaigns(label = 'Open rate')
1488552927260:```
1488552930268:recom_history %>%
1488552930269:calculateRateWithErrors(variable = 'did_open', by_prob_group = TRUE) %>%
1488552930271:plotRatesBySegments(label = 'Open rate', by_prob_group = TRUE)
1488552994421:recom_history %>%
1488552994422:calculateRateWithErrors(variable = 'did_open') %>%
1488552994422:plotRatesBySegments(label = 'Open rate')
1488553009053:recom_history %>%
1488553009053:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1488553009054:plotRatesByCampaigns(label = 'Open rate')
1488553016698:recom_history %>%
1488553016699:calculateRateWithErrors(variable = 'did_open', by_prob_group = TRUE) %>%
1488553016699:plotRatesBySegments(label = 'Open rate', by_prob_group = TRUE)
1488553034869:recom_history %>%
1488553034870:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1488553034871:plotRatesByCampaigns(label = 'Open rate')
1488553043308:knitr::opts_knit$set(root.dir = normalizePath(".."))
1488553043310:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1488553043314:selected_customer <- params$customer
1488553043342:source('global.R')
1488553043461:# Load incentive history
1488553043462:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1488553046252:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1488553046263:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1488553046278:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1488553046545:n_bins <- 4
1488553046548:recom_history <- recom_history[order(buying_prob)] %>%
1488553046549:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1488553047085:recom_history %>%
1488553047086:.[, .N, by = .(campaign_id, campaign_start_date, class)] %>%
1488553047087:dcast(campaign_id + campaign_start_date ~ class)
1488553047204:recom_history[, table(class, numericValue, useNA = 'ifany')]
1488553047887:recom_history %>%
1488553047888:.[, .N, by = .(campaign_id, numericValue)] %>%
1488553047889:dcast(campaign_id ~ numericValue)
1488553047968:recom_history[, .N, by = .(prob_group, numericValue)] %>%
1488553047970:dcast(prob_group ~ numericValue)
1488553048088:recom_history %>%
1488553048090:.[, .(rate = mean(did_open)), by = .(campaign_start_date, incentive_group)] %>%
1488553048092:plotRatesByCampaigns(label = 'Open rate')
1488553048509:```
1488553464935:sessionInfo()
1489413331508:packrat::restore(prompt = FALSE)
1489413358265:knitr::opts_knit$set(root.dir = normalizePath(".."))
1489413358268:knitr::opts_chunk$set(echo = FALSE, results = "asis", message = FALSE)
1489413358270:selected_customer <- params$customer
1489413369405:source('global.R')
1489413372967:# Load incentive history
1489413372969:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489413382400:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1489413382426:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1489413382712:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1489413383546:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489413383548:recom_history, purchases,
1489413383549:source = 'hds'
1489413383550:)
1489413399226:smart_sales <- recom_history_w_attribution[class == "smart",
1489413399228:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1489413399229:by = "lifecycle_status"]
1489413399363:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1489413399365:sum(smart_sales[["total_sales"]]))
1489413399372:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1489413399375:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1489413399377:cat("??? saved by lower incentives.")
1489413462611:smart_sales
1489413535618:num_smart_zero_inc <- nrow(recom_history_w_attribution[class == "smart" & numericValue == 0])
1489413535987:num_smart_zero_inc_purchased <- nrow(
1489413535988:recom_history_w_attribution[class == "smart" & numericValue == 0 & !is.na(sales_amount)])
1489413536094:cat(paste0(num_smart_zero_inc, " incentives saved (zero incentive distributed by the smart)\n"))
1489413536096:cat(paste0(num_smart_zero_inc_purchased, " people getting zero incentive purchased.\n"))
1489413536097:cat("(for this customer the static incentive was free shipping, at the moment we cannot compare if a percentage discount was of lower of higher for them)")
1489413614920:dt_sum <- recom_history_w_attribution[numericValue < 99 & class == "smart",
1489413614921:.(purchased = sum(!is.na(sales_amount)),
1489413614922:N = .N),
1489413614924:keyby = .(campaign_id, lifecycle_status, numericValue)]
1489413615215:dt_sum[, maxNumericValue := max(numericValue), by = "campaign_id"]
1489413615219:num_got_highest <- sum(dt_sum[numericValue == maxNumericValue][["N"]])
1489413615222:num_reactivated <- sum(dt_sum[(numericValue == maxNumericValue) &
1489413615223:(lifecycle_status %in% c("defecting", "inactive"))
1489413615225:][["purchased"]])
1489413615230:cat(paste0(num_reactivated, " people reactivated.\n"))
1489413615232:cat(paste0(num_got_highest, " people got the highest amount incentive.\n"))
1489413615234:cat(paste0(num_reactivated, " people converted from inactive or defecting status as a result of receiving the highest incentive.\n"))
1489413696363:dt_sum[numericValue == maxNumericValue]
1489413703503:num_got_highest
1489413719253:num_got_highest <- sum(dt_sum[numericValue == maxNumericValue, .N])
1489413723047:num_got_highest
1489413731744:dt_sum[numericValue == maxNumericValue, .N]
1489413742485:num_got_highest <- sum(dt_sum[numericValue == maxNumericValue, .(N)])
1489413746464:num_got_highest
1489413763076:num_got_highest <- dt_sum[numericValue == maxNumericValue, sum(N)]
1489413767736:num_got_highest
1489413822191:dt_sum <- recom_history[class == "smart", .(sum_open = sum(did_open), open_rate = sum(did_open) / .N)]
1489413826692:dt_sum
1489413841231:recom_history[class == "smart", .(sum_open = sum(did_open), open_rate = mean(did_open))]
1489413867305:dt_sum <- recom_history[class %in% c("static", "smart"), .N, by = class]
1489413867601:n_total <- sum(dt_sum[["N"]])
1489413867604:n_smart <- sum(dt_sum[class == "smart"][["N"]])
1489413867607:n_static <- sum(dt_sum[class == "static"][["N"]])
1489413867611:cat(paste0(n_total, " emails delivered with IR\n"))
1489413867613:cat(paste0(n_smart, " (",  round(100*(n_smart/n_total), 0), "%) smart incentives\n"))
1489413867615:cat(paste0(n_static, " (",  round(100*(n_static/n_total), 0), "%) default incentive\n"))
1489413875743:dt_sum <- recom_history[class == "smart", .N, keyby = numericValue][, share := N / sum(N)]
1489413875805:cat("Distribution of smart incentives\n")
1489413875808:for (vv in unique(dt_sum[["numericValue"]])) {
1489413875809:cat(paste0(vv, "% incentive\n"))
1489413875811:num <- dt_sum[numericValue == vv][["N"]]
1489413875813:percent <- round(100*dt_sum[numericValue == vv][["share"]], 0)
1489413875814:cat(paste0(" - ", num, "(", percent, "%)\n"))
1489413875817:}
1489413965138:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489413965139:recom_history, purchases,
1489413965141:source = 'si',
1489413965142:method = 'time',
1489413965143:time_window = 7
1489413965144:)
1489413976238:smart_sales <- recom_history_w_attribution[class == "smart",
1489413976239:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1489413976240:by = "lifecycle_status"]
1489413976387:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1489413976389:sum(smart_sales[["total_sales"]]))
1489413976394:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1489413976396:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1489413976398:cat("??? saved by lower incentives.")
1489413994480:num_smart_zero_inc <- nrow(recom_history_w_attribution[class == "smart" & numericValue == 0])
1489413994652:num_smart_zero_inc_purchased <- nrow(
1489413994654:recom_history_w_attribution[class == "smart" & numericValue == 0 & !is.na(sales_amount)])
1489413994877:cat(paste0(num_smart_zero_inc, " incentives saved (zero incentive distributed by the smart)\n"))
1489413994879:cat(paste0(num_smart_zero_inc_purchased, " people getting zero incentive purchased.\n"))
1489413994881:cat("(for this customer the static incentive was free shipping, at the moment we cannot compare if a percentage discount was of lower of higher for them)")
1489414010408:dt_sum <- recom_history_w_attribution[numericValue < 99 & class == "smart",
1489414010409:.(purchased = sum(!is.na(sales_amount)),
1489414010410:N = .N),
1489414010412:keyby = .(campaign_id, lifecycle_status, numericValue)]
1489414010714:dt_sum[, maxNumericValue := max(numericValue), by = "campaign_id"]
1489414010717:num_got_highest <- dt_sum[numericValue == maxNumericValue, sum(N)]
1489414010721:num_reactivated <- sum(dt_sum[(numericValue == maxNumericValue) &
1489414010722:(lifecycle_status %in% c("defecting", "inactive"))
1489414010723:][["purchased"]])
1489414010727:cat(paste0(num_got_highest, " people got the highest amount incentive.\n"))
1489414010728:cat(paste0(num_reactivated, " people converted from inactive or defecting status as a result of receiving the highest incentive.\n"))
1489414041899:dt_sum <- recom_history[class == "smart", .(sum_open = sum(did_open), open_rate = mean(did_open))]
1489414041985:num_smart_open <- dt_sum[["sum_open"]]
1489414041989:smart_open_rate <- dt_sum[["open_rate"]]
1489414041992:cat(paste0(num_smart_open, " Opened your smart incentives\n"))
1489414041993:cat(paste0("This is ", round(100*smart_open_rate, 2), "% open rate for the smart incentive group, which is ??? than the open rate in control group."))
1489414051706:dt_sum <- recom_history[class %in% c("static", "smart"), .N, by = class]
1489414052014:n_total <- sum(dt_sum[["N"]])
1489414052017:n_smart <- sum(dt_sum[class == "smart"][["N"]])
1489414052020:n_static <- sum(dt_sum[class == "static"][["N"]])
1489414052024:cat(paste0(n_total, " emails delivered with IR\n"))
1489414052026:cat(paste0(n_smart, " (",  round(100*(n_smart/n_total), 0), "%) smart incentives\n"))
1489414052028:cat(paste0(n_static, " (",  round(100*(n_static/n_total), 0), "%) default incentive\n"))
1489414055588:dt_sum <- recom_history[class == "smart", .N, keyby = numericValue][, share := N / sum(N)]
1489414055651:cat("Distribution of smart incentives\n")
1489414055653:for (vv in unique(dt_sum[["numericValue"]])) {
1489414055654:cat(paste0(vv, "% incentive\n"))
1489414055655:num <- dt_sum[numericValue == vv][["N"]]
1489414055657:percent <- round(100*dt_sum[numericValue == vv][["share"]], 0)
1489414055658:cat(paste0(" - ", num, "(", percent, "%)\n"))
1489414055660:}
1489415677568:source('global.R')
1489415677685:# Load incentive history
1489415677686:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489415684905:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1489415684939:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1489415685005:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1489415685718:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489415685721:recom_history, purchases,
1489415685722:source = 'si',
1489415685724:method = 'time',
1489415685726:time_window = 7
1489415685730:)
1489415697777:smart_sales <- recom_history_w_attribution[class == "smart",
1489415697779:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1489415697781:by = "lifecycle_status"]
1489415697924:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1489415697925:sum(smart_sales[["total_sales"]]))
1489415697931:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1489415697934:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1489415697936:cat("??? saved by lower incentives.")
1489415778505:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489415778506:recom_history, purchases,
1489415778507:source = 'hds'
1489415778508:)
1489415781294:smart_sales <- recom_history_w_attribution[class == "smart",
1489415781295:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1489415781297:by = "lifecycle_status"]
1489415781467:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1489415781470:sum(smart_sales[["total_sales"]]))
1489415781476:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1489415781478:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1489415781480:cat("??? saved by lower incentives.")
1489415868241:recom_history_w_attribution
1489415875403:recom_history_w_attribution[, .N, by = campaign_start_date]
1489415922593:purchases
1489415929425:purchases$hds
1489415954957:purchases$hds[event_time >= ymd('2017-03-08')]
1489415970775:purchases$hds[event_time < ymd('2017-03-08')]
1489415998695:recom_history_w_attribution[sales_amount > 0]
1489416328668:source('global.R')
1489416338447:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489416338448:recom_history, purchases,
1489416338450:source = 'hds'
1489416338451:)
1489416342198:recom_history_w_attribution
1489416453970:source('global.R')
1489416463486:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489416463487:recom_history, purchases,
1489416463487:source = 'hds'
1489416463488:)
1489416467469:recom_history_w_attribution
1489416665620:recom_history_w_attribution[sales_amount > 0]
1489416683957:recom_history_w_attribution[sales_amount > 0][purchase_date > ymd('2017-03-08')]
1489416885141:install.packages("readxl")
1489416930341:library(readxl)
1489417000377:source('global.R')
1489417000411:# Load data
1489417000411:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489417005535:purchases_customer <- read_excel('data/customer_ir_data_%s.xlsx', selected_customer)
1489417032910:purchases_customer <- read_excel(sprintf('data/customer_ir_data_%s.xlsx', selected_customer))
1489417039832:purchases_customer
1489417059500:purchases_customer[872]
1489417063336:purchases_customer[872, ]
1489417245562:source('global.R')
1489417290505:raw_data <- read_excel('data/GSD - IR data.xlsx')
1489417294664:raw_data
1489417301803:head(purchases$hds)
1489417360147:data.table(raw_data)
1489417380307:data.table(raw_data) %>% .[`Order Number` == 'GW50838014']
1489417391412:data.table(raw_data) %>% .[`Order Number` == 'GW50941250']
1489417405021:data.table(raw_data) %>% .[`Order Number` == 'GW50989832']
1489417425720:head(purchases$si)
1489417444847:summary(purchases$si)
1489417474673:purchases$si[!is.na(contact_id)]
1489417493903:purchases$si[!is.na(contact_id)] %>% summary
1489417506105:summary(raw_data)
1489417539068:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489417563042:raw_data[`Call Date` == ymd('2017-03-04')]
1489417567239:raw_data[`Call Date` == ymd('2017-03-03')]
1489417572239:raw_data[`Call Date` == ymd('2017-03-05')]
1489417588275:raw_data
1489417612541:str(purchases)
1489417640105:raw_data[, purchase_date := as.Date(`Call Date`)]
1489417643254:raw_data
1489417715064:raw_data[, .(`Call Time`, `Call Date`)]
1489417769052:?as.POSIXct
1489417813396:raw_data$`Call Time` %>% class()
1489417820876:raw_data$`Call Date` %>% class()
1489417860535:raw_data$`Call Time` %>% head %>% as.character()
1489417892385:raw_data$`Call Date` - raw_data$`Call Time`
1489417943012:raw_data[, .(`Call Date`, `Call Time`, `Call Time` + (`Call Date` - `Call Time`))]
1489417997189:raw_data[, .(`Call Date`, `Call Time`, `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`)))]
1489418003582:raw_data[, .(`Call Date`, `Call Time`, `Call Time` + (`Call Date` - as.Date(`Call Time`)))]
1489418013160:raw_data[, .(`Call Date`, `Call Time`, `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`)))]
1489418088132:raw_data[, `:=`(
1489418088133:purchase_date = as.Date(`Call Date`),
1489418088134:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489418088135:)
1489418088136:]
1489418093985:raw_data
1489418126939:setnames(raw_data, "Order Number", "order_id")
1489418129619:raw_data
1489418145914:raw_data[purchase_date == ymd('2017-03-05')]
1489418148928:raw_data[purchase_date == ymd('2017-03-04')]
1489418175808:purchases_si[purchase_date == ymd('2017-03-04')]
1489418182867:purchases$si[purchase_date == ymd('2017-03-04')]
1489418190470:purchases$hds[purchase_date == ymd('2017-03-04')]
1489418194060:raw_data[purchase_date == ymd('2017-03-04')]
1489418237000:purchases$si[order_id == 'GW50998867']
1489418244321:purchases$hds[order_id == 'GW50998867']
1489418262324:raw_data[order_id == 'GW50998867']
1489418333322:purchases$si[order_id %in% c('GW50998867', 'GW50999296', 'GW50999451']
1489418341509:purchases$si[order_id %in% c('GW50998867', 'GW50999296', 'GW50999451')]
1489418343068:purchases$hds[order_id %in% c('GW50998867', 'GW50999296', 'GW50999451')]
1489418344453:raw_data[order_id %in% c('GW50998867', 'GW50999296', 'GW50999451')]
1489418411980:raw_data[purchase_date == ymd('2017-03-03')]
1489418422966:raw_data[purchase_date == ymd('2017-03-03'), order_id]
1489418461969:order_ids <- c("GW50997741", "GW50997827", "GW50997827", "GW50997827", "GW50997993", "GW50997993", "GW50997993", "GW50998317", "GW50998317", "GW50998332", "GW50998350", "GW50998350", "GW50998350", "GW50998365", "GW50998430", "GW50998550")
1489418474728:purchases$si[order_id %in% order_ids]
1489418476742:purchases$hds[order_id %in% order_ids]
1489418479372:raw_data[order_id %in% order_ids]
1489418542392:raw_data[order_id %in% order_ids, .(order_id, purchase_date, event_time, `Total Spent`, Price, `P&H`)]
1489418546632:purchases$si[order_id %in% order_ids]
1489418547060:purchases$hds[order_id %in% order_ids]
1489418593128:purchases$si[order_id %in% order_ids][order(order_id)]
1489418593133:purchases$hds[order_id %in% order_ids][order(order_id)]
1489418593138:raw_data[order_id %in% order_ids, .(order_id, purchase_date, event_time, `Total Spent`, Price, `P&H`)]
1489418705361:?setnames
1489418739624:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489418745552:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489418745609:raw_data[, `:=`(
1489418745609:purchase_date = as.Date(`Call Date`),
1489418745611:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489418745611:)
1489418745611:]
1489419580606:contact_id_email <- getSqlResult(
1489419580607:query = 'SELECT id as contact_id, LOWER(_3) as email FROM #{customer_id}_contact_0 WHERE LOWER(_3) IN (#{contact_email_list});',
1489419580608:database_name = 'suite7',
1489419580608:use_ssh_tunnel = T,
1489419580608:customer_id = getIdFromName("globalshopdirect"),
1489419580609:contact_email_list = paste0("'", raw_data[, tolower(Email)],"'", collapse = ',')
1489419580609:)
1489419628033:??emsconnectr
1489419663773:contact_id_email <- getSqlResult(
1489419663774:query = 'SELECT id as contact_id, LOWER(_3) as email FROM #{customer_id}_contact_0 WHERE LOWER(_3) IN (#{contact_email_list});',
1489419663775:database_name = 'suite11',
1489419663775:use_ssh_tunnel = T,
1489419663776:customer_id = getIdFromName("globalshopdirect"),
1489419663776:contact_email_list = paste0("'", raw_data[, tolower(Email)],"'", collapse = ',')
1489419663776:)
1489419674562:contact_id_email
1489419710709:contact_id_email <- getSqlResult(
1489419710709:query = 'SELECT id as contact_id, LOWER(_3) as Email FROM #{customer_id}_contact_0 WHERE LOWER(_3) IN (#{contact_email_list});',
1489419710710:database_name = 'suite11',
1489419710710:use_ssh_tunnel = T,
1489419710710:customer_id = getIdFromName("globalshopdirect"),
1489419710710:contact_email_list = paste0("'", raw_data[, tolower(Email)],"'", collapse = ',')
1489419710711:)
1489419716169:raw_data <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489419718843:raw_data
1489419766669:contact_id_email <- getSqlResult(
1489419766669:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489419766670:database_name = 'suite11',
1489419766670:use_ssh_tunnel = T,
1489419766671:customer_id = getIdFromName("globalshopdirect"),
1489419766671:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489419766671:)
1489419772960:contact_id_email
1489419779871:raw_data <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489419783229:raw_data
1489419796397:raw_data[, contact_id.x := NULL]
1489419805616:setnames(raw_data, "contact_id.y", "contact_id")
1489419812872:raw_data[is.na(contact_id)]
1489419824787:purchases_customer <- raw_data[, .(
1489419824788:.(sales_amount = sum(`Total Spent`))
1489419824789:),
1489419824789:by = .(contact_id, order_id, purchase_date, event_time)
1489419824789:]
1489419836861:setnames(raw_data, "Order Number", "order_id")
1489419842118:purchases_customer <- raw_data[, .(
1489419842119:.(sales_amount = sum(`Total Spent`))
1489419842120:),
1489419842120:by = .(contact_id, order_id, purchase_date, event_time)
1489419842120:]
1489419846246:purchases_customer[purchase_date == ymd('2017-03-03'), order_id]
1489419865976:purchases$si[order_id %in% order_ids][order(order_id)]
1489419867906:purchases$hds[order_id %in% order_ids][order(order_id)]
1489419875190:purchases_customer[order_id %in% order_ids]
1489419885982:purchases_customer
1489419900937:purchases_customer <- raw_data[, .(
1489419900938:sales_amount = sum(`Total Spent`)
1489419900938:),
1489419900939:by = .(contact_id, order_id, purchase_date, event_time)
1489419900939:]
1489419909701:purchases_customer[order_id %in% order_ids]
1489419912009:purchases$si[order_id %in% order_ids][order(order_id)]
1489419912368:purchases$hds[order_id %in% order_ids][order(order_id)]
1489419932197:purchases$si[order_id %in% order_ids][order(order_id)]
1489419932454:purchases$hds[order_id %in% order_ids][order(order_id)]
1489419932786:purchases_customer[order_id %in% order_ids][order(order_id)]
1489420061371:raw_data[order_id == 'GW50998317']
1489420120197:raw_data[order_id == 'GW50998550']
1489420230920:purchases_customer %>% summary()
1489420244649:nrow(purchases_customer)
1489420251506:nrow(purchases_si)
1489420255820:nrow(purchases$si)
1489420323287:nrow(purchases$si[
1489420323287:purchase_date >= ymd(purchases_customer[, min(purchase_date)]) &
1489420323288:purchase_date <= ymd(purchases_customer[, max(purchase_date)])
1489420323289:])
1489420325809:nrow(purchases_customer)
1489420343002:nrow(purchases_customer)
1489420343638:nrow(purchases$si[
1489420344128:purchase_date >= ymd(purchases_customer[, min(purchase_date)]) &
1489420344478:purchase_date <= ymd(purchases_customer[, max(purchase_date)]) &
1489420344810:!is.na(contact_id)
1489420345186:])
1489420432663:merge(purchases_customer, purchases_si, by = c('contact_id', 'order_id'), all = TRUE)
1489420443834:merged <- merge(purchases_customer, purchases&si, by = c('contact_id', 'order_id'), all = TRUE)
1489420446583:merged <- merge(purchases_customer, purchases&si, by = c('contact_id', 'order_id'), all = TRUE)
1489420456250:merged <- merge(purchases_customer, purchases$si, by = c('contact_id', 'order_id'), all = TRUE)
1489420483361:purchases_si <- purchases$si[
1489420483361:purchase_date >= ymd(purchases_customer[, min(purchase_date)]) &
1489420483362:purchase_date <= ymd(purchases_customer[, max(purchase_date)]) &
1489420483363:!is.na(contact_id)
1489420483363:]
1489420485519:merged <- merge(purchases_customer, purchases_si, by = c('contact_id', 'order_id'), all = TRUE)
1489420491318:merged
1489420520182:purchases_customer
1489420524743:purchases_si
1489420533920:merged[!is.na(campaign_id)]
1489420642529:merged[!is.na(purchase_date.x), mean(sales_amount.x == sales_amount.y)]
1489420782323:merged[
1489420782324:!is.na(purchase_date.x),
1489420782325:table(ifelse(
1489420782325:is.na(sales_amount.x), 'missing customer',
1489420782325:ifelse(is.na(sales_amount.y), 'missing si',
1489420782326:ifelse(sales_amount.x == sales_amount.y, 'equal', 'not-equal')
1489420782326:)
1489420782326:))
1489420782327:]
1489420849497:merged[!is.na(purchase_date.x) & is.na(sales_amount.y)]
1489421006016:fwrite(purchases_customer, 'data/customer_purchases_globalshopdirect.csv')
1489421048643:source('global.R')
1489421054613:purchases_customer <- fread(sprintf('data/purchases_customer_%s.csv', selected_customer))
1489421098956:fwrite(purchases_customer, 'data/purchases_customer_globalshopdirect.csv')
1489421116588:purchases_customer <- fread(sprintf('data/purchases_customer_%s.csv', selected_customer))
1489421165454:purchases$customer <- purchases_customer
1489421165455:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489421165455:recom_history, purchases,
1489421165456:source = 'customer'
1489421165457:)
1489421182876:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489421182877:recom_history, purchases,
1489421182878:source = 'customer',
1489421182878:method = 'time',
1489421182878:time_window = 7
1489421182879:)
1489421192691:purchases_customer
1489421240715:purchases_customer <- fread(sprintf('data/purchases_customer_%s.csv', selected_customer)) %>%
1489421240716:.[, `:=`(purchase_date = as.Date(purchase_date), event_time = as.POSIXct(event_time))]
1489421242389:purchases_customer
1489421243581:purchases_customer
1489421247487:purchases$customer <- purchases_customer
1489421250633:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489421250634:recom_history, purchases,
1489421250635:source = 'customer',
1489421250635:method = 'time',
1489421250635:time_window = 7
1489421250636:)
1489421275404:smart_sales <- recom_history_w_attribution[class == "smart",
1489421275407:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1489421275408:by = "lifecycle_status"]
1489421275565:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1489421275567:sum(smart_sales[["total_sales"]]))
1489421275573:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1489421275578:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1489421275580:cat("??? saved by lower incentives.")
1489421282593:smart_sales <- recom_history_w_attribution[class == "smart",
1489421282595:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1489421282596:by = "lifecycle_status"]
1489421282689:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1489421282691:sum(smart_sales[["total_sales"]]))
1489421282695:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1489421282697:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1489421282698:cat("??? saved by lower incentives.")
1489421285203:num_smart_zero_inc <- nrow(recom_history_w_attribution[class == "smart" & numericValue == 0])
1489421285339:num_smart_zero_inc_purchased <- nrow(
1489421285340:recom_history_w_attribution[class == "smart" & numericValue == 0 & !is.na(sales_amount)])
1489421285467:cat(paste0(num_smart_zero_inc, " incentives saved (zero incentive distributed by the smart)\n"))
1489421285470:cat(paste0(num_smart_zero_inc_purchased, " people getting zero incentive purchased.\n"))
1489421285471:cat("(for this customer the static incentive was free shipping, at the moment we cannot compare if a percentage discount was of lower of higher for them)")
1489421288511:dt_sum <- recom_history_w_attribution[numericValue < 99 & class == "smart",
1489421288513:.(purchased = sum(!is.na(sales_amount)),
1489421288515:N = .N),
1489421288516:keyby = .(campaign_id, lifecycle_status, numericValue)]
1489421288837:dt_sum[, maxNumericValue := max(numericValue), by = "campaign_id"]
1489421288842:num_got_highest <- dt_sum[numericValue == maxNumericValue, sum(N)]
1489421288845:num_reactivated <- sum(dt_sum[(numericValue == maxNumericValue) &
1489421288847:(lifecycle_status %in% c("defecting", "inactive"))
1489421288848:][["purchased"]])
1489421288852:cat(paste0(num_got_highest, " people got the highest amount incentive.\n"))
1489421288854:cat(paste0(num_reactivated, " people converted from inactive or defecting status as a result of receiving the highest incentive.\n"))
1489421291975:dt_sum <- recom_history[class == "smart", .(sum_open = sum(did_open), open_rate = mean(did_open))]
1489421292103:num_smart_open <- dt_sum[["sum_open"]]
1489421292106:smart_open_rate <- dt_sum[["open_rate"]]
1489421292109:cat(paste0(num_smart_open, " Opened your smart incentives\n"))
1489421292111:cat(paste0("This is ", round(100*smart_open_rate, 2), "% open rate for the smart incentive group, which is ??? than the open rate in control group."))
1489421419556:num_reactivated <- dt_sum[lifecycle_status %in% c("defecting", "inactive"), sum(purchased)]
1489421472822:dt_sum <- recom_history_w_attribution[numericValue < 99 & class == "smart",
1489421472823:.(purchased = sum(!is.na(sales_amount)),
1489421472825:N = .N),
1489421472826:keyby = .(campaign_id, lifecycle_status, numericValue)]
1489421473131:dt_sum[, maxNumericValue := max(numericValue), by = "campaign_id"]
1489421473135:num_got_highest <- dt_sum[numericValue == maxNumericValue, sum(N)]
1489421473139:num_reactivated <- dt_sum[lifecycle_status %in% c("defecting", "inactive"), sum(purchased)]
1489421473143:num_highest_reactivated <- dt_sum[
1489421473145:numericValue == maxNumericValue & lifecycle_status %in% c("defecting", "inactive")
1489421473146:sum(purchased)
1489421482238:dt_sum <- recom_history_w_attribution[numericValue < 99 & class == "smart",
1489421482240:.(purchased = sum(!is.na(sales_amount)),
1489421482241:N = .N),
1489421482242:keyby = .(campaign_id, lifecycle_status, numericValue)]
1489421482740:dt_sum[, maxNumericValue := max(numericValue), by = "campaign_id"]
1489421482743:num_got_highest <- dt_sum[numericValue == maxNumericValue, sum(N)]
1489421482746:num_reactivated <- dt_sum[lifecycle_status %in% c("defecting", "inactive"), sum(purchased)]
1489421482750:num_highest_reactivated <- dt_sum[
1489421482751:numericValue == maxNumericValue & lifecycle_status %in% c("defecting", "inactive"),
1489421482753:sum(purchased)
1489421482755:]
1489421482759:cat(paste0(num_highest_reactivated, " people converted from inactive or defecting status.\n"))
1489421482761:cat(paste0(num_got_highest, " people got the highest amount incentive.\n"))
1489421482763:cat(paste0(num_highest_reactivated, " people converted from inactive or defecting status as a result of receiving the highest incentive.\n"))
1489421497304:dt_sum <- recom_history_w_attribution[numericValue < 99 & class == "smart",
1489421497306:.(purchased = sum(!is.na(sales_amount)),
1489421497307:N = .N),
1489421497308:keyby = .(campaign_id, lifecycle_status, numericValue)]
1489421497981:dt_sum[, maxNumericValue := max(numericValue), by = "campaign_id"]
1489421497985:num_got_highest <- dt_sum[numericValue == maxNumericValue, sum(N)]
1489421497989:num_reactivated <- dt_sum[lifecycle_status %in% c("defecting", "inactive"), sum(purchased)]
1489421497993:num_highest_reactivated <- dt_sum[
1489421497995:numericValue == maxNumericValue & lifecycle_status %in% c("defecting", "inactive"),
1489421497997:sum(purchased)
1489421497998:]
1489421498003:cat(paste0(num_reactivated, " people converted from inactive or defecting status.\n"))
1489421498005:cat(paste0(num_got_highest, " people got the highest amount incentive.\n"))
1489421498007:cat(paste0(num_highest_reactivated, " people converted from inactive or defecting status as a result of receiving the highest incentive.\n"))
1489421547219:dt_sum <- recom_history[class == "smart", .(sum_open = sum(did_open), open_rate = mean(did_open))]
1489421547289:num_smart_open <- dt_sum[["sum_open"]]
1489421547292:smart_open_rate <- dt_sum[["open_rate"]]
1489421547295:cat(paste0(num_smart_open, " Opened your smart incentives\n"))
1489421547297:cat(paste0("This is ", round(100*smart_open_rate, 2), "% open rate for the smart incentive group, which is ??? than the open rate in control group."))
1489421558020:dt_sum <- recom_history[class %in% c("static", "smart"), .N, by = class]
1489421558241:n_total <- sum(dt_sum[["N"]])
1489421558244:n_smart <- sum(dt_sum[class == "smart"][["N"]])
1489421558247:n_static <- sum(dt_sum[class == "static"][["N"]])
1489421558252:cat(paste0(n_total, " emails delivered with IR\n"))
1489421558254:cat(paste0(n_smart, " (",  round(100*(n_smart/n_total), 0), "%) smart incentives\n"))
1489421558256:cat(paste0(n_static, " (",  round(100*(n_static/n_total), 0), "%) default incentive\n"))
1489422182778:data_source <- 'hds'
1489422191353:knitr::opts_knit$set(root.dir = normalizePath(".."))
1489422191355:knitr::opts_chunk$set(echo = FALSE, results = "asis", message = FALSE)
1489422191357:selected_customer <- params$customer
1489422191362:data_source <- params$source
1489422191372:source('global.R')
1489422191468:# Load incentive history
1489422191469:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489422197037:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1489422197060:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1489422197106:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1489422197908:if (data_source == 'si') {
1489422197910:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489422197912:recom_history, purchases,
1489422197913:source = 'si',
1489422197915:method = 'time',
1489422197916:time_window = 7
1489422197917:)
1489422197919:} else if (data_source == 'hds') {
1489422197921:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489422197923:recom_history, purchases,
1489422197924:source = 'hds'
1489422197926:)
1489422197928:} else if (data_source == 'customer') {
1489422197930:purchases_customer <- fread(sprintf('data/purchases_customer_%s.csv', selected_customer)) %>%
1489422197932:.[, `:=`(purchase_date = as.Date(purchase_date), event_time = as.POSIXct(event_time))]
1489422197933:purchases$customer <- purchases_customer
1489422197935:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1489422197939:recom_history, purchases,
1489422197942:source = 'customer',
1489422197944:method = 'time',
1489422197947:time_window = 7
1489422197949:)
1489422197951:} else {
1489422197954:stop('Data source should be either si, or hds, or customer.')
1489422197956:}
1489422224729:recom_history_w_attribution[, .N, by = order_id]
1489422250655:purchases$hds[, .N, by = order_id][N > 1]
1489422259590:purchases_hds
1489422263159:purchases$hds
1489422276112:purchases$hds[, .N, by = order_id]
1489422388071:purchases$hds[, .N, by = .(order_id, sales_amount)][N > 1]
1489422411665:purchases$hds[, .N, by = .(order_id, sales_amount)][, sum(sales_amount), by = N]
1489422463288:purchases$hds[, .N, by = .(order_id, sales_amount)][N>1, .(sum(sales_amount), sum(sales_amount*N))]
1489422488041:purchases$hds[, sum(sales_amount)]
1489481102483:source('global.R')
1489481112818:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489481112819:purchases_customer <- read_excel(sprintf('data/customer_ir_data_%s.xlsx', selected_customer))
1489481126166:selected_customer <- 'globalshopdirect'
1489481131179:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489481137870:purchases_customer <- read_excel(sprintf('data/customer_ir_data_%s.xlsx', selected_customer))
1489481213094:purchases$customer <- fread(sprintf('data/purchases_customer_%s.csv', selected_customer))
1489481275816:lapply(purchases, function(dt) ggplot(dt[, .N, by = purchase_date], aes(x = purchase_date, y = N)) + geom_line())
1489481331683:purchases$customer
1489481390062:purchases$customer <- fread(sprintf('data/purchases_customer_%s.csv', selected_customer)) %>%
1489481390063:.[, `:=`(purchase_date = as.Date(purchase_date), event_time = as.POSIXct(event_time))]
1489481392930:lapply(purchases, function(dt) ggplot(dt[, .N, by = purchase_date], aes(x = purchase_date, y = N)) + geom_line())
1489481435729:purchases$customer[, .N, by = purchase_date]
1489481442209:purchases$customer[, .N, keyby = purchase_date]
1489481455467:purchases$customer[, .N, keyby = purchase_date] %>% head(20)
1489481494566:recom_history[, .N, by = campaign_start_date]
1489481508454:purchases$customer[, .N, keyby = purchase_date] %>% head(25)
1489481558722:purchases$customer[, .N, keyby = purchase_date] %>% head(50) %>% tail(25)
1489481566331:purchases$customer[, .N, keyby = purchase_date] %>% head(50) %>% tail(30)
1489481571611:purchases$customer[, .N, keyby = purchase_date] %>% head(50) %>% tail(31)
1489481762424:purchases_si <- purchases$si[
1489481762887:purchase_date >= ymd(purchases_customer[, min(purchase_date)]) &
1489481763173:purchase_date <= ymd(purchases_customer[, max(purchase_date)]) &
1489481763522:!is.na(contact_id)
1489481763962:]
1489481789689:purchases_customer <- purchases$customer
1489481801936:purchases_si <- purchases$si[
1489481802349:purchase_date >= ymd(purchases_customer[, min(purchase_date)]) &
1489481802675:purchase_date <= ymd(purchases_customer[, max(purchase_date)]) &
1489481803070:!is.na(contact_id)
1489481803686:]
1489481805594:merged <- merge(purchases_customer[purchase_date == ymd('2016-12-26')], purchases_si[purchase_date == ymd('2016-12-26')], by = c('contact_id', 'order_id'), all = TRUE)
1489481806983:merged[
1489481807411:,
1489481807628:table(ifelse(
1489481807816:is.na(sales_amount.x), 'missing customer',
1489481807997:ifelse(is.na(sales_amount.y), 'missing si',
1489481808191:ifelse(sales_amount.x == sales_amount.y, 'equal', 'not-equal')
1489481808381:)
1489481808677:))
1489481809110:]
1489481819387:merged
1489481833659:purchases_si
1489481846196:purchases_si[, .N, keyby = purchase_date]
1489481875871:purchases_customer[, min(purchase_date)]
1489481894680:purchases$si[purchase_date == ymd('2016-12-26')]
1489481949866:purchases$si[, .N, keyby = purchase_date] %>% .[purchase_date > ymd('2016-12-20')]
1489482040646:order_ids <- purchases_customer[purchase_date == ymd('2016-12-26'), order_id]
1489482043392:purchases$si[order_id %in% order_ids][order(order_id)]
1489482056417:order_ids
1489482114269:purchases_customer[, .N, by = purchase_date][order(N)]
1489482124051:purchases$hds[order_id %in% order_ids][order(order_id)]
1489482139197:length(order_ids)
1489482167616:order_ids <- purchases_customer[purchase_date == ymd('2017-01-28'), order_id]
1489482169640:purchases$si[order_id %in% order_ids][order(order_id)]
1489482172337:purchases$hds[order_id %in% order_ids][order(order_id)]
1489482174306:purchases_customer[order_id %in% order_ids][order(order_id)]
1489482214602:purchases$si[purchase_date == ymd('2017-01-28')]
1489482244714:purchases_customer[, .N, by = purchase_date][order(N)]
1489482257200:order_ids <- purchases_customer[purchase_date == ymd('2017-02-11'), order_id]
1489482259042:purchases$hds[order_id %in% order_ids][order(order_id)]
1489482261256:purchases_customer[order_id %in% order_ids][order(order_id)]
1489482263520:purchases$si[order_id %in% order_ids][order(order_id)]
1489482305230:merged <- merge(purchases_customer[purchase_date == ymd('2017-02-11')], purchases_si[purchase_date == ymd('2016-02-11')], by = c('contact_id', 'order_id'), all = TRUE)
1489482306994:merged[
1489482307541:,
1489482307971:table(ifelse(
1489482308403:is.na(sales_amount.x), 'missing customer',
1489482308808:ifelse(is.na(sales_amount.y), 'missing si',
1489482309167:ifelse(sales_amount.x == sales_amount.y, 'equal', 'not-equal')
1489482309561:)
1489482309967:))
1489482310380:]
1489482331752:merged <- merge(purchases_customer[purchase_date == ymd('2017-02-11')], purchases_si[purchase_date == ymd('2017-02-11')], by = c('contact_id', 'order_id'), all = TRUE)
1489482332230:merged[
1489482332417:,
1489482332606:table(ifelse(
1489482332773:is.na(sales_amount.x), 'missing customer',
1489482332938:ifelse(is.na(sales_amount.y), 'missing si',
1489482333112:ifelse(sales_amount.x == sales_amount.y, 'equal', 'not-equal')
1489482333276:)
1489482333466:))
1489482333875:]
1489482384018:merged
1489482431358:purchases_customer[, .N, by = purchase_date][order(N)]
1489482445424:merged <- merge(purchases_customer[purchase_date == ymd('2017-02-25')], purchases_si[purchase_date == ymd('2017-02-25')], by = c('contact_id', 'order_id'), all = TRUE)
1489482445834:merged[
1489482446015:,
1489482446183:table(ifelse(
1489482446350:is.na(sales_amount.x), 'missing customer',
1489482446532:ifelse(is.na(sales_amount.y), 'missing si',
1489482446885:ifelse(sales_amount.x == sales_amount.y, 'equal', 'not-equal')
1489482447072:)
1489482447424:))
1489482447753:]
1489485161745:purchases_customer[, max(purchase_date)] + 1
1489485264681:purchases_hds <- getSqlResult(
1489485264682:sql_file = 'sql/purchases_hds_for_date_interval',
1489485264683:customer_id = getIdFromName(selected_customer),
1489485264684:start_date = puchases_customer[, min(purchase_date)],
1489485264684:end_date = purchases_customer[, max(purchase_date)] + 1
1489485264684:)
1489485289259:purchases_hds <- getSqlResult(
1489485289260:sql_file = 'sql/purchases_hds.sql',
1489485289260:customer_id = getIdFromName(selected_customer),
1489485289261:start_date = puchases_customer[, min(purchase_date)],
1489485289262:end_date = purchases_customer[, max(purchase_date)] + 1
1489485289263:)
1489485314623:purchases_hds <- getSqlResult(
1489485314624:sql_file = 'sql/purchases_hds.sql',
1489485314625:customer_id = getIdFromName(selected_customer),
1489485314625:start_date = purchases_customer[, min(purchase_date)],
1489485314625:end_date = purchases_customer[, max(purchase_date)] + 1
1489485314625:)
1489485356114:purchases_hds <- getSqlResult(
1489485356115:sql_file = 'sql/purchases_hds.sql',
1489485356117:customer_id = getIdFromName(selected_customer),
1489485356118:start_date = purchases_customer[, min(purchase_date)],
1489485356119:end_date = purchases_customer[, max(purchase_date)] + 1
1489485356120:)
1489485385544:purchases_si <- getSqlResult(
1489485385545:sql_file = 'sql/purchases_si.sql',
1489485385546:database_name = 'si',
1489485385546:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1489485385547:start_date = purchases_customer[, min(purchase_date)],
1489485385547:end_date = purchases_customer[, max(purchase_date)] + 1
1489485385548:)
1489485504504:purchase_times <- merge(
1489485504504:purchases_hds[, .(contact_id, order_id, campaign_id, event_time, purchase_date_hds = purchase_date)],
1489485504505:purchases_si[, .(contact_id, order_id, campaign_id, purchase_date_si = purchase_date)],
1489485504506:by = c('contact_id', 'order_id', 'campaign_id')
1489485504506:) %>% .[, date_offset := purchase_date_si - purchase_date_hds]
1489485509099:purchase_times %>%
1489485509100:ggplot(aes(x = date_offset)) +
1489485509101:geom_histogram(bins = 20) +
1489485509101:labs(x = 'SI-HDS purchase date difference [days]', y = 'Number of (matched) purchases') +
1489485509101:ggtitle(sprintf('Overall distribution of SI-HDS purchase date differences (%s)', selected_customer))
1489485532394:purchase_times %>%
1489485532395:ggplot(aes(x = purchase_date_si, y = date_offset)) +
1489485532396:geom_point(alpha = 0.2) +
1489485532396:geom_smooth(se = FALSE) +
1489485532396:labs(x = 'SI purchase date', y = 'SI - HDS purchase date difference [days]') +
1489485532396:ggtitle(sprintf('SI-HDS purchase date differences throughout pilot period (%s)', selected_customer))
1489485605269:purchase_times %>%
1489485605270:ggplot(aes(x = factor(hour(purchase_time)),
1489485605271:fill = factor(date_offset))) +
1489485605271:geom_bar(position = 'stack') +
1489485605272:labs(x = 'Hour of purchase based on HDS', y = 'Number of (matched) purchases') +
1489485605273:scale_fill_discrete(guide = guide_legend(title = 'SI - HDS purchase date difference [days]',
1489485605273:byrow = T,
1489485605274:nrow = 1)) +
1489485605274:theme(legend.position = 'bottom') +
1489485605275:ggtitle(sprintf('Distribution of SI - HDS purchase date differences by the hour of purchase (%s)', selected_customer))
1489485605302:purchase_times %>%
1489485605303:ggplot(aes(x = wday(purchase_date_hds, label = TRUE),
1489485605304:fill = factor(date_offset))) +
1489485605304:geom_bar(position = 'stack') +
1489485605305:labs(x = 'Day of purchase based on HDS', y = 'Number of (matched) purchases') +
1489485605305:scale_fill_discrete(guide = guide_legend(title = 'SI - HDS purchase date difference [days]',
1489485605305:byrow = T,
1489485605306:nrow = 1)) +
1489485605306:theme(legend.position = 'bottom') +
1489485605307:ggtitle(sprintf('Distribution of SI - HDS purchase date differences by the HDS day of purchase (%s)', selected_customer))
1489485605756:purchase_times %>%
1489485605757:ggplot(aes(x = wday(purchase_date_si, label = TRUE),
1489485605758:fill = factor(date_offset))) +
1489485605758:geom_bar(position = 'stack') +
1489485605759:labs(x = 'Day of purchase based on SI', y = 'Number of (matched) purchases') +
1489485605759:scale_fill_discrete(guide = guide_legend(title = 'SI - HDS purchase date difference [days]',
1489485605759:byrow = T,
1489485605759:nrow = 1)) +
1489485605760:theme(legend.position = 'bottom') +
1489485605760:ggtitle(sprintf('Distribution of SI - HDS purchase date differences by the SI day of purchase (%s)', selected_customer))
1489485779714:purchase_times %>%
1489485779715:ggplot(aes(x = factor(hour(purchase_time)),
1489485779716:fill = factor(date_offset))) +
1489485779716:geom_bar(position = 'stack') +
1489485779717:labs(x = 'Hour of purchase based on HDS', y = 'Number of (matched) purchases') +
1489485779717:scale_fill_discrete(guide = guide_legend(title = 'SI - HDS purchase date difference [days]',
1489485779717:byrow = T,
1489485779718:nrow = 1)) +
1489485779718:theme(legend.position = 'bottom') +
1489485779718:ggtitle(sprintf('Distribution of SI - HDS purchase date differences by the hour of purchase (%s)', selected_customer))
1489485793247:purchase_times %>%
1489485793248:ggplot(aes(x = factor(hour(event_time)),
1489485793249:fill = factor(date_offset))) +
1489485793249:geom_bar(position = 'stack') +
1489485793250:labs(x = 'Hour of purchase based on HDS', y = 'Number of (matched) purchases') +
1489485793251:scale_fill_discrete(guide = guide_legend(title = 'SI - HDS purchase date difference [days]',
1489485793251:byrow = T,
1489485793252:nrow = 1)) +
1489485793252:theme(legend.position = 'bottom') +
1489485793252:ggtitle(sprintf('Distribution of SI - HDS purchase date differences by the hour of purchase (%s)', selected_customer))
1489488072892:knitr::opts_knit$set(root.dir = normalizePath(".."))
1489488072894:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1489488072896:selected_customer <- params$customer
1489488072898:source('global.R')
1489488091798:getwd()
1489488126178:knitr::opts_knit$set(root.dir = normalizePath(".."))
1489488126181:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1489488126184:selected_customer <- params$customer
1489488129324:source('global.R')
1489488135508:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489488135578:# basic tranforms
1489488135579:raw_data[, `:=`(
1489488135580:purchase_date = as.Date(`Call Date`),
1489488135581:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489488135583:)
1489488135585:]
1489488135596:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489488135599:# resolve email addresses
1489488135600:contact_id_email <- getSqlResult(
1489488135602:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489488135603:database_name = 'suite11',
1489488135604:use_ssh_tunnel = T,
1489488135606:customer_id = getIdFromName("globalshopdirect"),
1489488135609:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489488135611:)
1489488153193:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489488153237:# basic tranforms
1489488153240:raw_data[, `:=`(
1489488153243:purchase_date = as.Date(`Call Date`),
1489488153246:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489488153247:)
1489488153249:]
1489488153259:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489488153261:# resolve email addresses
1489488153263:contact_id_email <- getSqlResult(
1489488153264:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489488153266:database_name = 'suite11',
1489488153267:use_ssh_tunnel = T,
1489488153269:customer_id = getIdFromName("globalshopdirect"),
1489488153270:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489488153279:)
1489488171239:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489488171293:# basic tranforms
1489488171294:raw_data[, `:=`(
1489488171296:purchase_date = as.Date(`Call Date`),
1489488171297:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489488171299:)
1489488171302:]
1489488171310:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489488171312:# resolve email addresses
1489488171314:contact_id_email <- getSqlResult(
1489488171315:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489488171317:database_name = 'suite11',
1489488171319:use_ssh_tunnel = T,
1489488171320:customer_id = getIdFromName("globalshopdirect"),
1489488171322:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489488171324:)
1489488174441:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489488230312:purchases_hds <- getSqlResult(
1489488230313:sql_file = 'sql/purchases_hds.sql',
1489488230314:customer_id = getIdFromName(selected_customer),
1489488230315:start_date = purchases_customer[, min(purchase_date)],
1489488230317:end_date = purchases_customer[, max(purchase_date)] + 1
1489488230319:)
1489488254670:purchases_si <- getSqlResult(
1489488254671:sql_file = 'sql/purchases_si.sql',
1489488254673:database_name = 'si',
1489488254675:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1489488254677:start_date = purchases_customer[, min(purchase_date)],
1489488254679:end_date = purchases_customer[, max(purchase_date)] + 1
1489488254680:)
1489488711794:lapply(names(purchases) function(name) {
1489488711794:setnames(purchases[[name]], "sales_amount", paste("sales_amount", name, sep = "_"))
1489488711795:})
1489488714772:lapply(names(purchases) function(name) {
1489488714773:setnames(purchases[[name]], "sales_amount", paste("sales_amount", name, sep = "_"))
1489488714775:})
1489488741882:lapply(names(purchases) function(name) {
1489488741882:setnames(purchases[[name]], "sales_amount", paste("sales_amount", name, sep = "_"))
1489488741884:})
1489488748743:purchases <- list(
1489488748744:hds = purchases_hds,
1489488748744:si = purchases_si,
1489488748745:customer = purchases_customer
1489488748745:)
1489488748746:lapply(names(purchases) function(name) {
1489488748746:setnames(purchases[[name]], "sales_amount", paste("sales_amount", name, sep = "_"))
1489488748747:})
1489488762291:lapply(names(purchases), function(name) {
1489488762292:setnames(purchases[[name]], "sales_amount", paste("sales_amount", name, sep = "_"))
1489488762296:})
1489488978462:merged_order_level <- lapply(
1489488978463:names(purchases), function(name) {
1489488978464:purchases[[name]][, sum(sales_amount), by = .(order_id, purchase_date)] %>%
1489488978465:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489488978466:}) %>%
1489488978467:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489488997905:purchases <- list(
1489488997906:hds = purchases_hds,
1489488997906:si = purchases_si,
1489489002037:customer = purchases_customer
1489489002438:)
1489489025393:purchases <- list(
1489489025394:hds = purchases_hds,
1489489025395:si = purchases_si,
1489489025395:customer = purchases_customer
1489489025395:)
1489489068719:purchases_hds <- getSqlResult(
1489489068721:sql_file = 'sql/purchases_hds.sql',
1489489068721:customer_id = getIdFromName(selected_customer),
1489489068722:start_date = purchases_customer[, min(purchase_date)],
1489489068722:end_date = purchases_customer[, max(purchase_date)] + 1
1489489068723:)
1489489106460:purchases_si <- getSqlResult(
1489489106460:sql_file = 'sql/purchases_si.sql',
1489489106461:database_name = 'si',
1489489106462:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1489489106462:start_date = purchases_customer[, min(purchase_date)],
1489489106462:end_date = purchases_customer[, max(purchase_date)] + 1
1489489106463:)
1489489112795:purchases <- list(
1489489112796:hds = purchases_hds,
1489489112797:si = purchases_si,
1489489112797:customer = purchases_customer
1489489112797:)
1489489125013:merged_order_level <- lapply(
1489489125014:names(purchases), function(name) {
1489489125015:purchases[[name]][, sum(sales_amount), by = .(order_id, purchase_date)] %>%
1489489125015:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489489125016:}) %>%
1489489125016:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489489176293:purchases$hds[, sum(sales_amount), by = .(order_id, purchase_date)]
1489489193550:merged_order_level <- lapply(
1489489193550:names(purchases), function(name) {
1489489193552:purchases[[name]][, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489489193553:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489489193554:}) %>%
1489489193555:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489489217345:purchases$hds[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)]
1489489241521:purchases$hds[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>% setnames("sales_amount", "buzi")
1489489246393:purchases$hds[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>% setnames("sales_amount", "buzi") %>% .[]
1489489270033:name <- "si"
1489489275472:purchases[[name]]
1489489295795:purchases[[name]][, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)]
1489489309932:purchases[[name]][, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>% setnames('sales_amount', 'cucc') %>% .[]
1489489323998:merged_order_level <- lapply(
1489489323998:names(purchases), function(name) {
1489489323999:purchases[[name]][, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489489323999:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489489324000:})
1489489357769:lapply(
1489489357770:names(purchases), function(name) {
1489489357771:purchases[[name]] %>%
1489489357772:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489489357772:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489489357772:})
1489494574307:lapply(
1489494574308:names(purchases), function(name) {
1489494574309:browser()
1489494574309:purchases[[name]] %>%
1489494574310:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489494574310:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489494574310:})
1489494583498:purchases[[name]]
1489494603091:purchases[[name]]
1489494614443:purchases[[name]]
1489494648702:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489494648750:# basic tranforms
1489494648750:raw_data[, `:=`(
1489494648751:purchase_date = as.Date(`Call Date`),
1489494648752:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489494648752:)
1489494648752:]
1489494648754:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489494648755:# resolve email addresses
1489494648755:contact_id_email <- getSqlResult(
1489494648755:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489494648756:database_name = 'suite11',
1489494648756:use_ssh_tunnel = T,
1489494648756:customer_id = getIdFromName("globalshopdirect"),
1489494648756:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489494648757:)
1489494650806:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489494659533:merged_order_level <- lapply(
1489494659534:names(purchases), function(name) {
1489494659535:browser()
1489494659536:purchases[[name]] %>%
1489494659536:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489494659537:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489494659537:}) %>%
1489494659538:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489494678171:merged_order_level <- lapply(
1489494678171:names(purchases), function(name) {
1489494678172:purchases[[name]] %>%
1489494678172:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489494678173:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489494678173:}) %>%
1489494678173:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489494727537:merged_order_level <- lapply(
1489494727538:names(purchases), function(name) {
1489494727539:browser()
1489494727539:purchases[[name]] %>%
1489494727540:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489494727540:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489494727540:}) %>%
1489494727541:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489494739449:purchases[[name]]
1489494760264:purchases <- list(
1489494760264:hds = purchases_hds,
1489494760265:si = purchases_si,
1489494760265:customer = purchases_customer
1489494760266:)
1489494775643:merged_order_level <- lapply(
1489494775644:names(purchases), function(name) {
1489494775645:purchases[[name]] %>%
1489494775645:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489494775646:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489494775647:}) %>%
1489494775648:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date')), .)
1489494782484:merged_order_level
1489494799486:merged_order_level
1489494945796:merged_order_level[, lapply(.SD, sum)]
1489494987383:merged_order_level[, lapply(.SD, sum), .SDcols = grep('sales', names(merged_order_level), value = TRUE)]
1489495037225:merged_order_level <- lapply(
1489495037226:names(purchases), function(name) {
1489495037227:purchases[[name]] %>%
1489495037227:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489495037227:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489495037228:}) %>%
1489495037228:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date'), all = TRUE), .)
1489495043689:merged_order_level[, lapply(.SD, sum), .SDcols = grep('sales', names(merged_order_level), value = TRUE)]
1489495051265:merged_order_level[, lapply(.SD, sum, na.rm = TRUE), .SDcols = grep('sales', names(merged_order_level), value = TRUE)]
1489495193992:days_considered <- purchases_customer[, unique(purchase_date)]
1489495429780:lapply(purchases, function(dt) {dt[order_id == 'GW50998550']})
1489495529586:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489495529643:# basic tranforms
1489495529644:raw_data[, `:=`(
1489495529645:purchase_date = as.Date(`Call Date`),
1489495529646:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489495529646:)] %>% .[, `:=`(
1489495529647:`Call Date` = NULL,
1489495529647:`Call Time` = NULL
1489495529647:)]
1489495529650:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489495529651:# resolve email addresses
1489495529651:contact_id_email <- getSqlResult(
1489495529651:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489495529652:database_name = 'suite11',
1489495529652:use_ssh_tunnel = T,
1489495529652:customer_id = getIdFromName("globalshopdirect"),
1489495529653:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489495529654:)
1489495531869:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489495531872:purchases_customer[, Email := NULL]
1489495537430:purchases <- list(
1489495537430:hds = purchases_hds,
1489495537431:si = purchases_si,
1489495537432:customer = purchases_customer
1489495537432:)
1489495542976:lapply(purchases, function(dt) {dt[order_id == 'GW50998550']})
1489495621052:lapply(purchases, function(dt) {dt[order_id == 'GW50998317']})
1489495692680:merged_order_level <- lapply(
1489495692680:names(purchases), function(name) {
1489495692682:purchases[[name]] %>%
1489495692682:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489495692683:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489495692684:}) %>%
1489495692685:Reduce(function(...) merge(..., by = c('order_id', 'purchase_date'), all = TRUE), .)
1489495698995:merged_order_level
1489495710450:complete.cases(merged_order_level)
1489495742453:dropNA(merged_order_level)
1489495756524:na.omit(merged_order_level)
1489495779928:lapply(purchases, function(dt) {dt[order_id == 'GW50997342']})
1489495819359:lapply(purchases, function(dt) {dt[order_id == 'GW50938799']})
1489495976453:sapply(purchases, function(dt) nrow(dt[, .N, by = .(order_id, contact_id, purchase_date)][N > 1]))
1489496075986:sapply(purchases, function(dt) {
1489496075986:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489496075987:.[, .N, by = .(contact_id, order_id)] %>%
1489496075988:.[N > 1] %>%
1489496075988:nrow()
1489496075988:})
1489496156064:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489496156065:.[, .N, by = .(contact_id, order_id)] %>%
1489496156066:.[N > 1]
1489496189472:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489496189473:.[, .N, by = .(contact_id, order_id)] %>%
1489496189474:.[order(-N)]
1489496222895:purchases_hds[order_id == 'GW50966766']
1489496266170:purchases_customer[order_id == 'GW50966766']
1489496279364:purchases_si[order_id == 'GW50966766']
1489496315583:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489496349857:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489496434437:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489496600111:lapply(purchases, function(dt) {
1489496600111:dt[, .N, by = .(contact_id, order_id)] %>%
1489496600112:.[, .N, by = order_id] %>%
1489496600113:.[N > 1]  %>%
1489496600114:nrow()
1489496600115:})
1489496619484:lapply(purchases, function(dt) {
1489496619485:dt[, .N, by = .(contact_id, order_id)] %>%
1489496619486:.[, .N, by = order_id] %>%
1489496619487:.[N > 1]
1489496619488:})
1489496893762:purchases$customer
1489497155978:purchases$customer[order_id == 'GW50991695']
1489497242161:purchases$customer[contact_id == 350133755]
1489497255517:purchases$customer[contact_id == 356997455]
1489497284545:purchases$si[order_id == 'GW50991695']
1489497300731:purchases$hds[order_id == 'GW50991695']
1489497332189:purchases$customer[order_id == 'GW50991695']
1489497423983:head*purchases_customer
1489497440886:head(purchases_customer)
1489497563447:getIdFromName('globalshopdirect')
1489498059125:unique(contact_id_email, by = 'Email', mult = 'last')
1489498066861:contact_id_email
1489498096503:unique(contact_id_email, by = 'Email', mult = 'last') %>%
1489498096846:.[tolower(Email) == 'nicholas.mboge@y7mail.com']
1489498130325:contact_id_email[tolower(Email) == 'nicholas.mboge@y7mail.com']
1489498163971:purchases_customer[contact_id == 349988388]
1489498174262:purchases_si[contact_id == 'GW50966147']
1489498178990:purchases_hds[contact_id == 'GW50966147']
1489498210134:unique(contact_id_email, by = 'Email', mult = 'last') %>%
1489498210726:.[contact_id == 356997455]
1489498225054:unique(contact_id_email, by = 'Email', mult = 'last') %>%
1489498225202:.[contact_id == 350133755]
1489498301656:contact_id_email[tolower(Email) == 'nicholas.mboge@y7mail.com']
1489498322848:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM']
1489498337632:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = contact_id)
1489498344274:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = 'contact_id')
1489498347804:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = 'contact_id')
1489498352981:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = 'Email')
1489498358259:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = 'Email', mult = 'last')
1489498361235:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = 'Email', mult = 'first')
1489498365493:?unique
1489498388573:contact_id_email[Email == 'JUSTINTIMITAWILLIAMS@LIVE.COM'] %>% unique(by = 'Email', fromLast = T)
1489498425716:contact_id_email <- getSqlResult(
1489498425717:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489498425718:database_name = 'suite11',
1489498425718:use_ssh_tunnel = T,
1489498425719:customer_id = getIdFromName("globalshopdirect"),
1489498425719:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489498425719:) %>%
1489498425720:unique(by = 'Email', fromLast = TRUE)
1489498427651:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489498427656:purchases_customer[, Email := NULL]
1489498460598:purchases <- list(
1489498460599:hds = purchases_hds,
1489498460599:si = purchases_si,
1489498460600:customer = purchases_customer
1489498460600:)
1489498466418:sapply(purchases, function(dt) {
1489498466419:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489498466421:.[, .N, by = .(contact_id, order_id)] %>%
1489498466422:.[N > 1] %>%
1489498466425:nrow()
1489498466428:})
1489498466462:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489498466463:.[, .N, by = .(contact_id, order_id)] %>%
1489498466465:.[order(-N)]
1489498466514:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489498466553:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489498466585:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489498490927:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489498490966:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489498490994:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489498504146:purchases <- list(
1489498504147:hds = purchases_hds,
1489498504148:si = purchases_si,
1489498504148:customer = purchases_customer
1489498504149:)
1489498509058:sapply(purchases, function(dt) {
1489498509058:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489498509060:.[, .N, by = .(contact_id, order_id)] %>%
1489498509061:.[N > 1] %>%
1489498509062:nrow()
1489498509062:})
1489498509100:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489498509100:.[, .N, by = .(contact_id, order_id)] %>%
1489498509100:.[order(-N)]
1489498509110:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489498509115:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489498509124:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489498519421:lapply(purchases, function(dt) {
1489498519423:dt[, .N, by = .(contact_id, order_id)] %>%
1489498519423:.[, .N, by = order_id] %>%
1489498519424:.[N > 1]
1489498519425:})
1489498526885:sapply(purchases, function(dt) {
1489498526885:dt[, .N, by = .(contact_id, order_id)] %>%
1489498526886:.[, .N, by = order_id] %>%
1489498526887:.[N > 1]
1489498526887:})
1489498541341:sapply(purchases, function(dt) {
1489498541341:dt[, .N, by = .(contact_id, order_id)] %>%
1489498541342:.[, .N, by = order_id] %>%
1489498541342:.[N > 1] %>%
1489498541343:nrow()
1489498541343:})
1489498678689:purchases_hds[
1489498678690:purchase_date == min(purchase_date),
1489498678691:,
1489498678691:by = .(order_id)
1489498678691:]
1489498688562:purchases_hds[
1489498688563:purchase_date == min(purchase_date),
1489498688564:.SD,
1489498688564:by = .(order_id)
1489498688564:]
1489498693234:purchases_hds
1489498744249:purchases_hds[, min_purchase_date := min(purchase_date), by = order_id] %>%
1489498744434:.[purchase_date == min_purchase_date]
1489498749081:purchases_hds
1489498859851:purchases_hds[, min_purchase_date = min(purchase_date), by = order_id]
1489498889253:purchases_hds[, min_purchase_date := min(purchase_date), by = order_id]
1489498899628:purchases_hds
1489498919286:purchases_hds
1489498953628:purchases_hds <- purchases_hds[, min_purchase_date := min(purchase_date), by = order_id] %>%
1489498953629:.[purchase_date == min_purchase_date] %>%
1489498953630:.[, min_purchase_date := NULL]
1489498957646:purchases_hds
1489498959217:purchases_hds
1489499011660:purchases_hds[, sum(sales_amount), by = (purchase_date == min_purchase_date)]
1489499015940:purchases_hds[, min_purchase_date := min(purchase_date), by = order_id]
1489499017088:purchases_hds[, sum(sales_amount), by = (purchase_date == min_purchase_date)]
1489499026630:setwd("/Users/jdivenyi/projects/incentive-followup/notebooks")
1489499039337:setwd("..")
1489499042815:purchases_hds <- getSqlResult(
1489499042816:sql_file = 'sql/purchases_hds.sql',
1489499042817:customer_id = getIdFromName(selected_customer),
1489499042817:start_date = purchases_customer[, min(purchase_date)],
1489499042818:end_date = purchases_customer[, max(purchase_date)] + 1
1489499042819:)
1489499050223:purchases <- list(
1489499050224:hds = purchases_hds,
1489499050225:si = purchases_si,
1489499050225:customer = purchases_customer
1489499050225:)
1489499057468:purchases_hds[, min_purchase_date := min(purchase_date), by = order_id]
1489499060424:purchases_hds[, sum(sales_amount), by = (purchase_date == min_purchase_date)]
1489499078726:purchases_hds[, .(sales_amount = sum(sales_amount)), by = (purchase_date == min_purchase_date)]
1489499106677:purchases_hds <-  purchases_hds[purchase_date == min_purchase_date] %>%
1489499110267:purchases_hds <-  purchases_hds[purchase_date == min_purchase_date] %>%
1489499110267:.[, min_purchase_date := NULL]
1489499116912:purchases_hds <- purchases_hds[purchase_date == min_purchase_date] %>%
1489499116913:.[, min_purchase_date := NULL]
1489499180506:merged_order_level <- lapply(
1489499180507:names(purchases), function(name) {
1489499180507:purchases[[name]] %>%
1489499180508:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489499180508:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489499180508:}) %>%
1489499180509:Reduce(function(...) merge(..., by = 'order_id', all = TRUE), .)
1489499184576:lapply(purchases, function(dt) {dt[order_id == 'GW50998550']})
1489499187504:lapply(purchases, function(dt) {dt[order_id == 'GW50998317']})
1489499190393:lapply(purchases, function(dt) {dt[order_id == 'GW50997342']})
1489499191498:lapply(purchases, function(dt) {dt[order_id == 'GW50938799']})
1489499320274:purchases_hds <- getSqlResult(
1489499320275:sql_file = 'sql/purchases_hds.sql',
1489499320276:customer_id = getIdFromName(selected_customer),
1489499320276:start_date = purchases_customer[, min(purchase_date)],
1489499320277:end_date = purchases_customer[, max(purchase_date)] + 1
1489499320277:)
1489499326886:purchases_hds[, min_event_time := min(event_time), by = order_id]
1489499327691:purchases_hds[, .(sales_amount = sum(sales_amount)), by = (event_time == min_event_time)]
1489499340674:purchases_hds <- purchases_hds[event_time == min_event_time] %>%
1489499349322:purchases_hds <- purchases_hds[event_time == min_event_time] %>%
1489499349322:.[, min_event_time := NULL]
1489499352211:merged_order_level <- lapply(
1489499352458:names(purchases), function(name) {
1489499352459:purchases[[name]] %>%
1489499352460:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489499352460:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489499352461:}) %>%
1489499362405:merged_order_level <- lapply(
1489499362405:names(purchases), function(name) {
1489499362406:purchases[[name]] %>%
1489499362407:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489499362407:setnames("sales_amount", paste("sales_amount", name, sep = "_"))
1489499362408:}) %>%
1489499362408:Reduce(function(...) merge(..., by = 'order_id', all = TRUE), .)
1489499368837:merged_order_level
1489499415938:merged_order_level <- lapply(
1489499415939:names(purchases), function(name) {
1489499415941:purchases[[name]] %>%
1489499415941:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1489499415942:setnames(c("sales_amount", "purchase_date"), paste(c("sales_amount", "purchase_date"), name, sep = "_"))
1489499415943:}) %>%
1489499415944:Reduce(function(...) merge(..., by = 'order_id', all = TRUE), .)
1489499420199:merged_order_level
1489500156960:merged_order_level[, availability := ifelse(
1489500156961:is.na(sales_amount_customer),
1489500156962:ifelse(
1489500156963:is.na(sales_amount_si),
1489500156963:'HDS',
1489500156964:ifelse(is.na(sales_amount_hds), 'SI', 'SI-HDS')
1489500156964:),
1489500156964:ifelse(
1489500156965:is.na(sales_amount_si),
1489500156965:ifelse(is.na(sales_amount_hds), 'customer', 'customer-HDS'),
1489500156965:ifelse(is.na(sales_amount_hds), 'customer-SI', 'all')
1489500156965:)
1489500156966:)]
1489500175322:merged_order_level[, table(availability)]
1489500214649:merged_order_level[, .N, by = availability][, `%` := N/sum(N)*100]
1489500219828:merged_order_level[, .N, by = availability][, `%` := N/sum(N)*100][]
1489500280904:merged_order_level[, .N, by = availability][, `%` := N/sum(N)*100][]
1489500280909:merged_order_level[!is.na(customer_sales_amount)][, .N, by = availability][, `%` := N/sum(N)*100][]
1489500293275:merged_order_level[!is.na(sales_amount_customer)][, .N, by = availability][, `%` := N/sum(N)*100][]
1489501308938:merged_order_level[, `:=`(
1489501308939:diff_customer_hds = sales_amount_customer - sales_amount_hds,
1489501308940:diff_customer_si = sales_amount_customer - sales_amount_si,
1489501308940:diff_si_hds = sales_amount_si - sales_amount_hds
1489501308941:)]
1489501382025:merged_order_level[,
1489501382219:lapply(.SD, mean),
1489501382438:by = availability,
1489501382756:.SDcols = grep('diff', names(merged_order_level), value = TRUE)
1489501386673:]
1489501457601:merged_order_level[,
1489501457603:lapply(.SD, mean),
1489501457604:by = availability,
1489501457604:.SDcols = grep('diff', names(merged_order_level), value = TRUE)
1489501457604:] %>% na.omit()
1489501492627:merged_order_level[,
1489501492628:lapply(.SD, mean),
1489501492629:by = availability,
1489501492629:.SDcols = grep('diff', names(merged_order_level), value = TRUE)
1489501492629:] %>% .[!availability %in% (c('customer', 'HDS', 'SI'))]
1489501530182:merged_order_level[,
1489501530183:lapply(.SD, function(x) mean(x == 0)),
1489501530184:by = availability,
1489501530184:.SDcols = grep('diff', names(merged_order_level), value = TRUE)
1489501530184:] %>% .[!availability %in% (c('customer', 'HDS', 'SI'))]
1489501679452:merged_order_level[purchase_date_customer != purchase_date_si]
1489501744074:merged_order_level[, .N, by = .(purchase_date_si, availability)] %>%
1489501751833:merged_order_level[, .N, by = .(purchase_date_si, availability)] %>%
1489501751834:ggplot(aes(x = purchase_date_si, y = N)) + geom_line()
1489501769994:merged_order_level[, .N, by = .(purchase_date_si, availability)] %>%
1489501774790:merged_order_level[, .N, by = .(purchase_date_si, availability)] %>%
1489501774790:ggplot(aes(x = purchase_date_si, y = N)) + geom_line(aes(group = availability, color = availability))
1489501811834:merged_order_level %>%
1489501812234:[!is.na(sales_amount_customer), .N, by = .(purchase_date_si, availability)] %>%
1489501817140:merged_order_level %>%
1489501817141:[!is.na(sales_amount_customer), .N, by = .(purchase_date_si, availability)] %>%
1489501817142:ggplot(aes(x = purchase_date_si, y = N)) + geom_line(aes(group = availability, color = availability))
1489501828070:merged_order_level[!is.na(sales_amount_customer), .N, by = .(purchase_date_si, availability)] %>%
1489501828071:ggplot(aes(x = purchase_date_si, y = N)) + geom_line(aes(group = availability, color = availability))
1489501866404:merged_order_level[!is.na(sales_amount_customer)] %>%
1489501866404:.[, .N, by = .(purchase_date_si, availability)] %>%
1489501866405:ggplot(aes(x = purchase_date_si, y = N)) + geom_line(aes(group = availability, color = availability))
1489501909380:?geom_bar
1489501920115:merged_order_level[!is.na(sales_amount_customer)] %>%
1489501920116:.[, .N, by = .(purchase_date_si, availability)] %>%
1489501920117:ggplot(aes(x = purchase_date_si, y = N)) + geom_bar(aes(color = availability), position = 'stack')
1489501940314:merged_order_level[!is.na(sales_amount_customer)] %>%
1489501940315:ggplot(aes(x = purchase_date_si)) + geom_bar(aes(color = availability), position = 'stack')
1489501950691:merged_order_level[!is.na(sales_amount_customer)] %>%
1489501950692:ggplot(aes(x = purchase_date_si)) +
1489501950692:geom_bar(aes(fill = availability), position = 'stack')
1489501970780:merged_order_level[!is.na(sales_amount_customer)] %>%
1489501970781:ggplot(aes(x = purchase_date_customer)) +
1489501970782:geom_bar(aes(fill = availability), position = 'stack')
1489502168140:merged_order_level[!is.na(sales_amount_hds)] %>%
1489502168140:ggplot(aes(x = purchase_date_hds)) +
1489502168141:geom_bar(aes(fill = availability), position = 'stack')
1489502260167:merged_order_level[!is.na(sales_amount_si)] %>%
1489502260167:ggplot(aes(x = purchase_date_si)) +
1489502260168:geom_bar(aes(fill = availability), position = 'stack')
1489503762094:suppressPackageStartupMessages(
1489503762573:source('global.R')
1489503762954:)
1489503764250:args = commandArgs(trailingOnly=TRUE)
1489503765059:if (length(args)==0) {
1489503765059:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1489503765060:} else{
1489503765061:selected_customer <- args[1]
1489503765061:}
1489503768775:selected_customer
1489503848618:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1489504093739:selected_time_window <- ifelse(
1489504094112:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1489504094385:ATTRIBUTION_TIME_WINDOW,
1489504094659:customer_settings[[selected_customer]]$incentive_expiration_days
1489504095088:)
1489504101988:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504101988:recom_history, purchases,
1489504101989:source = 'si',
1489504101990:method = 'time',
1489504101990:time_window = selected_time_window
1489504101990:)
1489504108431:recom_history_w_attributions %>%
1489504108431:.[, did_buy := !(is.na(num_purchases))]
1489504108452:recom_history_w_attributions %>%
1489504108452:calculateRateWithErrors(variable = 'did_buy') %>%
1489504108453:plotRatesBySegments(label = 'Purchase rate')
1489504127869:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504127870:recom_history, purchases,
1489504127871:source = 'customer',
1489504127871:method = 'time',
1489504127871:time_window = selected_time_window
1489504127872:)
1489504127878:recom_history_w_attributions %>%
1489504127878:.[, did_buy := !(is.na(num_purchases))]
1489504127903:recom_history_w_attributions %>%
1489504127904:calculateRateWithErrors(variable = 'did_buy') %>%
1489504127904:plotRatesBySegments(label = 'Purchase rate')
1489504152870:purchases_customer
1489504234223:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504234223:recom_history, purchases,
1489504234224:source = 'customer',
1489504234225:method = 'time',
1489504234225:time_window = selected_time_window
1489504234226:)
1489504255885:debug(attributePurchasesToRecomHistory)
1489504261064:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504261065:recom_history, purchases,
1489504261065:source = 'customer',
1489504261066:method = 'time',
1489504261066:time_window = selected_time_window
1489504261067:)
1489504293779:debug(attributePurchasesToRecomHistoryByTime)
1489504361720:purchases[[customer]]
1489504364667:purchases
1489504408183:purchases <- list(
1489504408184:hds = purchases_hds,
1489504408185:si = purchases_si,
1489504408185:customer = purchases_customer
1489504408185:)
1489504416096:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504416097:recom_history, purchases,
1489504416097:source = 'customer',
1489504416098:method = 'time',
1489504416098:time_window = selected_time_window
1489504416099:)
1489504431243:recom_history_w_attributions %>%
1489504431243:.[, did_buy := !(is.na(num_purchases))]
1489504431274:recom_history_w_attributions %>%
1489504431274:calculateRateWithErrors(variable = 'did_buy') %>%
1489504431275:plotRatesBySegments(label = 'Purchase rate')
1489504530274:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504530274:recom_history, purchases,
1489504530275:source = 'HDS',
1489504530276:time_window = selected_time_window
1489504530277:)
1489504530279:recom_history_w_attributions %>%
1489504530279:.[, did_buy := !(is.na(num_purchases))]
1489504530320:recom_history_w_attributions %>%
1489504530320:calculateRateWithErrors(variable = 'did_buy') %>%
1489504530321:plotRatesBySegments(label = 'Purchase rate')
1489504551286:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504551287:recom_history, purchases,
1489504551288:source = 'hds',
1489504551288:time_window = selected_time_window
1489504551289:)
1489504551290:recom_history_w_attributions %>%
1489504551290:.[, did_buy := !(is.na(num_purchases))]
1489504551325:recom_history_w_attributions %>%
1489504551325:calculateRateWithErrors(variable = 'did_buy') %>%
1489504551326:plotRatesBySegments(label = 'Purchase rate')
1489504587347:undebug(attributePurchasesToRecomHistory)
1489504594243:recom_history_w_attributions <- attributePurchasesToRecomHistory(
1489504594243:recom_history, purchases,
1489504594244:source = 'hds',
1489504594245:time_window = selected_time_window
1489504594245:)
1489504598295:recom_history_w_attributions %>%
1489504598296:.[, did_buy := !(is.na(num_purchases))]
1489504600917:recom_history_w_attributions %>%
1489504600918:calculateRateWithErrors(variable = 'did_buy') %>%
1489504600919:plotRatesBySegments(label = 'Purchase rate')
1489656992933:sessionInfo()
1489658322822:library(emsconnectr)
1489658330425:sessionInfo()
1489659521292:q()
1489672948229:knitr::opts_knit$set(root.dir = normalizePath(".."))
1489672948235:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1489672948238:selected_customer <- params$customer
1489672949388:source('global.R')
1489672954596:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1489672954676:# basic tranforms
1489672954678:raw_data[, `:=`(
1489672954679:purchase_date = as.Date(`Call Date`),
1489672954680:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1489672954682:)] %>% .[, `:=`(
1489672954684:`Call Date` = NULL,
1489672954686:`Call Time` = NULL
1489672954688:)]
1489672954708:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1489672954712:# resolve email addresses
1489672954715:contact_id_email <- getSqlResult(
1489672954717:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1489672954720:database_name = 'suite11',
1489672954722:use_ssh_tunnel = T,
1489672954724:customer_id = getIdFromName("globalshopdirect"),
1489672954726:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1489672954728:) %>%
1489672954730:unique(by = 'Email', fromLast = TRUE)
1489672961137:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1489672961144:purchases_customer[, Email := NULL]
1489672966393:purchases_hds <- getSqlResult(
1489672966394:sql_file = 'sql/purchases_hds.sql',
1489672966396:customer_id = getIdFromName(selected_customer),
1489672966397:start_date = purchases_customer[, min(purchase_date)],
1489672966398:end_date = purchases_customer[, max(purchase_date)] + 1
1489672966399:)
1489672969305:purchases_si <- getSqlResult(
1489672969306:sql_file = 'sql/purchases_si.sql',
1489672969308:database_name = 'si',
1489672969309:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1489672969311:start_date = purchases_customer[, min(purchase_date)],
1489672969312:end_date = purchases_customer[, max(purchase_date)] + 1
1489672969314:)
1489672978205:purchases <- list(
1489672978206:hds = purchases_hds,
1489672978207:si = purchases_si,
1489672978209:customer = purchases_customer
1489672978210:)
1489672980311:sapply(purchases, function(dt) {
1489672980312:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489672980313:.[, .N, by = .(contact_id, order_id)] %>%
1489672980314:.[N > 1] %>%
1489672980315:nrow()
1489672980316:})
1489672980362:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489672980364:.[, .N, by = .(contact_id, order_id)] %>%
1489672980365:.[order(-N)]
1489672980400:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489672980458:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489672980489:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489672980530:sapply(purchases, function(dt) {
1489672980531:dt[, .N, by = .(contact_id, order_id)] %>%
1489672980532:.[, .N, by = order_id] %>%
1489672980534:.[N > 1] %>%
1489672980536:nrow()
1489672980540:})
1489672980580:# Deduplicate HDS
1489672980582:purchases_hds[, min_event_time := min(event_time), by = order_id]
1489672980933:purchases_hds[, .(sales_amount = sum(sales_amount)), by = (event_time == min_event_time)]
1489672980944:purchases_hds <- purchases_hds[event_time == min_event_time] %>%
1489672980946:.[, min_event_time := NULL]
1489672980973:purchases <- list(
1489672980974:hds = purchases_hds,
1489672980976:si = purchases_si,
1489672980977:customer = purchases_customer
1489672980979:)
1489673422419:dt1 <- data.table(a = 1:3, b = 2:4)
1489673423143:dt2 <- data.table(x = 3:5, y = 4:6)
1489673423661:dt_list <- list(foo = dt1, bar = dt2)
1489673433452:lapply(dt_list, head)
1489673446724:lapply(dt_list, function(dt) head(dt, 1))
1489673583281:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489673605664:lapply(dt_list, function(dt) dt[a == 1])
1489673612980:dt2 <- data.table(a = 3:5, b = 4:6)
1489673613335:dt_list <- list(foo = dt1, bar = dt2)
1489673614249:lapply(dt_list, function(dt) dt[a == 1])
1489673631575:str(dt1)
1489673635799:str(dt2)
1489673643076:str(purchases_hds)
1489673658031:purchases
1489673666290:lapply(purchases, function(dt) head(dt))
1489673688660:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489673693306:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489673726804:dt1 <- data.table(a = 1:3, b = 2:4)
1489673726810:dt2 <- data.table(a = 3:5, b = 4:6)
1489673726818:dt_list <- list(foo = dt1, bar = dt2)
1489673726827:lapply(dt_list, function(dt) dt[a == 1])
1489673738225:lapply(dt_list, function(dt) dt[a == 1])
1489673762665:sapply(purchases, function(dt) {
1489673762668:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489673762670:.[, .N, by = .(contact_id, order_id)] %>%
1489673762672:.[N > 1] %>%
1489673762673:nrow()
1489673762675:})
1489673762770:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1489673762771:.[, .N, by = .(contact_id, order_id)] %>%
1489673762772:.[order(-N)]
1489673763048:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489673763085:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489673763127:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489673797167:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1489673797203:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1489673797239:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1489741428712:?emsconnectr
1489760005264:signif(0.002)
1489760012321:signif(0.002, digits = 2)
1489760016014:signif(0.002465648, digits = 2)
1489760019110:signif(0.02465648, digits = 2)
1490004832067:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490004832069:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490004832070:selected_customer <- params$customer
1490004832077:source('global.R')
1490004834958:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1490004835025:# basic tranforms
1490004835027:raw_data[, `:=`(
1490004835028:purchase_date = as.Date(`Call Date`),
1490004835029:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490004835031:)] %>% .[, `:=`(
1490004835033:`Call Date` = NULL,
1490004835035:`Call Time` = NULL
1490004835037:)]
1490004835048:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1490004835050:# resolve email addresses
1490004835052:contact_id_email <- getSqlResult(
1490004835053:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1490004835055:database_name = 'suite11',
1490004835056:use_ssh_tunnel = T,
1490004835058:customer_id = getIdFromName("globalshopdirect"),
1490004835060:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1490004835063:) %>%
1490004835066:unique(by = 'Email', fromLast = TRUE)
1490004837130:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490004837139:purchases_customer[, Email := NULL]
1490004837146:purchases_hds <- getSqlResult(
1490004837147:sql_file = 'sql/purchases_hds.sql',
1490004837148:customer_id = getIdFromName(selected_customer),
1490004837150:start_date = purchases_customer[, min(purchase_date)],
1490004837151:end_date = purchases_customer[, max(purchase_date)] + 1
1490004837153:)
1490004881687:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490004881689:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490004881691:selected_customer <- params$customer
1490004884911:source('global.R')
1490004886791:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1490004886850:# basic tranforms
1490004886855:raw_data[, `:=`(
1490004886858:purchase_date = as.Date(`Call Date`),
1490004886860:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490004886863:)] %>% .[, `:=`(
1490004886864:`Call Date` = NULL,
1490004886865:`Call Time` = NULL
1490004886867:)]
1490004886873:setnames(raw_data, c("Order Number", "Total Spent"), c("order_id", "sales_amount"))
1490004886876:# resolve email addresses
1490004886877:contact_id_email <- getSqlResult(
1490004886879:query = 'SELECT id as contact_id, UPPER(_3) as Email FROM #{customer_id}_contact_0 WHERE UPPER(_3) IN (#{contact_email_list});',
1490004886880:database_name = 'suite11',
1490004886882:use_ssh_tunnel = T,
1490004886883:customer_id = getIdFromName("globalshopdirect"),
1490004886885:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1490004886888:) %>%
1490004886890:unique(by = 'Email', fromLast = TRUE)
1490004888150:purchases_customer <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490004888161:purchases_customer[, Email := NULL]
1490004890490:purchases_hds <- getSqlResult(
1490004890491:sql_file = 'sql/purchases_hds.sql',
1490004890492:customer_id = getIdFromName(selected_customer),
1490004890493:start_date = purchases_customer[, min(purchase_date)],
1490004890495:end_date = purchases_customer[, max(purchase_date)] + 1
1490004890496:)
1490004895548:purchases_si <- getSqlResult(
1490004895550:sql_file = 'sql/purchases_si.sql',
1490004895551:database_name = 'si',
1490004895552:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1490004895554:start_date = purchases_customer[, min(purchase_date)],
1490004895555:end_date = purchases_customer[, max(purchase_date)] + 1
1490004895556:)
1490004912439:purchases <- list(
1490004912441:hds = purchases_hds,
1490004912442:si = purchases_si,
1490004912443:customer = purchases_customer
1490004912444:)
1490004914411:sapply(purchases, function(dt) {
1490004914412:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490004914413:.[, .N, by = .(contact_id, order_id)] %>%
1490004914414:.[N > 1] %>%
1490004914416:nrow()
1490004914417:})
1490004914459:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490004914461:.[, .N, by = .(contact_id, order_id)] %>%
1490004914462:.[order(-N)]
1490004914496:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1490004914543:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1490004914582:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1490004914618:sapply(purchases, function(dt) {
1490004914619:dt[, .N, by = .(contact_id, order_id)] %>%
1490004914620:.[, .N, by = order_id] %>%
1490004914622:.[N > 1] %>%
1490004914623:nrow()
1490004914624:})
1490004914833:# Deduplicate HDS
1490004914834:purchases_hds[, min_event_time := min(event_time), by = order_id]
1490004915036:purchases_hds[, .(sales_amount = sum(sales_amount)), by = (event_time == min_event_time)]
1490004915044:purchases_hds <- purchases_hds[event_time == min_event_time] %>%
1490004915046:.[, min_event_time := NULL]
1490004915067:purchases <- list(
1490004915068:hds = purchases_hds,
1490004915069:si = purchases_si,
1490004915070:customer = purchases_customer
1490004915071:)
1490005318141:merged_order_level <- lapply(
1490005318142:names(purchases), function(name) {
1490005318143:purchases[[name]] %>%
1490005318144:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1490005318146:setnames(c("sales_amount", "purchase_date"), paste(c("sales_amount", "purchase_date"), name, sep = "_"))
1490005318147:}) %>%
1490005318148:Reduce(function(...) merge(..., by = 'order_id', all = TRUE), .)
1490005347152:merged_order_level <- lapply(
1490005347153:names(purchases), function(name) {
1490005347155:purchases[[name]] %>%
1490005347158:.[, .(sales_amount = sum(sales_amount)), by = .(order_id, purchase_date)] %>%
1490005347160:setnames(c("sales_amount", "purchase_date"), paste(c("sales_amount", "purchase_date"), name, sep = "_"))
1490005347162:}) %>%
1490005347163:Reduce(function(...) merge(..., by = 'order_id', all = TRUE), .)
1490005371504:merged_order_level[, availability := ifelse(
1490005371505:is.na(sales_amount_customer),
1490005371507:ifelse(
1490005371508:is.na(sales_amount_si),
1490005371510:'HDS',
1490005371512:ifelse(is.na(sales_amount_hds), 'SI', 'SI-HDS')
1490005371513:),
1490005371514:ifelse(
1490005371516:is.na(sales_amount_si),
1490005371517:ifelse(is.na(sales_amount_hds), 'customer', 'customer-HDS'),
1490005371519:ifelse(is.na(sales_amount_hds), 'customer-SI', 'all')
1490005371521:)
1490005371523:)]
1490005371619:merged_order_level[, .N, by = availability][, `%` := N/sum(N)*100][]
1490005371628:merged_order_level[!is.na(sales_amount_customer)][, .N, by = availability][, `%` := N/sum(N)*100][]
1490005371639:merged_order_level[!is.na(sales_amount_customer)] %>%
1490005371640:ggplot(aes(x = purchase_date_customer)) +
1490005371642:geom_bar(aes(fill = availability), position = 'stack')
1490005372049:merged_order_level[!is.na(sales_amount_hds)] %>%
1490005372050:ggplot(aes(x = purchase_date_hds)) +
1490005372052:geom_bar(aes(fill = availability), position = 'stack')
1490005372455:merged_order_level[!is.na(sales_amount_si)] %>%
1490005372456:ggplot(aes(x = purchase_date_si)) +
1490005372457:geom_bar(aes(fill = availability), position = 'stack')
1490005849358:merged_order_level[, `:=`(
1490005849359:diff_customer_hds = sales_amount_customer - sales_amount_hds,
1490005849360:diff_customer_si = sales_amount_customer - sales_amount_si,
1490005849361:diff_si_hds = sales_amount_si - sales_amount_hds
1490005849363:)]
1490005849366:merged_order_level[,
1490005849368:lapply(.SD, mean),
1490005849369:by = availability,
1490005849371:.SDcols = grep('diff', names(merged_order_level), value = TRUE)
1490005849373:] %>% .[!availability %in% (c('customer', 'HDS', 'SI'))]
1490005849410:merged_order_level[,
1490005849412:lapply(.SD, function(x) mean(x == 0)),
1490005849413:by = availability,
1490005849414:.SDcols = grep('diff', names(merged_order_level), value = TRUE)
1490005849416:] %>% .[!availability %in% (c('customer', 'HDS', 'SI'))]
1490090750370:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% data.table()
1490090754441:raw_data
1490090852029:raw_data[1]
1490090857943:raw_data[2:]
1490090890375:raw_data[2:.N]
1490090959043:raw_data[2:.N][, as.double.POSIXlt(timestamp)]
1490090970650:as.POSIXct(42795.999247685184)
1490091222240:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% head(1)
1490091235514:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% head(1) %>% as.character()
1490091252755:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490091272710:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490091273243:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>% data.table()
1490091273841:setnames(raw_data, header)
1490091278545:raw_data
1490091303923:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>% data.table()
1490091306549:raw_data
1490091337848:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490091337849:data.table() %>% na.omit()
1490091338042:setnames(raw_data, header)
1490091342473:raw_data
1490091419686:raw_data[order_id == 100983715]
1490098548025:packrat::restore(prompt = FALSE)
1490098626529:packrat::restore(prompt = FALSE)
1490098644628:install.packages('data.table')
1490098677168:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490098677551:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490098677552:data.table() %>% na.omit()
1490098680707:source('global.R')
1490098686152:order_ids <- purchases_customer[purchase_date == ymd('2017-02-11'), order_id]
1490098686617:purchases$si[order_id %in% order_ids][order(order_id)]
1490098692574:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490098693271:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490098693271:data.table() %>% na.omit()
1490098693854:setnames(raw_data, header)
1490098696353:raw_data[, purchase_date = as.Date(timestamp)]
1490098707201:raw_data[, purchase_date := as.Date(timestamp)]
1490098707939:setnames(raw_data, "timestamp", "event_time")
1490098807993:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1490098812194:raw_data[, `:=`(
1490098812195:purchase_date = as.Date(`Call Date`),
1490098812196:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490098812196:)
1490098812196:]
1490098814442:setnames(
1490098814443:raw_data,
1490098814444:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP"),
1490098814444:c("order_id", "product_type", "sales_amount", "price", "shipping_cost", "gross_profit")
1490098814445:)
1490098823010:setnames(
1490098823010:raw_data,
1490098823011:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP"),
1490098823013:c("order_id", "product_type", "sales_amount", "price", "shipping_cost", "gross_profit")
1490098823013:)
1490098830593:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1490098833688:raw_data[, `:=`(
1490098833690:purchase_date = as.Date(`Call Date`),
1490098833691:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490098833691:)]
1490098837539:setnames(
1490098837540:raw_data,
1490098837541:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP"),
1490098837541:c("order_id", "product_type", "sales_amount", "price", "shipping_cost", "gross_profit")
1490098837541:)
1490098843477:contact_id_email <- getSqlResult(
1490098843478:query = 'SELECT id as contact_id, UPPER(_3) as Email
1490098843479:FROM #{customer_id}_contact_0
1490098843479:WHERE UPPER(_3) IN (#{contact_email_list});',
1490098843479:database_name = 'suite11',
1490098843480:use_ssh_tunnel = T,
1490098843480:customer_id = getIdFromName("globalshopdirect"),
1490098843480:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1490098843480:)
1490098845581:raw_data <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490098898192:install.packages('data.table')
1490098908665:packrat::restore(prompt = FALSE)
1490098954572:install.packages('git2r')
1490098984306:packrat::restore(prompt = FALSE)
1490099027293:install.packages('emsconnectr', type='source')
1490099082385:packrat::restore(overwrite.dirty = TRUE)
1490099112691:library(data.table)
1490099140386:source('global.R')
1490099149021:packrat::restore(prompt = FALSE)
1490099162374:install.packages('data.table')
1490099177659:install.packages('data.table', type = 'source')
1490099219248:packrat::status()
1490099253316:source('global.R')
1490099395936:packrat::snapshot(prompt = FALSE)
1490099489735:raw_data <- read_excel('data/GSD - IR data.xlsx') %>% data.table()
1490099489804:# basic tranforms
1490099489805:raw_data[, `:=`(
1490099489806:purchase_date = as.Date(`Call Date`),
1490099489806:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490099489806:)]
1490099489816:setnames(
1490099489817:raw_data,
1490099489818:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP"),
1490099489818:c("order_id", "product_type", "sales_amount", "price", "shipping_cost", "gross_profit")
1490099489819:)
1490099489821:# resolve email addresses
1490099489821:contact_id_email <- getSqlResult(
1490099489822:query = 'SELECT id as contact_id, UPPER(_3) as Email
1490099489822:FROM #{customer_id}_contact_0
1490099489822:WHERE UPPER(_3) IN (#{contact_email_list});',
1490099489823:database_name = 'suite11',
1490099489823:use_ssh_tunnel = T,
1490099489823:customer_id = getIdFromName("globalshopdirect"),
1490099489824:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1490099489824:)
1490099491995:raw_data <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490099496010:purchases_customer <- raw_data[, .(
1490099496011:sales_amount = sum(sales_amount), gross_profit = sum(gross_profit)
1490099496012:),
1490099496012:by = .(contact_id, order_id, purchase_date, event_time)
1490099496012:]
1490099499596:order_ids <- purchases_customer[purchase_date == ymd('2017-02-11'), order_id]
1490099500393:purchases$si[order_id %in% order_ids][order(order_id)]
1490099522213:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490099523863:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490099523864:data.table() %>% na.omit()
1490099524434:setnames(raw_data, header)
1490099525895:raw_data[, purchase_date := as.Date(timestamp)]
1490099526446:setnames(raw_data, "timestamp", "event_time")
1490099643196:aggregatePurchasesByOrders <- function(product_level_dt) {
1490099643196:product_level_dt[,
1490099643197:lapply(.SD, sum), .SDcols = c('sales_amount', 'gross_profit'),
1490099643197:by = .(contact_id, order_id, purchase_date, event_time)
1490099643198:]
1490099643198:}
1490099645662:purchases_customer <- aggregatePurchasesByOrders(raw_data)
1490099650531:raw_data
1490099709189:setnames(
1490099709190:raw_data,
1490099709190:c("timestamp", "full_price", "margin"),
1490099709191:c("event_time", "sales_amount", "gross_profit")
1490099709192:)
1490099719478:raw_data
1490099725851:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490099725985:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490099725985:data.table() %>% na.omit()
1490099726100:setnames(raw_data, header)
1490099726101:# basic tranforms
1490099726101:raw_data[, purchase_date := as.Date(timestamp)]
1490099726103:setnames(
1490099726104:raw_data,
1490099726104:c("timestamp", "full_price", "margin"),
1490099726104:c("event_time", "sales_amount", "gross_profit")
1490099726105:)
1490099732668:purchases_customer <- aggregatePurchasesByOrders(raw_data)
1490099735734:purchases_customer
1490099748338:purchases_customer <- aggregatePurchasesByOrders(raw_data)
1490099767238:raw_data[, purchase_date := as.Date(timestamp)]
1490099767242:setnames(
1490099767243:raw_data,
1490099767243:c("timestamp", "full_price", "margin"),
1490099767244:c("event_time", "sales_amount", "gross_profit")
1490099767244:)
1490099770856:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490099771163:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490099771163:data.table() %>% na.omit()
1490099771268:setnames(raw_data, header)
1490099772140:raw_data[, purchase_date := as.Date(timestamp)]
1490099772557:setnames(
1490099772557:raw_data,
1490099772558:c("timestamp", "full_price", "margin"),
1490099772559:c("event_time", "sales_amount", "gross_profit")
1490099772560:)
1490099775193:purchases_customer <- aggregatePurchasesByOrders(raw_data)
1490174280850:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490174280853:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490174280855:selected_customer <- params$customer
1490174280858:data_source <- params$source
1490174284126:source('global.R')
1490174287047:# Load incentive history
1490174287048:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490174294704:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490174294729:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490174294779:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490174295411:n_bins <- 4
1490174295413:recom_history <- recom_history[order(buying_prob)] %>%
1490174295415:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490174297462:if (data_source == 'si') {
1490174297463:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490174297464:recom_history, purchases,
1490174297465:source = 'si',
1490174297467:method = 'time',
1490174297468:time_window = 7
1490174297469:)
1490174297470:} else if (data_source == 'hds') {
1490174297471:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490174297473:recom_history, purchases,
1490174297475:source = 'hds'
1490174297476:)
1490174297477:} else if (data_source == 'customer') {
1490174297479:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490174297480:purchases$customer <- purchases_customer
1490174297482:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490174297483:recom_history, purchases,
1490174297485:source = 'customer',
1490174297486:method = 'time',
1490174297488:time_window = 7
1490174297489:)
1490174297491:} else {
1490174297493:stop('Data source should be either si, or hds, or customer.')
1490174297495:}
1490175510061:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1490175510063:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1490175510064:cat("??? saved by lower incentives.")
1490175516082:smart_sales <- recom_history_w_attribution[class == "smart",
1490175516083:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490175516084:by = "lifecycle_status"]
1490175516085:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490175516086:sum(smart_sales[["total_sales"]]))
1490175516087:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1490175516089:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1490175516090:cat("??? saved by lower incentives.")
1490175527341:source('global.R')
1490175530087:# Load incentive history
1490175530087:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490175530088:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490175530089:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490175530090:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490175530090:n_bins <- 4
1490175530091:recom_history <- recom_history[order(buying_prob)] %>%
1490175530091:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490175530094:if (data_source == 'si') {
1490175530094:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175530094:recom_history, purchases,
1490175530094:source = 'si',
1490175530095:method = 'time',
1490175530095:time_window = 7
1490175530095:)
1490175530095:} else if (data_source == 'hds') {
1490175530096:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175530096:recom_history, purchases,
1490175530097:source = 'hds'
1490175530097:)
1490175530098:} else if (data_source == 'customer') {
1490175530098:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490175530099:purchases$customer <- purchases_customer
1490175530099:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175530100:recom_history, purchases,
1490175530100:source = 'customer',
1490175530101:method = 'time',
1490175530101:time_window = 7
1490175530102:)
1490175530102:} else {
1490175530102:stop('Data source should be either si, or hds, or customer.')
1490175530103:}
1490175539357:data_source <- 'customer'
1490175545532:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490175545533:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490175545534:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490175545535:n_bins <- 4
1490175545536:recom_history <- recom_history[order(buying_prob)] %>%
1490175545536:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490175545539:if (data_source == 'si') {
1490175545540:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175545540:recom_history, purchases,
1490175545541:source = 'si',
1490175545542:method = 'time',
1490175545542:time_window = 7
1490175545543:)
1490175545543:} else if (data_source == 'hds') {
1490175545544:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175545545:recom_history, purchases,
1490175545545:source = 'hds'
1490175545546:)
1490175545546:} else if (data_source == 'customer') {
1490175545547:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490175545547:purchases$customer <- purchases_customer
1490175545548:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175545548:recom_history, purchases,
1490175545549:source = 'customer',
1490175545550:method = 'time',
1490175545550:time_window = 7
1490175545552:)
1490175545553:} else {
1490175545554:stop('Data source should be either si, or hds, or customer.')
1490175545554:}
1490175560399:selected_customer <- 'brand_alley'
1490175567649:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490175570989:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490175571364:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490175571379:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490175571787:n_bins <- 4
1490175571787:recom_history <- recom_history[order(buying_prob)] %>%
1490175571788:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490175572631:if (data_source == 'si') {
1490175572631:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175572632:recom_history, purchases,
1490175572632:source = 'si',
1490175572633:method = 'time',
1490175572633:time_window = 7
1490175572633:)
1490175572634:} else if (data_source == 'hds') {
1490175572634:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175572635:recom_history, purchases,
1490175572635:source = 'hds'
1490175572636:)
1490175572636:} else if (data_source == 'customer') {
1490175572637:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490175572637:purchases$customer <- purchases_customer
1490175572638:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175572638:recom_history, purchases,
1490175572638:source = 'customer',
1490175572639:method = 'time',
1490175572639:time_window = 7
1490175572639:)
1490175572640:} else {
1490175572640:stop('Data source should be either si, or hds, or customer.')
1490175572641:}
1490175591813:smart_sales <- recom_history_w_attribution[class == "smart",
1490175591814:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490175591815:by = "lifecycle_status"]
1490175591868:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490175591869:sum(smart_sales[["total_sales"]]))
1490175591873:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1490175591874:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1490175591875:cat("??? saved by lower incentives.")
1490175672589:selected_customer <- 'globalshopdirect'
1490175682001:# Load incentive history
1490175682002:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490175687846:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490175687872:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490175687929:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490175688461:n_bins <- 4
1490175688462:recom_history <- recom_history[order(buying_prob)] %>%
1490175688463:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490175689874:if (data_source == 'si') {
1490175689875:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175689876:recom_history, purchases,
1490175689877:source = 'si',
1490175689877:method = 'time',
1490175689877:time_window = 7
1490175689878:)
1490175689878:} else if (data_source == 'hds') {
1490175689879:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175689879:recom_history, purchases,
1490175689879:source = 'hds'
1490175689880:)
1490175689881:} else if (data_source == 'customer') {
1490175689882:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490175689882:purchases$customer <- purchases_customer
1490175689883:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490175689883:recom_history, purchases,
1490175689884:source = 'customer',
1490175689885:method = 'time',
1490175689886:time_window = 7
1490175689887:)
1490175689887:} else {
1490175689888:stop('Data source should be either si, or hds, or customer.')
1490175689888:}
1490175696252:recom_history_w_attribution[
1490175696254:class == "smart",
1490175696254:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490175696255:by = "lifecycle_status"
1490175696255:]
1490175705586:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490175705587:sum(smart_sales[["total_sales"]]))
1490175705589:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1490175705589:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1490175705590:cat("??? saved by lower incentives.")
1490175713017:smart_sales <- recom_history_w_attribution[
1490175713017:class == "smart",
1490175713018:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490175713018:by = "lifecycle_status"
1490175713019:]
1490175713111:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490175713111:sum(smart_sales[["total_sales"]]))
1490175713114:cat(paste0("$", round(sum(smart_sales[["total_sales"]]), 0), " Smart incentive revenue\n"))
1490175713114:cat(paste0(round(100*share_reactivated_sales, 0), " % of this came from re-activated customers.\n"))
1490175713115:cat("??? saved by lower incentives.")
1490175904167:round(smart_sales[, sum(total_sales)])
1490179340036:recom_history_w_attributions %>%
1490179340037:.[did_click == TRUE] %>%
1490179340038:calculateRateWithErrors(variable = 'did_buy')
1490179386279:recom_history_w_attribution %>%
1490179386280:.[did_click == TRUE] %>%
1490179386281:calculateRateWithErrors(variable = 'did_buy')
1490179396094:recom_history_w_attribution
1490179450708:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490179450738:.[did_click == TRUE] %>%
1490179450738:calculateRateWithErrors(variable = 'did_buy')
1490179459683:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))] %>%
1490179459683:.[did_click == TRUE] %>%
1490179459684:calculateRateWithErrors(variable = 'did_buy')
1490179464259:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))] %>%
1490179464260:.[did_click == TRUE] %>%
1490179464261:calculateRateWithErrors(variable = 'did_buy') %>% .[]
1490179510821:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))] %>%
1490179510821:.[did_click == TRUE] %>%
1490179510822:calculateRateWithErrors(variable = 'did_buy') %>%
1490179510823:.[]
1490179516869:recom_history_w_attribution %>%
1490179516870:.[, did_buy := !(is.na(num_purchases))] %>%
1490179516870:.[did_click == TRUE] %>%
1490179516871:calculateRateWithErrors(variable = 'did_buy') %>%
1490179516871:.[]
1490179579471:recom_history_w_attribution %>%
1490179579472:.[, did_buy := !(is.na(num_purchases))] %>%
1490179579473:.[did_click == TRUE] %>%
1490179579473:calculateRateWithErrors(variable = 'did_buy') %>%
1490179579474:.[, .(class, n_click = N, n_purchase = num_variable, click_to_purchase = rate)]
1490179626935:recom_history_w_attribution %>%
1490179626936:.[, did_buy := !(is.na(num_purchases))] %>%
1490179626937:.[did_click == TRUE]
1490179676628:recom_history_w_attribution %>%
1490179676630:.[, did_buy := !(is.na(num_purchases))] %>%
1490179676630:.[did_click == TRUE] %>%
1490179676630:.[, .(n_click = .N, n_purchases = sum(did_buy), click_to_purchase = mean(did_buy)), by = class]
1490182291216:selected_customer <- 'brand_alley'
1490182317958:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490182317959:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490182317961:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490182317963:selected_customer <- params$customer
1490182317966:data_source <- params$source
1490182317975:source('global.R')
1490182318045:# Load incentive history
1490182318047:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490182323435:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490182323462:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490182323509:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490182324058:n_bins <- 4
1490182324060:recom_history <- recom_history[order(buying_prob)] %>%
1490182324062:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490182325495:if (data_source == 'si') {
1490182325496:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490182325497:recom_history, purchases,
1490182325499:source = 'si',
1490182325500:method = 'time',
1490182325501:time_window = 7
1490182325502:)
1490182325504:} else if (data_source == 'hds') {
1490182325506:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490182325508:recom_history, purchases,
1490182325509:source = 'hds'
1490182325511:)
1490182325512:} else if (data_source == 'customer') {
1490182325514:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490182325515:purchases$customer <- purchases_customer
1490182325517:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490182325519:recom_history, purchases,
1490182325521:source = 'customer',
1490182325522:method = 'time',
1490182325524:time_window = 7
1490182325525:)
1490182325527:} else {
1490182325529:stop('Data source should be either si, or hds, or customer.')
1490182325531:}
1490182336714:recom_history_w_attribution
1490182341896:recom_history_w_attribution[class=='smart']
1490182351242:recom_history_w_attribution[class=='smart', table(campaign_id, numericValue )]
1490182361890:recom_history_w_attribution[class=='static', table(campaign_id, numericValue )]
1490182372451:selected_customer
1490182376698:selected_customer <- 'brand_alley'
1490182386196:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490182388870:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490182389510:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490182390002:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490182390807:n_bins <- 4
1490182391690:recom_history <- recom_history[order(buying_prob)] %>%
1490182391692:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490182401089:if (data_source == 'si') {
1490182401090:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490182401092:recom_history, purchases,
1490182401093:source = 'si',
1490182401094:method = 'time',
1490182401095:time_window = 7
1490182401096:)
1490182401097:} else if (data_source == 'hds') {
1490182401098:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490182401100:recom_history, purchases,
1490182401101:source = 'hds'
1490182401103:)
1490182401104:} else if (data_source == 'customer') {
1490182401105:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490182401107:purchases$customer <- purchases_customer
1490182401109:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490182401110:recom_history, purchases,
1490182401111:source = 'customer',
1490182401113:method = 'time',
1490182401114:time_window = 7
1490182401116:)
1490182401117:} else {
1490182401119:stop('Data source should be either si, or hds, or customer.')
1490182401120:}
1490182418864:recom_history_w_attribution[class=='static', table(campaign_id, numericValue )]
1490265139044:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490265139048:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490265139050:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490265139053:selected_customer <- params$customer
1490265139058:data_source <- params$source
1490265140834:source('global.R')
1490265141121:# Load incentive history
1490265141123:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490265146781:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490265146823:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490265146881:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490265147587:n_bins <- 4
1490265147592:recom_history <- recom_history[order(buying_prob)] %>%
1490265147593:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490265149384:if (data_source == 'si') {
1490265149386:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490265149387:recom_history, purchases,
1490265149388:source = 'si',
1490265149389:method = 'time',
1490265149390:time_window = 7
1490265149392:)
1490265149393:} else if (data_source == 'hds') {
1490265149395:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490265149397:recom_history, purchases,
1490265149398:source = 'hds'
1490265149399:)
1490265149401:} else if (data_source == 'customer') {
1490265149403:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490265149404:purchases$customer <- purchases_customer
1490265149406:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490265149408:recom_history, purchases,
1490265149410:source = 'customer',
1490265149412:method = 'time',
1490265149413:time_window = 7
1490265149415:)
1490265149417:} else {
1490265149419:stop('Data source should be either si, or hds, or customer.')
1490265149421:}
1490265164150:source('global.R')
1490265164242:# Load incentive history
1490265164244:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490265169955:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490265169983:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490265170183:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490265171498:n_bins <- 4
1490265171500:recom_history <- recom_history[order(buying_prob)] %>%
1490265171502:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490265172789:if (data_source == 'si') {
1490265172790:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490265172791:recom_history, purchases,
1490265172793:source = 'si',
1490265172794:method = 'time',
1490265172795:time_window = 7
1490265172796:)
1490265172798:} else if (data_source == 'hds') {
1490265172799:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490265172801:recom_history, purchases,
1490265172803:source = 'hds'
1490265172804:)
1490265172805:} else if (data_source == 'customer') {
1490265172807:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490265172808:purchases$customer <- purchases_customer
1490265172810:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490265172812:recom_history, purchases,
1490265172813:source = 'customer',
1490265172816:method = 'time',
1490265172817:time_window = 7
1490265172819:)
1490265172821:} else {
1490265172823:stop('Data source should be either si, or hds, or customer.')
1490265172825:}
1490265285492:recom_history_w_attribution[class == 'smart' & numeric_value == 0, .(n = .N, n_purchase = sum(did_buy), saving = sum(saving))]
1490265291745:recom_history_w_attribution[class == 'smart' & numericValue == 0, .(n = .N, n_purchase = sum(did_buy), saving = sum(saving))]
1490265313330:recom_history_w_attribution %>%
1490265313331:.[, did_buy := !(is.na(num_purchases))] %>%
1490265313332:.[did_click == TRUE] %>%
1490265313332:.[class != 'control',
1490265313332:.(n_click = .N, n_purchases = sum(did_buy), click_to_purchase = scales::percent(mean(did_buy))),
1490265313333:by = class] %>%
1490265313333:knitr::kable()
1490265324224:num_smart_zero_inc <- nrow(recom_history_w_attribution[class == "smart" & numericValue == 0])
1490265326251:num_smart_zero_inc_purchased <- nrow(
1490265326252:recom_history_w_attribution[class == "smart" & numericValue == 0 & !is.na(sales_amount)])
1490265328798:recom_history_w_attribution[class == 'smart' & numericValue == 0, .(n = .N, n_purchase = sum(did_buy), saving = sum(saving))]
1490265333281:recom_history_w_attribution <- merge(recom_history_w_attribution, static_incentives, by = "campaign_id")
1490265335463:static_incentives <- recom_history_w_attribution[
1490265335463:class == "static",
1490265335464:.(campaign_id, static_incentive_type = incentive_type, static_numeric_value = numericValue)]  %>%
1490265335465:unique()
1490265336199:recom_history_w_attribution <- merge(recom_history_w_attribution, static_incentives, by = "campaign_id")
1490265338091:calculateDiscountAmount  <- function(price_paid, incentive_type, numeric_value, shipping_cost) {
1490265338091:ifelse(
1490265338092:incentive_type == 'free_shipping',
1490265338093:shipping_cost,
1490265338093:ifelse(
1490265338094:incentive_type == 'discount',
1490265338094:price_paid * (numeric_value / (100 - numeric_value)),
1490265338095:stop(paste('Unknown incentive type', incentive_type))
1490265338095:)
1490265338096:)
1490265338096:}
1490265338426:recom_history_w_attribution[
1490265338427:class == 'smart',
1490265338428:`:=`(
1490265338428:discount_amount_received = calculateDiscountAmount(
1490265338429:sales_amount, incentive_type, numericValue, shipping_cost),
1490265338429:discount_amount_static = calculateDiscountAmount(
1490265338430:sales_amount, static_incentive_type, static_numeric_value, shipping_cost)
1490265338430:)
1490265338431:] %>%
1490265338431:.[, saving := discount_amount_static - discount_amount_received]
1490265341517:recom_history_w_attribution[class == 'smart' & numericValue == 0, .(n = .N, n_purchase = sum(did_buy), saving = sum(saving))]
1490265354353:num_smart_zero_inc
1490265359102:num_smart_zero_inc_purchased
1490265420601:recom_history_w_attribution[class == 'smart' & numericValue == 0, .(n = .N, n_purchase = sum(did_buy), saving = sum(saving, na.rm = TRUE))]
1490265548072:calculateIncentiveSave <- function(dt) {
1490265548073:dt[, .(n = .N, n_purchase = sum(did_buy), sum_saving = sum(saving, na.rm = TRUE))]
1490265548074:}
1490265551989:recom_history_w_attribution[class == 'smart' & saving > 0]  %>%
1490265551989:calculateIncentiveSave()
1490265620081:recom_history_w_attribution[class == 'smart' & numericValue == 0 & saving == 0]
1490265660371:recom_history_w_attribution[class == 'smart' & saving >= 0]  %>%
1490265660372:calculateIncentiveSave() %>%
1490265660373:knitr::kable()
1490265668562:recom_history_w_attribution[class == 'smart' & saving >= 0]  %>%
1490265668562:calculateIncentiveSave()
1490265695701:extra_purchases_per_campaign <- recom_history_w_attribution[
1490265695702:class == 'smart' & numericValue < 16 & sales_amount > 0,
1490265695702:.(N = .N, extra_revenue = sum(sales_amount)),
1490265695703:by = campaign_id]
1490265698211:total_extra_purchases <- extra_purchases_per_campaign[, .(N = sum(N), extra_revenue = sum(extra_revenue))]
1490265704890:total_extra_purchases
1490266002507:recom_history_w_attribution[, unique(campaign_id, campaign_start_date)]
1490268227173:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490268227176:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490268227178:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490268227180:selected_customer <- params$customer
1490268227184:data_source <- params$source
1490268227197:source('global.R')
1490268230623:# Load incentive history
1490268230625:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490268238743:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490268238773:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490268238815:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490268239466:n_bins <- 4
1490268239469:recom_history <- recom_history[order(buying_prob)] %>%
1490268239470:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490268241548:if (data_source == 'si') {
1490268241549:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490268241550:recom_history, purchases,
1490268241552:source = 'si',
1490268241553:method = 'time',
1490268241554:time_window = 7
1490268241556:)
1490268241557:} else if (data_source == 'hds') {
1490268241558:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490268241560:recom_history, purchases,
1490268241562:source = 'hds'
1490268241563:)
1490268241565:} else if (data_source == 'customer') {
1490268241566:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490268241567:purchases$customer <- purchases_customer
1490268241569:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490268241571:recom_history, purchases,
1490268241573:source = 'customer',
1490268241575:method = 'time',
1490268241576:time_window = 7
1490268241578:)
1490268241579:} else {
1490268241581:stop('Data source should be either si, or hds, or customer.')
1490268241582:}
1490268258480:recom_history_w_attribution %>%
1490268258482:.[, did_buy := !(is.na(num_purchases))] %>%
1490268258483:.[did_click == TRUE] %>%
1490268258484:.[class != 'control',
1490268258485:.(n_click = .N, n_purchases = sum(did_buy), click_to_purchase = scales::percent(mean(did_buy))),
1490268258486:by = class] %>%
1490268258488:knitr::kable()
1490268323405:recom_history_w_attribution
1490268332587:recom_history_w_attribution[, .(campaign_start_date, campaign_id)]
1490268335937:recom_history_w_attribution[, .(campaign_start_date, campaign_id)] %>% unique()
1490268682860:if (selected_customer == 'globalshopdirect' & campaign_id != 1026825) {
1490268682861:recom_history_w_attribution[, `:=`(
1490268682862:shipping_paid = shipping_cost
1490268682862:)]
1490268682862:} else {
1490268682863:recom_history_w_attribution[, `:=`(
1490268682863:shipping_paid = shipping_cost,
1490268682863:shipping_cost = shipping_cost * (numericValue / (1 - numericValue))
1490268682864:)]
1490268682864:}
1490268976028:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490268976030:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490268976031:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490268976033:selected_customer <- params$customer
1490268976036:data_source <- params$source
1490268978201:source('global.R')
1490268978294:# Load incentive history
1490268978295:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490268983700:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490268983726:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490268983777:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490268984873:n_bins <- 4
1490268984876:recom_history <- recom_history[order(buying_prob)] %>%
1490268984877:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490268986086:if (data_source == 'si') {
1490268986087:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490268986088:recom_history, purchases,
1490268986089:source = 'si',
1490268986090:method = 'time',
1490268986091:time_window = 7
1490268986093:)
1490268986094:} else if (data_source == 'hds') {
1490268986095:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490268986097:recom_history, purchases,
1490268986099:source = 'hds'
1490268986100:)
1490268986101:} else if (data_source == 'customer') {
1490268986102:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490268986104:purchases$customer <- purchases_customer
1490268986105:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490268986107:recom_history, purchases,
1490268986108:source = 'customer',
1490268986110:method = 'time',
1490268986112:time_window = 7
1490268986113:)
1490268986115:} else {
1490268986116:stop('Data source should be either si, or hds, or customer.')
1490268986118:}
1490268990052:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490268999553:recom_history_w_attribution
1490269008217:# Handle shipping cost
1490269008218:recom_history_w_attribution[, `:=`(
1490269008220:shipping_paid = shipping,
1490269008221:shipping_cost = shipping * (numericValue / (1 - numericValue))
1490269008223:)]
1490269008340:if (selected_customer == 'globalshopdirect') {
1490269008342:recom_history_w_attribution[campaign_id != 1026825, `:=`(
1490269008343:shipping_paid = shipping,
1490269008345:shipping_cost = shipping
1490269008346:)]
1490269008347:}
1490269008453:}
1490269022601:recom_history_w_attribution
1490269074550:recom_history_w_attribution[!is.na(purchase_date), .(campaign_start_date, class, incentive_type, numericValue, shipping, shipping_cost, shipping_paid)]
1490270959728:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490270959730:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490270959732:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490270959734:selected_customer <- params$customer
1490270959738:data_source <- params$source
1490270961634:source('global.R')
1490270961731:# Load incentive history
1490270961732:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490270967232:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490270967259:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490270967948:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490270968474:n_bins <- 4
1490270968476:recom_history <- recom_history[order(buying_prob)] %>%
1490270968478:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490270969721:if (data_source == 'si') {
1490270969722:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490270969723:recom_history, purchases,
1490270969724:source = 'si',
1490270969726:method = 'time',
1490270969727:time_window = 7
1490270969728:)
1490270969729:} else if (data_source == 'hds') {
1490270969731:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490270969734:recom_history, purchases,
1490270969735:source = 'hds'
1490270969737:)
1490270969738:} else if (data_source == 'customer') {
1490270969740:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490270969742:purchases$customer <- purchases_customer
1490270969744:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490270969745:recom_history, purchases,
1490270969747:source = 'customer',
1490270969748:method = 'time',
1490270969750:time_window = 7
1490270969751:)
1490270969753:} else {
1490270969755:stop('Data source should be either si, or hds, or customer.')
1490270969756:}
1490270974490:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490270985325:# Handle shipping cost
1490270985327:recom_history_w_attribution.[
1490270985328:incentive_type == 'discount',
1490270985329:shipping_cost = shipping_paid * (numericValue / (1 - numericValue))
1490270985330:]
1490270997621:source('global.R')
1490270997700:# Load incentive history
1490270997701:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490271003006:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490271003031:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490271003076:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490271003639:n_bins <- 4
1490271003642:recom_history <- recom_history[order(buying_prob)] %>%
1490271003643:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490271004912:if (data_source == 'si') {
1490271004913:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490271004914:recom_history, purchases,
1490271004915:source = 'si',
1490271004916:method = 'time',
1490271004918:time_window = 7
1490271004919:)
1490271004920:} else if (data_source == 'hds') {
1490271004921:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490271004923:recom_history, purchases,
1490271004925:source = 'hds'
1490271004926:)
1490271004928:} else if (data_source == 'customer') {
1490271004929:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490271004930:purchases$customer <- purchases_customer
1490271004932:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490271004933:recom_history, purchases,
1490271004935:source = 'customer',
1490271004937:method = 'time',
1490271004938:time_window = 7
1490271004940:)
1490271004941:} else {
1490271004943:stop('Data source should be either si, or hds, or customer.')
1490271004945:}
1490271008685:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490271008707:# Handle shipping cost
1490271008708:recom_history_w_attribution.[
1490271008710:incentive_type == 'discount',
1490271008711:shipping_cost = shipping_paid * (numericValue / (1 - numericValue))
1490271008712:]
1490271018358:# Handle shipping cost
1490271018359:recom_history_w_attribution[
1490271018361:incentive_type == 'discount',
1490271018363:shipping_cost = shipping_paid * (numericValue / (1 - numericValue))
1490271018364:]
1490271040639:# Handle shipping cost
1490271040641:recom_history_w_attribution[
1490271040643:incentive_type == 'discount',
1490271040645:shipping_cost := shipping_paid * (numericValue / (1 - numericValue))
1490271040647:]
1490271040843:if (selected_customer == 'globalshopdirect') {
1490271040845:recom_history_w_attribution[
1490271040846:campaign_id != 1026825,
1490271040847:shipping_cost := shipping_paid
1490271040849:]
1490271040850:}
1490271061349:recom_history_w_attribution[!is.na(purchase_date), .(campaign_start_date, class, incentive_type, numericValue, shipping, shipping_cost, shipping_paid)]
1490271069150:recom_history_w_attribution[!is.na(purchase_date), .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271235404:recom_history_w_attribution[
1490271235405:incentive_type == 'discount',
1490271235406:shipping_cost := ifelse(
1490271235407:incentive_type == 'discount',
1490271235407:shipping_paid * (numericValue / (1 - numericValue)),
1490271235407:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271235408:)
1490271235408:]
1490271235636:if (selected_customer == 'globalshopdirect') {
1490271235636:recom_history_w_attribution[
1490271235637:campaign_id != 1026825,
1490271235637:shipping_cost := shipping_paid
1490271235638:]
1490271235638:}
1490271238526:recom_history_w_attribution[!is.na(purchase_date), .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271299322:# Handle shipping cost
1490271299323:recom_history_w_attribution[
1490271299323:incentive_type == 'discount',
1490271299324:shipping_cost := ifelse(
1490271299324:incentive_type == 'discount',
1490271299325:shipping_paid * (numericValue / (1 - numericValue)),
1490271299325:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271299326:)
1490271299326:]
1490271299558:if (selected_customer == 'globalshopdirect') {
1490271299558:recom_history_w_attribution[
1490271299559:campaign_id != 1026825,
1490271299560:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271299560:]
1490271299560:}
1490271301696:recom_history_w_attribution[!is.na(purchase_date), .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271316067:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271333759:recom_history_w_attribution[
1490271333760:incentive_type == 'discount',
1490271333761:shipping_cost := ifelse(
1490271333762:incentive_type == 'discount',
1490271333762:shipping_paid * (numericValue / (100 - numericValue)),
1490271333763:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271333763:)
1490271333764:]
1490271334064:if (selected_customer == 'globalshopdirect') {
1490271334065:recom_history_w_attribution[
1490271334066:campaign_id != 1026825,
1490271334066:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271334067:]
1490271334067:}
1490271337271:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271547138:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271562848:recom_history_w_attribution[
1490271562848:incentive_type == 'discount',
1490271562849:shipping_cost := ifelse(
1490271562850:incentive_type == 'discount',
1490271562850:shipping_paid * (numericValue / (100 - numericValue)),
1490271562850:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271562851:)
1490271562851:]
1490271563084:if (selected_customer == 'globalshopdirect') {
1490271563085:recom_history_w_attribution[
1490271563086:campaign_id != 1026825,
1490271563086:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271563086:]
1490271563086:}
1490271565210:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271662974:# Handle shipping cost
1490271662976:# no discount on shipping
1490271662976:recom_history_w_attribution[
1490271662976:incentive_type == 'discount',
1490271662977:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271662977:]
1490271663391:if (selected_customer == 'globalshopdirect') {
1490271663391:# shipping is also discounted
1490271663392:recom_history_w_attribution[
1490271663392:campaign_id != 1026825,
1490271663392:shipping_cost := ifelse(
1490271663392:incentive_type == 'discount',
1490271663393:shipping_paid * (numericValue / (100 - numericValue)),
1490271663393:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271663393:)
1490271663394:]
1490271663394:}
1490271666772:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271725096:recom_history_w_attribution[
1490271725097:incentive_type == 'discount',
1490271725098:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271725099:]
1490271725551:if (selected_customer == 'globalshopdirect') {
1490271725551:# shipping is also discounted
1490271725551:recom_history_w_attribution[
1490271725552:campaign_id != 1026825,
1490271725552:shipping_cost := ifelse(
1490271725552:incentive_type == 'discount',
1490271725553:shipping_paid / (100 - numericValue),
1490271725553:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271725553:)
1490271725553:]
1490271725554:}
1490271728685:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490271754623:recom_history_w_attribution[
1490271754625:incentive_type == 'discount',
1490271754625:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271754626:]
1490271754843:if (selected_customer == 'globalshopdirect') {
1490271754843:# shipping is also discounted
1490271754844:recom_history_w_attribution[
1490271754845:campaign_id != 1026825,
1490271754845:shipping_cost := ifelse(
1490271754845:incentive_type == 'discount',
1490271754846:shipping_paid / (100 - numericValue) * 100,
1490271754846:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490271754846:)
1490271754847:]
1490271754847:}
1490271758854:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid)]
1490272048199:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid, sales_amount)]
1490272303712:static_incentives <- recom_history_w_attribution[
1490272303713:class == "static",
1490272303714:.(campaign_id, static_incentive_type = incentive_type, static_numeric_value = numericValue)]  %>%
1490272303714:unique()
1490272303884:recom_history_w_attribution <- merge(recom_history_w_attribution, static_incentives, by = "campaign_id")
1490272305290:calculateDiscountAmount  <- function(sales_amount, incentive_type, numeric_value, shipping_cost) {
1490272305291:ifelse(
1490272305292:incentive_type == 'free_shipping',
1490272305292:shipping_cost,
1490272305292:ifelse(
1490272305293:incentive_type == 'discount',
1490272305293:(sales_amount - shipping_paid) * (numeric_value / (100 - numeric_value)) + (shipping_cost - shipping_paid),
1490272305294:stop(paste('Unknown incentive type', incentive_type))
1490272305294:)
1490272305295:)
1490272305295:}
1490272305297:recom_history_w_attribution[
1490272305297:class == 'smart',
1490272305297:`:=`(
1490272305298:discount_amount_received = calculateDiscountAmount(
1490272305298:sales_amount, incentive_type, numericValue, shipping_cost),
1490272305299:discount_amount_static = calculateDiscountAmount(
1490272305299:sales_amount, static_incentive_type, static_numeric_value, shipping_cost)
1490272305300:)
1490272305300:] %>%
1490272305301:.[, saving := discount_amount_static - discount_amount_received]
1490272331826:calculateDiscountAmount  <- function(sales_amount, incentive_type, numeric_value, shipping_paid, shipping_cost) {
1490272331826:ifelse(
1490272331827:incentive_type == 'free_shipping',
1490272331827:shipping_cost,
1490272331827:ifelse(
1490272331828:incentive_type == 'discount',
1490272331828:(sales_amount - shipping_paid) * (numeric_value / (100 - numeric_value)) + (shipping_cost - shipping_paid),
1490272331828:stop(paste('Unknown incentive type', incentive_type))
1490272331829:)
1490272331829:)
1490272331829:}
1490272331830:recom_history_w_attribution[
1490272331831:class == 'smart',
1490272331831:`:=`(
1490272331831:discount_amount_received = calculateDiscountAmount(
1490272331832:sales_amount, incentive_type, numericValue, shipping_paid, shipping_cost),
1490272331832:discount_amount_static = calculateDiscountAmount(
1490272331833:sales_amount, static_incentive_type, static_numeric_value, shipping_paid, shipping_cost)
1490272331834:)
1490272331835:] %>%
1490272331835:.[, saving := discount_amount_static - discount_amount_received]
1490272356745:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid, sales_amount, discount_amount_static, discount_amount_received)]
1490272516856:recom_history_w_attribution[discount_amount_received >= discount_amount_static]
1490272619208:recom_history_w_attribution[class == "smart" & numericValue == 0] %>%
1490272619209:.[, .(n = .N, n_purchases = sum(did_buy), sum_saving = sum(saving))]
1490272638048:recom_history_w_attribution[class == "smart" & numericValue == 0] %>%
1490272638051:.[, .(n = .N, n_purchases = sum(did_buy), sum_saving = sum(saving, na.rm = TRUE))]
1490272716360:recom_history_w_attribution[class == "smart" & numericValue == 0] %>%
1490272716361:calculateSaving()
1490272724991:calculateSaving <- function(dt) {
1490272724992:dt[, .(n = .N, n_purchases = sum(did_buy), sum_saving = sum(saving, na.rm = TRUE))]
1490272724993:}
1490272729077:recom_history_w_attribution[class == "smart" & saving >= 0] %>%
1490272729078:calculateSaving()
1490272792148:recom_history_w_attribution[saving >= 0, table(class, numericValue)]
1490272797836:recom_history_w_attribution[saving >= 0, table(numericValue)]
1490272813214:recom_history_w_attribution[class == 'smart', table(numericValue, saving >= 0)]
1490275309616:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490275309743:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490275309743:data.table() %>% na.omit()
1490275310061:setnames(raw_data, header)
1490275310062:setnames(raw_data, 'contact_id', id)
1490275318632:header <- read_excel('data/Copy of IR_additional_data_template.xlsx') %>% names()
1490275318749:raw_data <- read_excel('data/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490275318749:data.table() %>% na.omit()
1490275318852:setnames(raw_data, header)
1490275318853:setnames(raw_data, 'contact_id', 'id')
1490275324539:raw_data
1490275334020:id_contact_id <- getSqlResult(
1490275334021:query = 'SELECT id, source_id as contact_id
1490275334022:FROM #{customer_name}.dim_contact
1490275334023:WHERE id IN (#{id_list});',
1490275334024:database_name = 'si',
1490275334024:customer_name = "brand_alley",
1490275334025:id_list = paste0("'", raw_data[, contact_id],"'", collapse = ',')
1490275334025:)
1490275334033:product_level_purchases <- merge(raw_data, id_contact_id, by = 'id', all.x = T)
1490275354169:id_contact_id <- getSqlResult(
1490275354170:query = 'SELECT id, source_id as contact_id
1490275354171:FROM #{customer_name}.dim_contact
1490275354171:WHERE id IN (#{id_list});',
1490275354171:database_name = 'si',
1490275354172:customer_name = "brand_alley",
1490275354172:id_list = paste0("'", raw_data[, id],"'", collapse = ',')
1490275354172:)
1490275366487:id_contact_id
1490275370896:product_level_purchases <- merge(raw_data, id_contact_id, by = 'id', all.x = T)
1490275378276:product_level_purchases
1490275757157:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490275757159:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490275757161:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490275757163:selected_customer <- params$customer
1490275757166:data_source <- params$source
1490275772526:source('global.R')
1490275772676:# Load incentive history
1490275772678:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490275775212:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490275775223:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490275775238:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490275775474:n_bins <- 4
1490275775477:recom_history <- recom_history[order(buying_prob)] %>%
1490275775478:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490275775911:if (data_source == 'si') {
1490275775913:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490275775914:recom_history, purchases,
1490275775916:source = 'si',
1490275775917:method = 'time',
1490275775918:time_window = 7
1490275775920:)
1490275775921:} else if (data_source == 'hds') {
1490275775923:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490275775926:recom_history, purchases,
1490275775927:source = 'hds'
1490275775929:)
1490275775930:} else if (data_source == 'customer') {
1490275775932:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490275775934:purchases$customer <- purchases_customer
1490275775935:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490275775937:recom_history, purchases,
1490275775939:source = 'customer',
1490275775940:method = 'time',
1490275775942:time_window = 7
1490275775944:)
1490275775946:} else {
1490275775947:stop('Data source should be either si, or hds, or customer.')
1490275775949:}
1490275777554:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490275786865:recom_history_w_attribution
1490275800417:recom_history_w_attribution[, sum(did_buy), by = class]
1490275833961:product_level_purchases
1490275839179:purchases_customer
1490275854492:# Handle shipping cost
1490275854493:# no discount on shipping
1490275854494:recom_history_w_attribution[
1490275854496:,
1490275854497:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490275854498:]
1490275854631:if (selected_customer == 'globalshopdirect') {
1490275854632:# shipping is also discounted
1490275854633:recom_history_w_attribution[
1490275854634:campaign_id != 1026825,
1490275854636:shipping_cost := ifelse(
1490275854638:incentive_type == 'discount',
1490275854641:shipping_paid / (100 - numericValue) * 100,
1490275854643:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490275854645:)
1490275854647:]
1490275854649:}
1490275870063:recom_history_w_attribution[!is.na(purchase_date) & incentive_type != 'free_shipping', .(campaign_start_date, class, incentive_type, numericValue, shipping_cost, shipping_paid, sales_amount, discount_amount_static, discount_amount_received)]
1490275876383:smart_sales <- recom_history_w_attribution[
1490275876384:class == "smart",
1490275876386:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490275876387:by = "lifecycle_status"
1490275876388:]
1490275876443:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490275876445:sum(smart_sales[["total_sales"]]))
1490275881795:recom_history_w_attribution %>%
1490275881796:.[did_click == TRUE] %>%
1490275881797:.[class != 'control',
1490275881799:.(n_click = .N, n_purchases = sum(did_buy), click_to_purchase = scales::percent(mean(did_buy))),
1490275881800:by = class] %>%
1490275881802:knitr::kable()
1490275922611:recom_history_w_attribution[, sum(did_buy), by = class]
1490275926570:recom_history_w_attribution[did_click, sum(did_buy), by = class]
1490275931908:recom_history_w_attribution[did_click == T, sum(did_buy), by = class]
1490275955044:recom_history_w_attribution[, sum(did_click), by = class]
1490276053031:recom_history_w_attribution[contact_id == 56605207]
1490276066888:purchases_customer[contact_id == 56605207]
1490276101017:recom_history_w_attribution[, campaign_start_date] %>% unique()
1490276226909:purchases_customer[contact_id == 650871831]
1490276331706:purchases_customer[contact_id == 650871831]
1490276372318:recom_history_w_attribution[contact_id == 650871831]
1490276495023:recom_history_w_attribution[contact_id == 684168433]
1490276819573:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490276819575:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490276819577:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490276819580:selected_customer <- params$customer
1490276819585:data_source <- params$source
1490276824379:source('global.R')
1490276824473:# Load incentive history
1490276824475:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490276826767:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490276826779:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490276826793:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490276827360:n_bins <- 4
1490276827363:recom_history <- recom_history[order(buying_prob)] %>%
1490276827364:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490276827779:if (data_source == 'si') {
1490276827780:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490276827782:recom_history, purchases,
1490276827783:source = 'si',
1490276827784:method = 'time',
1490276827785:time_window = 7
1490276827787:)
1490276827788:} else if (data_source == 'hds') {
1490276827789:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490276827791:recom_history, purchases,
1490276827793:source = 'hds'
1490276827794:)
1490276827795:} else if (data_source == 'customer') {
1490276827797:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490276827799:purchases$customer <- purchases_customer
1490276827801:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490276827802:recom_history, purchases,
1490276827804:source = 'customer',
1490276827805:method = 'time',
1490276827807:time_window = 7
1490276827808:)
1490276827810:} else {
1490276827811:stop('Data source should be either si, or hds, or customer.')
1490276827813:}
1490276829342:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490276831787:# Handle shipping cost
1490276831788:# no discount on shipping
1490276831790:recom_history_w_attribution[
1490276831791:,
1490276831793:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490276831794:]
1490276831927:if (selected_customer == 'globalshopdirect') {
1490276831928:# shipping is also discounted
1490276831930:recom_history_w_attribution[
1490276831931:campaign_id != 1026825,
1490276831932:shipping_cost := ifelse(
1490276831934:incentive_type == 'discount',
1490276831937:shipping_paid / (100 - numericValue) * 100,
1490276831940:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490276831942:)
1490276831944:]
1490276831945:}
1490276836909:smart_sales <- recom_history_w_attribution[
1490276836910:class == "smart",
1490276836911:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490276836912:by = "lifecycle_status"
1490276836913:]
1490276836973:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490276836975:sum(smart_sales[["total_sales"]]))
1490276841745:smart_sales <- recom_history_w_attribution[
1490276841746:class == "smart",
1490276841747:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490276841748:by = "lifecycle_status"
1490276841750:]
1490276841791:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490276841792:sum(smart_sales[["total_sales"]]))
1490276845339:recom_history_w_attribution %>%
1490276845340:.[did_buy == TRUE, did_click := TRUE] %>%
1490276845342:.[did_click == TRUE] %>%
1490276845343:.[class != 'control',
1490276845345:.(n_click = .N, n_purchases = sum(did_buy), click_to_purchase = scales::percent(mean(did_buy))),
1490276845346:by = class] %>%
1490276845348:knitr::kable()
1490276877824:static_incentives <- recom_history_w_attribution[
1490276877826:class == "static",
1490276877827:.(campaign_id, static_incentive_type = incentive_type, static_numeric_value = numericValue)]  %>%
1490276877828:unique()
1490276877900:recom_history_w_attribution <- merge(recom_history_w_attribution, static_incentives, by = "campaign_id")
1490276878951:calculateDiscountAmount  <- function(sales_amount, incentive_type, numeric_value, shipping_paid, shipping_cost) {
1490276878953:ifelse(
1490276878955:incentive_type == 'free_shipping',
1490276878957:shipping_cost,
1490276878959:ifelse(
1490276878961:incentive_type == 'discount',
1490276878963:(sales_amount - shipping_paid) * (numeric_value / (100 - numeric_value)) + (shipping_cost - shipping_paid),
1490276878964:stop(paste('Unknown incentive type', incentive_type))
1490276878966:)
1490276878968:)
1490276878970:}
1490276878974:recom_history_w_attribution[
1490276878975:class == 'smart',
1490276878977:`:=`(
1490276878978:discount_amount_received = calculateDiscountAmount(
1490276878980:sales_amount, incentive_type, numericValue, shipping_paid, shipping_cost),
1490276878981:discount_amount_static = calculateDiscountAmount(
1490276878983:sales_amount, static_incentive_type, static_numeric_value, shipping_paid, shipping_cost)
1490276878984:)
1490276878987:] %>%
1490276878990:.[, saving := discount_amount_static - discount_amount_received]
1490276929683:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490276929685:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490276929687:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490276929690:selected_customer <- params$customer
1490276929693:data_source <- params$source
1490276931260:source('global.R')
1490276934388:# Load incentive history
1490276934389:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490276938303:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490276938323:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490276938608:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490276938898:n_bins <- 4
1490276938902:recom_history <- recom_history[order(buying_prob)] %>%
1490276938903:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490276939954:if (data_source == 'si') {
1490276939955:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490276939956:recom_history, purchases,
1490276939957:source = 'si',
1490276939959:method = 'time',
1490276939960:time_window = 7
1490276939961:)
1490276939963:} else if (data_source == 'hds') {
1490276939964:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490276939966:recom_history, purchases,
1490276939968:source = 'hds'
1490276939969:)
1490276939971:} else if (data_source == 'customer') {
1490276939973:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490276939974:purchases$customer <- purchases_customer
1490276939975:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490276939977:recom_history, purchases,
1490276939979:source = 'customer',
1490276939981:method = 'time',
1490276939983:time_window = 7
1490276939985:)
1490276939987:} else {
1490276939989:stop('Data source should be either si, or hds, or customer.')
1490276939990:}
1490276943165:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490276943180:# Handle shipping cost
1490276943181:# no discount on shipping
1490276943183:recom_history_w_attribution[
1490276943184:,
1490276943185:shipping_cost := ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490276943188:]
1490276943322:if (selected_customer == 'globalshopdirect') {
1490276943324:# shipping is also discounted
1490276943326:recom_history_w_attribution[
1490276943328:campaign_id != 1026825,
1490276943329:shipping_cost := ifelse(
1490276943331:incentive_type == 'discount',
1490276943335:shipping_paid / (100 - numericValue) * 100,
1490276943337:ifelse(incentive_type == 'free_shipping', NA, shipping_paid)
1490276943340:)
1490276943343:]
1490276943344:}
1490276943350:smart_sales <- recom_history_w_attribution[
1490276943352:class == "smart",
1490276943354:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490276943355:by = "lifecycle_status"
1490276943357:]
1490276943502:share_reactivated_sales <- (sum(smart_sales[lifecycle_status %in% c("defecting", "inactive")][["total_sales"]]) /
1490276943503:sum(smart_sales[["total_sales"]]))
1490276943512:recom_history_w_attribution %>%
1490276943515:.[did_buy == TRUE, did_click := TRUE] %>%
1490276943517:.[did_click == TRUE] %>%
1490276943518:.[class != 'control',
1490276943520:.(n_click = .N, n_purchases = sum(did_buy), click_to_purchase = scales::percent(mean(did_buy))),
1490276943523:by = class] %>%
1490276943525:knitr::kable()
1490276953714:static_incentives <- recom_history_w_attribution[
1490276953715:class == "static",
1490276953716:.(campaign_id, static_incentive_type = incentive_type, static_numeric_value = numericValue)]  %>%
1490276953716:unique()
1490276958865:static_incentives
1490277021852:recom_history_w_attribution[, table(incentive_type), by = class]
1490277033499:recom_history_w_attribution[, table(incentive_type, class)]
1490277058109:recom_history_w_attribution[, .N, by = .(campaign_id, incentive_type, class)]
1490277099266:recom_history_w_attribution[incentive_type == 'voucher', incentive_type := 'discount']
1490277100704:static_incentives <- recom_history_w_attribution[
1490277100704:class == "static",
1490277100705:.(campaign_id, static_incentive_type = incentive_type, static_numeric_value = numericValue)]  %>%
1490277100706:unique()
1490277104838:static_incentives
1490277107879:recom_history_w_attribution <- merge(recom_history_w_attribution, static_incentives, by = "campaign_id")
1490277110154:calculateDiscountAmount  <- function(sales_amount, incentive_type, numeric_value, shipping_paid, shipping_cost) {
1490277110155:ifelse(
1490277110156:incentive_type == 'free_shipping',
1490277110156:shipping_cost,
1490277110157:ifelse(
1490277110158:incentive_type == 'discount',
1490277110158:(sales_amount - shipping_paid) * (numeric_value / (100 - numeric_value)) + (shipping_cost - shipping_paid),
1490277110159:stop(paste('Unknown incentive type', incentive_type))
1490277110159:)
1490277110160:)
1490277110161:}
1490277113934:recom_history_w_attribution[
1490277113935:class == 'smart',
1490277113936:`:=`(
1490277113936:discount_amount_received = calculateDiscountAmount(
1490277113937:sales_amount, incentive_type, numericValue, shipping_paid, shipping_cost),
1490277113937:discount_amount_static = calculateDiscountAmount(
1490277113938:sales_amount, static_incentive_type, static_numeric_value, shipping_paid, shipping_cost)
1490277113938:)
1490277113939:] %>%
1490277113939:.[, saving := discount_amount_static - discount_amount_received]
1490278819099:recom_history_w_attribution[, .N, by = life_cycle_status]
1490278825671:recom_history_w_attribution
1490278835447:recom_history_w_attribution[, .N, by = lifecycle_status]
1490279101195:product_level_purchases
1490279125355:product_level_purchases[, .(contact_id, order_id, coupon_code)]
1490279129491:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique()
1490279171997:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[!is.null(coupon_code)]
1490279186895:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[coupon_code != NULL, .N, by = coupon_code]
1490279194048:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[coupon_code != "NULL", .N, by = coupon_code]
1490279198733:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[coupon_code != "NULL", .N, keyby = coupon_code]
1490279207607:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[coupon_code != "NULL", .N, by = coupon_code][order(-N)]
1490279213337:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[coupon_code != "NULL", .N, by = coupon_code] %>% .[order(-N)]
1490279266097:recom_history_w_attribution[, .N, by = .(campaign_id, class, numericValue)]
1490279288213:recom_history_w_attribution[, .N, by = .(campaign_id, class, numericValue)] %>% dcast(campaign_id + class ~ numericValue)
1490279850007:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490279850010:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490279850012:selected_customer <- params$customerload(sprintf('data/%s_sent_clean.RData', selected_customer))
1490279882736:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490279882738:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490279882740:selected_customer <- params$customerload(sprintf('data/%s_sent_clean.RData', selected_customer))
1490279894447:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490279894449:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490279894450:selected_customer <- params$customer
1490279894493:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490279924436:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490279924437:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490279924439:selected_customer <- params$customer
1490279924441:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490279930863:list.files('data')
1490279952284:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490279952285:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490279952287:selected_customer <- params$customer
1490279953973:source('global.R')
1490279954062:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490279964403:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490279970142:purchases_hds <- getSqlResult(
1490279970143:sql_file = 'sql/purchases_hds.sql',
1490279970144:customer_id = getIdFromName(selected_customer),
1490279970145:start_date = purchases_customer[, min(purchase_date)],
1490279970147:end_date = purchases_customer[, max(purchase_date)] + 1
1490279970148:)
1490279979519:purchases_si <- getSqlResult(
1490279979520:sql_file = 'sql/purchases_si.sql',
1490279979521:database_name = 'si',
1490279979522:customer_name = getSiNameFromId(getIdFromName(selected_customer)),
1490279979523:start_date = purchases_customer[, min(purchase_date)],
1490279979525:end_date = purchases_customer[, max(purchase_date)] + 1
1490279979526:)
1490279984839:purchases <- list(
1490279984840:hds = purchases_hds,
1490279984841:si = purchases_si,
1490279984842:customer = purchases_customer
1490279984844:)
1490280001230:sapply(purchases, function(dt) {
1490280001235:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490280001237:.[, .N, by = .(contact_id, order_id)] %>%
1490280001239:.[N > 1] %>%
1490280001241:nrow()
1490280001244:})
1490280001267:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490280001269:.[, .N, by = .(contact_id, order_id)] %>%
1490280001271:.[order(-N)]
1490280001310:#Needs to be run in the Console
1490280001312:lapply(purchases, function(dt) {dt[order_id == 'GW50966766']})
1490280001359:lapply(purchases, function(dt) {dt[order_id == 'GW50936626']})
1490280001389:lapply(purchases, function(dt) {dt[order_id == 'GW50937003']})
1490280001420:sapply(purchases, function(dt) {
1490280001421:dt[, .N, by = .(contact_id, order_id)] %>%
1490280001422:.[, .N, by = order_id] %>%
1490280001424:.[N > 1] %>%
1490280001426:nrow()
1490280001427:})
1490280001442:# Deduplicate HDS
1490280001443:purchases_hds[, min_event_time := min(event_time), by = order_id]
1490280001721:purchases_hds[, .(sales_amount = sum(sales_amount)), by = (event_time == min_event_time)]
1490280001733:purchases_hds <- purchases_hds[event_time == min_event_time] %>%
1490280001736:.[, min_event_time := NULL]
1490280001741:purchases <- list(
1490280001742:hds = purchases_hds,
1490280001743:si = purchases_si,
1490280001745:customer = purchases_customer
1490280001746:)
1490280026767:sapply(purchases, function(dt) {
1490280026768:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490280026769:.[, .N, by = .(contact_id, order_id)] %>%
1490280026770:.[N > 1] %>%
1490280026771:nrow()
1490280026772:})
1490280045760:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490280045760:.[, .N, by = .(contact_id, order_id)] %>%
1490280045761:.[order(-N)]
1490280048684:sapply(purchases, function(dt) {
1490280048685:dt[, .N, by = .(contact_id, order_id)] %>%
1490280048686:.[, .N, by = order_id] %>%
1490280048687:.[N > 1] %>%
1490280048688:nrow()
1490280048689:})
1490280105831:sapply(purchases, function(dt) {
1490280105831:dt[, .N, by = .(contact_id, order_id)] %>%
1490280105832:.[, .N, by = order_id] %>%
1490280105832:.[N > 1]
1490280111883:}
1490280114339:)
1490280145859:purchases$si[, .N, by = .(contact_id, order_id)] %>% .[, .N, by = order_id] %>% .[N > 1]
1490280158100:purchases$si[order_id == 100989686]
1490280422221:purchases$si[order_id == 100989683]
1490280532918:purchases$customer[order_id == 100989683]
1490280539631:purchases$hds[order_id == 100989683]
1490280705957:source('global.R')
1490280705989:aggregatePurchasesByOrders <- function(product_level_dt, cols_to_aggregate) {
1490280705990:product_level_dt[,
1490280705990:lapply(.SD, sum), .SDcols = cols_to_aggregate,
1490280705990:by = .(contact_id, order_id, purchase_date, event_time)
1490280705991:]
1490280705991:}
1490280705992:# globalshopdirect -------------------------------------------------------------
1490280705992:raw_data <- read_excel('data/customer-sent-IR-purchases/GSD - IR data.xlsx') %>% data.table()
1490280706047:# basic tranforms
1490280706048:raw_data[, `:=`(
1490280706049:purchase_date = as.Date(`Call Date`),
1490280706049:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490280706050:)]
1490280706052:setnames(
1490280706052:raw_data,
1490280706053:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP"),
1490280706053:c("order_id", "product_type", "sales_amount", "price", "shipping_paid", "gross_profit")
1490280706053:)
1490280706054:# resolve email addresses
1490280706055:contact_id_email <- getSqlResult(
1490280706055:query = 'SELECT id as contact_id, UPPER(_3) as Email
1490280706055:FROM #{customer_id}_contact_0
1490280706056:WHERE UPPER(_3) IN (#{contact_email_list});',
1490280706056:database_name = 'suite11',
1490280706056:use_ssh_tunnel = T,
1490280706056:customer_id = getIdFromName("globalshopdirect"),
1490280706057:contact_email_list = paste0("'", raw_data[, Email],"'", collapse = ',')
1490280706057:)
1490280708188:product_level_purchases <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490280708195:# aggregate by orders
1490280708195:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit', 'shipping_paid'))
1490280708199:save(
1490280708199:list = c('product_level_purchases', 'purchases_customer'),
1490280708200:file = 'data/globalshopdirect_sent_clean.RData'
1490280708200:)
1490280708239:# brand_alley ------------------------------------------------------------------
1490280708240:header <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx') %>% names()
1490280708393:product_level_purchases <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490280708394:data.table() %>% na.omit()
1490280708496:setnames(raw_data, header)
1490280708497:setnames(raw_data, 'contact_id', 'external_id')
1490280708498:# resolve external_id (id) to suite_id (contact_id)
1490280708499:contact_id_external_id <- getSqlResult(
1490280708499:query = 'SELECT external_id, source_id as contact_id
1490280708499:FROM #{customer_name}.dim_contact
1490280708500:WHERE id IN (#{external_id_list});',
1490280708500:database_name = 'si',
1490280708501:customer_name = "brand_alley",
1490280708501:id_list = paste0("'", raw_data[, id],"'", collapse = ',')
1490280708502:)
1490280708506:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280708506:.[, id := NULL]
1490280708509:# basic tranforms
1490280708510:product_level_purchases[, purchase_date := as.Date(timestamp)]
1490280708534:setnames(
1490280708534:product_level_purchases,
1490280708535:c("timestamp", "full_price", "margin"),
1490280708535:c("event_time", "sales_amount", "gross_profit")
1490280708536:)
1490280708537:# aggregate by orders
1490280708539:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit')) %>%
1490280708540:.[,shipping_paid := 5.95]
1490280708548:save(
1490280708549:list = c('product_level_purchases', 'purchases_customer'),
1490280708550:file = 'data/brand_alley_sent_clean.RData'
1490280708550:)
1490280734111:header <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx') %>% names()
1490280737292:header
1490280751359:product_level_purchases <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490280751360:data.table() %>% na.omit()
1490280760189:raw_data <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490280760190:data.table() %>% na.omit()
1490280760930:setnames(raw_data, header)
1490280761730:setnames(raw_data, 'contact_id', 'external_id')
1490280763978:# resolve external_id (id) to suite_id (contact_id)
1490280764316:contact_id_external_id <- getSqlResult(
1490280764316:query = 'SELECT external_id, source_id as contact_id
1490280764317:FROM #{customer_name}.dim_contact
1490280764318:WHERE id IN (#{external_id_list});',
1490280764318:database_name = 'si',
1490280764319:customer_name = "brand_alley",
1490280764319:id_list = paste0("'", raw_data[, id],"'", collapse = ',')
1490280764320:)
1490280764593:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280764594:.[, id := NULL]
1490280784706:contact_id_external_id <- getSqlResult(
1490280784707:query = 'SELECT external_id, source_id as contact_id
1490280784707:FROM #{customer_name}.dim_contact
1490280784708:WHERE id IN (#{external_id_list});',
1490280784710:database_name = 'si',
1490280784710:customer_name = "brand_alley",
1490280784711:external_id_list = paste0("'", raw_data[, external_id],"'", collapse = ',')
1490280784712:)
1490280787519:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280787520:.[, id := NULL]
1490280795064:contact_id_external_id
1490280813270:raw_data[, external_id]
1490280848421:source('global.R')
1490280848461:aggregatePurchasesByOrders <- function(product_level_dt, cols_to_aggregate) {
1490280848462:product_level_dt[,
1490280848462:lapply(.SD, sum), .SDcols = cols_to_aggregate,
1490280848463:by = .(contact_id, order_id, purchase_date, event_time)
1490280848463:]
1490280848463:}
1490280848464:# globalshopdirect -------------------------------------------------------------
1490280848464:raw_data <- read_excel('data/customer-sent-IR-purchases/GSD - IR data.xlsx') %>% data.table()
1490280848512:# basic tranforms
1490280848512:raw_data[, `:=`(
1490280848513:purchase_date = as.Date(`Call Date`),
1490280848513:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490280848514:)]
1490280848516:setnames(
1490280848516:raw_data,
1490280848516:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP"),
1490280848517:c("order_id", "product_type", "sales_amount", "price", "shipping_paid", "gross_profit")
1490280848517:)
1490280848518:# resolve email addresses
1490280848518:contact_id_email <- getSqlResult(
1490280848518:query = 'SELECT id as contact_id, UPPER(_3) as Email
1490280848518:FROM #{customer_id}_contact_0
1490280848519:WHERE UPPER(_3) IN (#{contact_email_list});',
1490280848519:database_name = 'suite11',
1490280848519:use_ssh_tunnel = T,
1490280848520:customer_id = getIdFromName("globalshopdirect"),
1490280848520:contact_email_list = paste0("'", unique(raw_data[, Email]),"'", collapse = ',')
1490280848520:)
1490280850368:product_level_purchases <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490280850372:# aggregate by orders
1490280850373:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit', 'shipping_paid'))
1490280850377:save(
1490280850377:list = c('product_level_purchases', 'purchases_customer'),
1490280850378:file = 'data/globalshopdirect_sent_clean.RData'
1490280850378:)
1490280850418:# brand_alley ------------------------------------------------------------------
1490280850419:header <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx') %>% names()
1490280850597:raw_data <- read_excel('data/customer-sent-IR-purchases/Copy of IR_additional_data_template.xlsx', skip = 2) %>%
1490280850598:data.table() %>% na.omit()
1490280850737:setnames(raw_data, header)
1490280850737:setnames(raw_data, 'contact_id', 'external_id')
1490280850739:# resolve external_id (id) to suite_id (contact_id)
1490280850739:contact_id_external_id <- getSqlResult(
1490280850740:query = 'SELECT external_id, source_id as contact_id
1490280850740:FROM #{customer_name}.dim_contact
1490280850741:WHERE id IN (#{external_id_list});',
1490280850741:database_name = 'si',
1490280850742:customer_name = "brand_alley",
1490280850742:external_id_list = paste0("'", unique(raw_data[, external_id]),"'", collapse = ',')
1490280850743:)
1490280852243:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280852244:.[, id := NULL]
1490280852249:# basic tranforms
1490280852249:product_level_purchases[, purchase_date := as.Date(timestamp)]
1490280852252:setnames(
1490280852252:product_level_purchases,
1490280852253:c("timestamp", "full_price", "margin"),
1490280852253:c("event_time", "sales_amount", "gross_profit")
1490280852253:)
1490280852255:# aggregate by orders
1490280852256:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit')) %>%
1490280852256:.[,shipping_paid := 5.95]
1490280852269:save(
1490280852270:list = c('product_level_purchases', 'purchases_customer'),
1490280852270:file = 'data/brand_alley_sent_clean.RData'
1490280852271:)
1490280864297:contact_id_external_id
1490280882466:paste0("'", unique(raw_data[, external_id]),"'", collapse = ',')
1490280909369:contact_id_external_id <- getSqlResult(
1490280909369:query = 'SELECT external_id, source_id as contact_id
1490280909370:FROM #{customer_name}.dim_contact
1490280909370:WHERE external_id IN (#{external_id_list});',
1490280909371:database_name = 'si',
1490280909371:customer_name = "brand_alley",
1490280909371:external_id_list = paste0("'", unique(raw_data[, external_id]),"'", collapse = ',')
1490280909372:)
1490280917768:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280917768:.[, id := NULL]
1490280925180:contact_id_external_id
1490280948140:raw_data
1490280956667:contact_id_external_id[, external_id := as.numeric(external_id)]
1490280958170:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280958170:.[, id := NULL]
1490280969971:product_level_purchases <- merge(raw_data, contact_id_external_id, by = 'external_id', all.x = T) %>%
1490280969972:.[, external_id := NULL]
1490280972374:product_level_purchases[, purchase_date := as.Date(timestamp)]
1490280972975:setnames(
1490280972975:product_level_purchases,
1490280972976:c("timestamp", "full_price", "margin"),
1490280972977:c("event_time", "sales_amount", "gross_profit")
1490280972977:)
1490280974430:# aggregate by orders
1490280974949:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit')) %>%
1490280974950:.[,shipping_paid := 5.95]
1490280976288:save(
1490280976290:list = c('product_level_purchases', 'purchases_customer'),
1490280976290:file = 'data/brand_alley_sent_clean.RData'
1490280976291:)
1490281162360:purchases_hds[, min_event_time := min(event_time), by = order_id]
1490281170405:sapply(purchases, function(dt) {
1490281170406:dt[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490281170407:.[, .N, by = .(contact_id, order_id)] %>%
1490281170408:.[N > 1] %>%
1490281170408:nrow()
1490281170409:})
1490281172716:purchases_hds[, .N, by = .(order_id, contact_id, purchase_date)] %>%
1490281172717:.[, .N, by = .(contact_id, order_id)] %>%
1490281172718:.[order(-N)]
1490281176795:sapply(purchases, function(dt) {
1490281176796:dt[, .N, by = .(contact_id, order_id)] %>%
1490281176797:.[, .N, by = order_id] %>%
1490281176797:.[N > 1] %>%
1490281176798:nrow()
1490281176798:})
1490281213192:purchases$si[order_id == 100989686]
1490281217524:purchases$hds[order_id == 100989686]
1490281223246:purchases$customer[order_id == 100989686]
1490281271031:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490281275897:purchases <- list(
1490281275897:hds = purchases_hds,
1490281275898:si = purchases_si,
1490281275898:customer = purchases_customer
1490281275899:)
1490281283094:purchases$customer[order_id == 100989686]
1490281289831:purchases$hds[order_id == 100989686]
1490281297057:purchases$si[order_id == 100989686]
1490281365762:purchases$si[contact_id %in% c(242706003, 608693292)]
1490281409808:purchases$si[, .N, by = .(contact_id, order_id)] %>% .[, .N, by = order_id] %>% .[N > 1]
1490281421523:purchases$si[order_id == 100989674]
1490281439267:purchases$customer[order_id == 100989674]
1490281451347:purchases$hds[order_id == 100989674]
1490345132335:purchases_customer
1490345136368:product_level_purchases
1490345200733:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique()
1490345217826:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[, .N, by = coupon_code] %>% order(-N)
1490345224068:product_level_purchases[, .(contact_id, order_id, coupon_code)] %>% unique() %>% .[, .N, by = coupon_code] %>% .[order(-N)]
1490345472082:recom_history_w_attribution[, .N, by = .(campaign_id, numericValue)]
1490345782877:selected_customer <- 'globalshopdirect'
1490345787077:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490345797346:recom_history_w_attribution
1490345813404:recom_history_w_attribution[, .(campaign_start_date, campaign_id)] %>% unique()
1490345827221:recom_history[, .(campaign_start_date, campaign_id)] %>% unique()
1490345920385:getIdFromName('globalshopdirect')
1490346283015:raw_data <- read_excel('data/customer-sent-IR-purchases/GSD - IR data.xlsx') %>% data.table()
1490346285555:# basic tranforms
1490346285966:raw_data[, `:=`(
1490346285967:purchase_date = as.Date(`Call Date`),
1490346285967:event_time = `Call Time` + (as.Date(`Call Date`) - as.Date(`Call Time`))
1490346285968:)]
1490346286521:setnames(
1490346286521:raw_data,
1490346286522:c("Order Number", "Type", "Total Spent", "Price", "P&H", "GP", "utm_source"),
1490346286522:c("order_id", "product_type", "sales_amount", "price", "shipping_paid", "gross_profit", "campaign_name")
1490346286523:)
1490346287601:# resolve email addresses
1490346288095:contact_id_email <- getSqlResult(
1490346288096:query = 'SELECT id as contact_id, UPPER(_3) as Email
1490346288096:FROM #{customer_id}_contact_0
1490346288097:WHERE UPPER(_3) IN (#{contact_email_list});',
1490346288097:database_name = 'suite11',
1490346288098:use_ssh_tunnel = T,
1490346288098:customer_id = getIdFromName("globalshopdirect"),
1490346288099:contact_email_list = paste0("'", unique(raw_data[, Email]),"'", collapse = ',')
1490346288099:)
1490346295780:raw_data <- merge(raw_data, contact_id_email, by = 'Email', all.x = T)
1490346297750:# resolve campaign names to campaign ids
1490346298271:campaign_name_id <- getSqlResult(
1490346298272:query = 'SELECT id as campaign_id, name as campaign_name
1490346298273:FROM campaigns
1490346298273:WHERE name IN (#{campaign_name_list}) AND customer = #{customer_id};',
1490346298274:database_name = 'suite11',
1490346298275:use_ssh_tunnel = T,
1490346298275:customer_id = getIdFromName("globalshopdirect"),
1490346298276:campaign_name_list = paste0("'", unique(raw_data[, campaign_name]), "'", collapse = ',')
1490346298278:)
1490346305674:campaign_name_id
1490346325083:raw_data
1490346333681:raw_data[, unique(campaign_name)]
1490346364323:raw_data[campaign_name == 'Abandoned Cart API 2hour v1.1']
1490346390813:product_level_purchases <- merge(raw_data, campaign_name_id, by = 'campaign_name', all.x = T)
1490346438970:aggregatePurchasesByOrders <- function(product_level_dt, cols_to_aggregate) {
1490346438971:product_level_dt[,
1490346438972:lapply(.SD, sum), .SDcols = cols_to_aggregate,
1490346438972:by = .(contact_id, order_id, campaign_id, purchase_date, event_time)
1490346438973:]
1490346438974:}
1490346442443:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit', 'shipping_paid'))
1490346446022:purchases_customer
1490346495489:aggregatePurchasesByOrders <- function(product_level_dt, cols_to_aggregate) {
1490346495490:product_level_dt[,
1490346495491:lapply(.SD, sum), .SDcols = cols_to_aggregate,
1490346495491:by = .(event_time, purchase_date, contact_id, order_id, campaign_id)
1490346495491:]
1490346495492:}
1490346498745:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit', 'shipping_paid'))
1490346501728:purchases_customer
1490346525072:aggregatePurchasesByOrders <- function(product_level_dt, cols_to_aggregate) {
1490346525073:product_level_dt[,
1490346525074:lapply(.SD, sum), .SDcols = cols_to_aggregate,
1490346525074:by = .(event_time, purchase_date, contact_id, order_id, campaign_id)
1490346525074:] %>%
1490346525075:[order(event_time)]
1490346525075:}
1490346533620:aggregatePurchasesByOrders <- function(product_level_dt, cols_to_aggregate) {
1490346533620:product_level_dt[,
1490346533621:lapply(.SD, sum), .SDcols = cols_to_aggregate,
1490346533622:by = .(event_time, purchase_date, contact_id, order_id, campaign_id)
1490346533622:] %>%
1490346533623:.[order(event_time)]
1490346533624:}
1490346537363:purchases_customer <- aggregatePurchasesByOrders(product_level_purchases, c('sales_amount', 'gross_profit', 'shipping_paid'))
1490346541283:purchases_customer
1490347189040:product_level_purchases
1490347211990:product_level_purchases[`Product Level Coupon Code 1` == '30WOWA']
1490347608267:load('data/globalshopdirect_sent_clean.RData')
1490347612289:purchases_customer]
1490347613641:purchases_customer
1490347623340:load('data/brand_alley_sent_clean.RData')
1490347625067:purchases_customer
1490347643939:knitr::opts_knit$set(root.dir = normalizePath(".."))
1490347643941:knitr::opts_chunk$set(echo = FALSE, results = "hide", message = FALSE)
1490347643943:knitr::knit_hooks$set(inline = function(x) {prettyNum(x, big.mark=",")})
1490347643945:selected_customer <- params$customer
1490347643949:data_source <- params$source
1490347646205:source('global.R')
1490347646309:# Load incentive history
1490347646310:load(sprintf('data/enriched_recom_history_data_%s.RData', selected_customer))
1490347652273:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490347652295:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490347652339:recom_history[, incentive_group := ifelse(class == 'control', FALSE, TRUE)]
1490347653223:n_bins <- 4
1490347653225:recom_history <- recom_history[order(buying_prob)] %>%
1490347653226:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490347654958:if (data_source == 'si') {
1490347654959:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490347654960:recom_history, purchases,
1490347654962:source = 'si',
1490347654963:method = 'time',
1490347654964:time_window = 7
1490347654965:)
1490347654966:} else if (data_source == 'hds') {
1490347654968:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490347654970:recom_history, purchases,
1490347654972:source = 'hds'
1490347654973:)
1490347654975:} else if (data_source == 'customer') {
1490347654976:load(sprintf('data/%s_sent_clean.RData', selected_customer))
1490347654978:purchases$customer <- purchases_customer
1490347654979:if ('campaign_id' %in% names(purchases_customer)) {
1490347654981:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490347654983:recom_history, purchases,
1490347654985:source = 'customer',
1490347654986:method = 'webextend'
1490347654988:)
1490347654990:} else {
1490347654991:selected_time_window <- ifelse(
1490347654993:is.null(customer_settings[[selected_customer]]$incentive_expiration_days),
1490347654995:ATTRIBUTION_TIME_WINDOW,
1490347654998:customer_settings[[selected_customer]]$incentive_expiration_days
1490347655000:)
1490347655003:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490347655005:recom_history, purchases,
1490347655006:source = 'customer',
1490347655008:method = 'time',
1490347655009:time_window = selected_time_window
1490347655011:)
1490347655013:}
1490347655015:} else {
1490347655017:stop('Data source should be either si, or hds, or customer.')
1490347655019:}
1490347656818:recom_history_w_attribution %>% .[, did_buy := !(is.na(num_purchases))]
1490347664832:selected_customer
1490347669930:recom_history_w_attribution
1490347925077:selected_customer
1490348010807:purchases_customer[, .(c(list(num_purchases = .N, purchase_date = min(purchase_date)), lapply(.SD, sum))), .SDcols = c('sales_amount', 'shipping_paid'), by = .(contact_id, campaign_id)]
1490348100673:purchases_customer[, list(num_purchases = .N, purchase_date = min(purchase_date)), by = .(contact_id, campaign_id)]
1490348129504:purchases_customer[, lapply(.SD, sum), .SDcols = c('sales_amount', 'shipping_paid'), by = .(contact_id, campaign_id)]
1490348145197:purchases_customer[, c(list(n = .N), lapply(.SD, sum), .SDcols = c('sales_amount', 'shipping_paid')), by = .(contact_id, campaign_id)]
1490348166546:purchases_customer[, c(list(n = .N), lapply(.SD, sum)), .SDcols = c('sales_amount', 'shipping_paid'), by = .(contact_id, campaign_id)]
1490348175154:purchases_customer[, c(list(n = .N, pd = min(purchase_date)), lapply(.SD, sum)), .SDcols = c('sales_amount', 'shipping_paid'), by = .(contact_id, campaign_id)]
1490348685055:recom_history_w_attribution[
1490348685057:class == "smart",
1490348685058:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490348685058:by = "lifecycle_status"
1490348685059:]
1490348716349:smart_sales <- recom_history_w_attribution[
1490348716349:class %in% c("static", "smart"),
1490348716350:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490348716351:by = .(class, lifecycle_status)
1490348716351:]
1490348720734:smart_sales
1490348741924:smart_sales <- recom_history_w_attribution[
1490348741925:class %in% c("static", "smart"),
1490348741926:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490348741927:by = .(class, lifecycle_status)
1490348741928:] %>% dcast(lifecycle_status ~ class
1490348746090:)
1490348750306:smart_sales
1490348772382:smart_sales <- recom_history_w_attribution[
1490348772383:class %in% c("static", "smart"),
1490348772384:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490348772384:by = .(class, lifecycle_status)
1490348772384:] %>% dcast(lifecycle_status ~ class, value.var = 'total_sales')
1490348810078:smart_sales[, .lapply(.SD, sum)]
1490348813033:smart_sales[, .lapply(.SD, sum)]
1490348818302:smart_sales[, lapply(.SD, sum)]
1490348858641:smart_sales[, lapply(.SD, sum), .SDcols = c('smart', 'static')]
1490348889309:smart_sales[ , .(lifecycle_status = 'total', smart = sum(smart), static = sum(static))]
1490348913121:rbind(
1490348913122:smart_sales,
1490348913123:smart_sales[ , .(lifecycle_status = 'total', smart = sum(smart), static = sum(static))]
1490348913123:)
1490349078631:sales[lifecycle_status %in% c("defecting", "inactive")[]
1490349094154:sales[lifecycle_status %in% c("defecting", "inactive")]
1490349101015:sales <- recom_history_w_attribution[
1490349101016:class %in% c("static", "smart"),
1490349101017:.(total_sales = sum(sales_amount, na.rm = TRUE)),
1490349101017:by = .(class, lifecycle_status)
1490349101017:] %>% dcast(lifecycle_status ~ class, value.var = 'total_sales')
1490349105223:sales[lifecycle_status %in% c("defecting", "inactive")]
1490349187727:sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)] %>% colSums()
1490349216709:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349216710:total_sales[, .(smart_static)]
1490349223231:total_sales <- sales[ , .(lifecycle_status = 'total', smart = sum(smart), static = sum(static))]
1490349227360:total_sales
1490349237521:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349237521:total_sales[, .(smart, static)]
1490349264369:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349264370:total_sales[, .(smart, static)] %>%
1490349264370:scales::percent()
1490349290207:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349290207:total_sales[, .(smart, static)] %>%
1490349290208:.[, lapply(.SD, scales::percent)]
1490349299862:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349299864:total_sales[, .(smart, static)] %>%
1490349299864:class()
1490349308093:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349308094:total_sales[, .(smart, static)]
1490349317678:a <- colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349317679:total_sales[, .(smart, static)]
1490349320003:a
1490349322559:class(a)
1490349333739:a[, scales:percent(smart)]
1490349338580:a[, scales::percent(smart)]
1490349353818:a[, lapply(.SD, scales::percent]
1490349356627:a[, lapply(.SD, scales::percent)]
1490349376660:a <- colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349376660:total_sales[, .(smart, static)]
1490349376667:a[, lapply(.SD, scales::percent)]
1490349388017:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349388018:total_sales[, .(smart, static)] %>%
1490349388019:.[, lapply(.SD, scales::percent)]
1490349402725:colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349402725:total_sales[, .(smart, static)] %>%
1490349402726:.[] %>%
1490349402726:.[, lapply(.SD, scales::percent)]
1490349440716:rbind(
1490349440718:sales,
1490349440722:total_sales
1490349440724:) %>%
1490349440726:knitr::kable()
1490349446969:shares <- colSums(sales[lifecycle_status %in% c("defecting", "inactive"), .(smart, static)]) /
1490349446970:total_sales[, .(smart, static)]
1490349446982:shares[, lapply(.SD, scales::percent)] %>%
1490349446983:knitr::kable()
1490350659286:selected_customer
1490608078746:a <- "2016-07-07T12:00:01Z"
1490608080243:a
1490608107911:strptime(a, format = "%Y-%m-%dT%H:%M:%SZ")
1490700016909:install.packages("emsvisualizer", type = 'source')
1490700194101:devtools::install_github('cttobin/ggthemr')
1490700226708:install.packages("emsvisualizer", type = 'source')
1490700258370:sessionInfo()
1490700402085:vignette("plot_theme")
1490791295640:install.packages("MatchIt")
1490791333172:packrat::snapshot(prompt = FALSE)
1490791430160:library(MatchIt)
1490791437155:source('global.R')
1490791443224:load('data/enriched_recom_history_data_globalshopdirect.RData')
1490791452551:recom_history[is.na(numericValue), numericValue := 0]  # control to zero
1490791453302:recom_history[numericValue == 1, numericValue := 99]  # standardize free shipping
1490791454553:n_bins <- 4
1490791454846:recom_history <- recom_history[order(buying_prob)] %>%
1490791454847:.[!is.na(buying_prob), prob_group := ceiling(n_bins * (1:.N / .N)), by = campaign_start_date]
1490791456809:recom_history_w_attribution <- attributePurchasesToRecomHistory(
1490791456809:recom_history, purchases,
1490791456810:source = 'si',
1490791456811:method = 'time',
1490791456811:time_window = 7
1490791456811:)
1490791463839:recom_history_w_attribution[, is_smart := ifelse(class == "smart", 1, 0)]
1490791465492:recom_history_w_attribution[, is_static := ifelse(class == "static", 1, 0)]
1490791467482:test_data <- recom_history_w_attribution[class != "static" & is.na(buying_prob) == FALSE, .(is_smart, buying_prob)]
1490791468622:summary(test_data)
1490791507176:recom_history_w_attribution[order(-buying_prob)][1:20, .(class, buying_prob)]
1490791565874:vignette("plot_theme")
1490791586577:library(emsvisualizer)
1490791588145:setEmsTheme()
1490791611461:recom_history_w_attribution %>%
1490791611462:ggplot(aes(x = buying_prob)) + geom_density()
1490791651116:recom_history_w_attribution %>%
1490791651117:ggplot(aes(x = log(buying_prob))) + geom_density()
1490791753209:cucc <- c(1, 2, 3, 3, 4, 5, 5, 7)
1490791756320:cut(cucc)
1490791761336:cut(cucc, n = 2)
1490791766178:cut(cucc, breaks = 2)
1490791782314:?cut
1490791806627:cucc
1490791817347:data.table(cucc, cut(cucc, breaks = 2))
1490791853860:cucc <- c(1, 1, 1, 1, 1, 2, 2, 3, 5, 8)
1490791858022:cut(cucc, 3)
1490791990459:test_data <- recom_history_w_attribution[
1490791990460:class != "static" & is.na(buying_prob) == FALSE,
1490791990461:.(is_smart, lbps = cut(log(buying_prob), 100))
1490791990462:]
1490791998818:test_data
1490792043357:test_data %>%
1490792043359:ggplot(aes(x = lbps)) + geom_bar(fill = factor(is_smart))
1490792056148:test_data %>%
1490792056148:ggplot(aes(x = lbps, fill = factor(is_smart))) + geom_bar()
1490792117216:m.out <- matchit(is_smart ~ buying_prob,
1490792117748:data = test_data,
1490792118205:method = "exact")
1490792128704:m.out <- matchit(is_smart ~ lbps,
1490792129154:data = test_data,
1490792129555:method = "exact")
1490792189742:summary(m.out)
1490792219889:m.out
1490792294785:class(m.out)
1490792300016:plot(m.out)
1490792442683:str(m.out)
1490792456069:m.out$weights
1490792465495:m.out$subclass
1490792541841:summary(m.out)
1490792601472:m.data <- match.data(m.out)
1490792604774:m.data
1490792623493:class(m.data)
1490792627668:data.table(m.data)
1490792652010:test_data <- recom_history_w_attribution[
1490792652011:class != "static" & is.na(buying_prob) == FALSE,
1490792652012:.(is_smart, buying_prob, lbps = cut(log(buying_prob), 100))
1490792652013:]
1490792653400:test_data %>%
1490792653401:ggplot(aes(x = lbps, fill = factor(is_smart))) + geom_bar()
1490792662229:test_data <- recom_history_w_attribution[
1490792662231:class != "static" & is.na(buying_prob) == FALSE,
1490792662231:.(is_smart, did_purchase, buying_prob, lbps = cut(log(buying_prob), 100))
1490792662232:]
1490792663424:test_data %>%
1490792663425:ggplot(aes(x = lbps, fill = factor(is_smart))) + geom_bar()
1490792671036:test_data <- recom_history_w_attribution[
1490792671038:class != "static" & is.na(buying_prob) == FALSE,
1490792671039:.(is_smart, buy, buying_prob, lbps = cut(log(buying_prob), 100))
1490792671039:]
1490792677724:test_data <- recom_history_w_attribution[
1490792677725:class != "static" & is.na(buying_prob) == FALSE,
1490792677726:.(is_smart, did_buy, buying_prob, lbps = cut(log(buying_prob), 100))
1490792677726:]
1490792730067:recom_history_w_attribution[, did_buy := !(is.na(num_purchases)]
1490792737770:recom_history_w_attribution[, did_buy := !(is.na(num_purchases))]
1490792738731:test_data <- recom_history_w_attribution[
1490792738731:class != "static" & is.na(buying_prob) == FALSE,
1490792738732:.(is_smart, did_buy, buying_prob, lbps = cut(log(buying_prob), 100))
1490792738732:]
1490792745228:m.out <- matchit(is_smart ~ buying_prob,
1490792745228:data = test_data,
1490792745229:method = "exact")
1490793010669:m.out <- matchit(is_smart ~ lbps,
1490793010670:data = test_data,
1490793010671:method = "exact")
1490793059270:summary(m.out)
1490793067893:m.data <- match.data(m.out)
1490793070050:data.table(m.data)
1490793094731:m.data <- data.table(match.data(m.out))
1490793105505:m.data[order(-buying_prob)]
1490793160198:m.data[subclass == 90]
1490793181505:1/7
1490793206623:m.data[subclass == 58]
1490793229273:m.data[subclass == 58, table(weights, is_smart)]
1490793263361:m.data[, table(is_smart)]
1490793271318:156424/505251
1490793288107:2.29*723
1490793293259:1656*3
1490793303893:1656/0.3
1490793314491:1/7
1490793322090:m.data[subclass == 90]
1490793357400:0.08846*7/2
1490793441409:test_data[, mean(did_buy), by = is_smart]
1490793509293:test_data[, mean(did_buy*weights), by = is_smart]
1490793516613:test_data[, mean(did_buy * weights), by = is_smart]
1490793525668:m.data[, mean(did_buy * weights), by = is_smart]
1490793616818:test_data[, sum(did_buy), by = is_smart]
1490793617934:m.data[, sum(did_buy * weights), by = is_smart]
1490793637887:test_data[, sum(did_buy)/.N, by = is_smart]
1490793644545:m.data[, sum(did_buy * weights)/.N, by = is_smart]
1490793771294:m.data[, mean(did_buy), by = is_smart]
1490793774459:m.data[, mean(did_buy * weights), by = is_smart]
1490793979672:test_data <- recom_history_w_attribution[
1490793979673:class != "static" & is.na(buying_prob) == FALSE,
1490793979673:.(is_smart, did_buy, buying_prob, buying_prob_category = cut(buying_prob, 100))
1490793979674:]
1490793981279:test_data %>%
1490793981279:ggplot(aes(x = buying_prob_category, fill = factor(is_smart))) + geom_bar()
1490793989123:m.out <- matchit(is_smart ~ buying_prob_category,
1490793989579:data = test_data,
1490793990013:method = "exact")
1490794038321:summary(m.out)
1490794058007:summary(m.out)
1490794061198:m.data <- data.table(match.data(m.out))
1490794062535:m.data[, mean(did_buy), by = is_smart]
1490794065307:m.data[, mean(did_buy * weights), by = is_smart]
1490794094438:test_data <- recom_history_w_attribution[
1490794094438:class != "static" & is.na(buying_prob) == FALSE,
1490794094439:.(is_smart, did_buy, buying_prob, buying_prob_category = cut(log(buying_prob), 200))
1490794094440:]
1490794099026:m.out <- matchit(is_smart ~ buying_prob_category,
1490794099205:data = test_data,
1490794099652:method = "exact")
1490794186187:summary(m.out)
1490794197008:m.data <- data.table(match.data(m.out))
1490794198671:m.data[, mean(did_buy), by = is_smart]
1490794199445:m.data[, mean(did_buy * weights), by = is_smart]
1490794228278:test_data <- recom_history_w_attribution[
1490794228279:class != "static" & is.na(buying_prob) == FALSE,
1490794228280:.(is_smart, did_buy, buying_prob, buying_prob_category = cut(log(buying_prob), 50))
1490794228281:]
1490794230881:m.out <- matchit(is_smart ~ buying_prob_category,
1490794231319:data = test_data,
1490794231662:method = "exact")
1490794261477:summary(m.out)
1490794273098:m.data[, mean(did_buy), by = is_smart]
1490794273968:m.data[, mean(did_buy * weights), by = is_smart]
1490794285409:test_data %>%
1490794285412:ggplot(aes(x = buying_prob_category, fill = factor(is_smart))) + geom_bar()
1490794449956:test_data <- recom_history_w_attribution[
1490794449957:class != "static" & is.na(buying_prob) == FALSE,
1490794449958:.(is_smart, did_open, did_buy, buying_prob, buying_prob_category = cut(log(buying_prob), 50))
1490794449958:]
1490794463462:m.out <- matchit(is_smart ~ buying_prob_category,
1490794463463:data = test_data,
1490794463464:method = "exact")
1490794490891:summary(m.out)
1490794492764:m.data <- data.table(match.data(m.out))
1490794499165:m.data[, mean(did_buy), by = is_smart]
1490794499220:m.data[, mean(did_buy * weights), by = is_smart]
1490794508638:m.data[did_open == TRUE, mean(did_buy), by = is_smart]
1490794509032:m.data[did_open == TRUE, mean(did_buy * weights), by = is_smart]
1490795056511:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795056512:test_data <- dt_with_class_buying_prob[
1490795056513:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795056514:.(
1490795056514:contact_id,
1490795056515:is_smart = ifelse(class == "smart", 1, 0),
1490795056516:buying_prob_category = cut(log(buying_prob), 50)
1490795056516:)
1490795056519:]
1490795056520:m.out <- matchit(is_smart ~ buying_prob_category,
1490795056521:data = test_data,
1490795056523:method = "exact")
1490795056524:summary(m.out)
1490795056525:data.table(match.data(m.out))[, .(contact_id, weights)]
1490795056527:}
1490795095461:cucc <- calculateMatchedWeights(recom_history_w_attribution)
1490795143950:cucc
1490795307080:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795307081:matching_data <- dt_with_class_buying_prob[
1490795307083:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795307084:.(
1490795307085:contact_id,
1490795307086:campaign_id,
1490795307088:is_smart = ifelse(class == "smart", 1, 0),
1490795307090:buying_prob_category = cut(log(buying_prob), 50)
1490795307092:)
1490795307094:]
1490795307095:ggplot(
1490795307096:matching_data,
1490795307097:aes(x = buying_prob_category, fill = factor(is_smart)) + geom_bar() +
1490795307099:facet_wrap(~ campaign_id, ncol = 1)
1490795307100:)
1490795307111:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490795307112:data = test_data,
1490795307113:method = "exact")
1490795307114:print(summary(m.out))
1490795307115:data.table(match.data(m.out))[, .(contact_id, weights)]
1490795307116:}
1490795309679:cucc <- calculateMatchedWeights(recom_history_w_attribution)
1490795362625:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795362627:matching_data <- dt_with_class_buying_prob[
1490795362628:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795362628:.(
1490795362629:contact_id,
1490795362630:campaign_id,
1490795362631:is_smart = ifelse(class == "smart", 1, 0),
1490795362631:buying_prob_category = cut(log(buying_prob), 50)
1490795362632:)
1490795362633:]
1490795362635:ggplot(
1490795362637:data = matching_data,
1490795362638:aes(x = buying_prob_category, fill = factor(is_smart))
1490795362640:) +
1490795362641:geom_bar() +
1490795362642:facet_wrap(~ campaign_id, ncol = 1)
1490795362643:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490795362644:data = test_data,
1490795362645:method = "exact")
1490795362646:print(summary(m.out))
1490795362648:data.table(match.data(m.out))[, .(contact_id, weights)]
1490795362650:}
1490795364879:cucc <- calculateMatchedWeights(recom_history_w_attribution)
1490795406978:recom_history_w_attribution %>% names()
1490795428220:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795428221:matching_data <- dt_with_class_buying_prob[
1490795428222:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795428222:.(
1490795428223:contact_id,
1490795428223:campaign_id,
1490795428224:is_smart = ifelse(class == "smart", 1, 0),
1490795428224:buying_prob_category = cut(log(buying_prob), 50)
1490795428225:)
1490795428226:]
1490795428227:ggplot(
1490795428228:data = matching_data,
1490795428228:aes(x = buying_prob_category, fill = factor(is_smart))
1490795428229:) +
1490795428230:geom_bar() +
1490795428231:facet_wrap(~ campaign_id, ncol = 1)
1490795428232:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490795428233:data = test_data,
1490795428234:method = "exact")
1490795428235:print(summary(m.out))
1490795428235:data.table(match.data(m.out))[, .(contact_id, weights)]
1490795428236:}
1490795441418:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795441419:matching_data <- dt_with_class_buying_prob[
1490795441420:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795441422:.(
1490795441423:contact_id,
1490795441423:campaign_id,
1490795441425:is_smart = ifelse(class == "smart", 1, 0),
1490795441426:buying_prob_category = cut(log(buying_prob), 50)
1490795441426:)
1490795441427:]
1490795441428:ggplot(
1490795441429:data = matching_data,
1490795441429:aes(x = buying_prob_category, fill = factor(is_smart))
1490795441432:) +
1490795441435:geom_bar() +
1490795441436:facet_wrap(~ campaign_id, ncol = 1)
1490795441438:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490795441438:data = test_data,
1490795441439:method = "exact")
1490795441440:print(summary(m.out))
1490795441441:data.table(match.data(m.out))[, .(contact_id, campaign_id, weights)]
1490795441443:}
1490795443905:cucc <- calculateMatchedWeights(recom_history_w_attribution)
1490795559917:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795559918:matching_data <- dt_with_class_buying_prob[
1490795559919:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795559919:.(
1490795559919:contact_id,
1490795559920:campaign_id,
1490795559920:is_smart = ifelse(class == "smart", 1, 0),
1490795559921:buying_prob_category = cut(log(buying_prob), 50)
1490795559921:)
1490795559922:]
1490795559923:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490795559924:geom_bar() +
1490795559925:facet_wrap(~ campaign_id, ncol = 1)
1490795559926:print(p)
1490795559927:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490795559928:data = test_data,
1490795559929:method = "exact")
1490795559930:print(summary(m.out))
1490795559931:data.table(match.data(m.out))[, .(contact_id, campaign_id, weights)]
1490795559932:}
1490795563300:cucc <- calculateMatchedWeights(recom_history_w_attribution)
1490795618338:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490795618340:matching_data <- dt_with_class_buying_prob[
1490795618341:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490795618342:.(
1490795618343:contact_id,
1490795618344:campaign_id,
1490795618345:is_smart = ifelse(class == "smart", 1, 0),
1490795618346:buying_prob_category = cut(log(buying_prob), 50)
1490795618349:)
1490795618350:]
1490795618352:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490795618353:geom_bar() +
1490795618353:facet_wrap(~ campaign_id, ncol = 1)
1490795618354:print(p)
1490795618354:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490795618355:data = matching_data,
1490795618356:method = "exact")
1490795618357:print(summary(m.out))
1490795618358:data.table(match.data(m.out))[, .(contact_id, campaign_id, weights)]
1490795618358:}
1490795620800:cucc <- calculateMatchedWeights(recom_history_w_attribution)
1490795682650:cucc
1490795696538:recom_history_w_attribution[, table(class)]
1490795730514:recom_history_w_attribution[!is.na(buying_prob), table(class)]
1490795805533:control_weights <- cucc
1490795841842:recom_history_w_attribution %>%
1490795841843:merge(control_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490795841844:.[, mean(did_buy * weights, na.rm = TRUE), by = .(class, campaign_id)]
1490795868912:recom_history_w_attribution %>%
1490795868913:merge(control_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490795868914:.[, .(purchase_rate = mean(did_buy * weights, na.rm = TRUE)), by = .(class, campaign_id)] %>%
1490795868914:dcast(campaign_id ~ class)
1490795870216:dcast(campaign_id ~ class)
1490795909734:static_weights <- calculateMatchedWeights(recom_history_w_attribution, comparison_class = 'static')
1490796003294:recom_history_w_attribution %>%
1490796003297:merge(control_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490796003298:merge(static_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490796003299:.[, .(purchase_rate = mean(did_buy * weights, na.rm = TRUE)), by = .(class, campaign_id)] %>%
1490796003300:dcast(campaign_id ~ class)
1490796053987:static_weights
1490796117186:recom_history_w_attribution %>%
1490796117189:merge(static_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490796117190:.[, .(purchase_rate = mean(did_buy * weights, na.rm = TRUE)), by = .(class, campaign_id)] %>%
1490796117190:dcast(campaign_id ~ class)
1490796135288:recom_history_w_attribution %>%
1490796135289:.[, .(purchase_rate = mean(did_buy)), by = .(class, campaign_id)] %>%
1490796135290:dcast(campaign_id ~ class)
1490796149863:recom_history_w_attribution %>%
1490796149863:.[!is.na(buying_prob), .(purchase_rate = mean(did_buy)), by = .(class, campaign_id)] %>%
1490796149865:dcast(campaign_id ~ class)
1490796154662:recom_history_w_attribution %>%
1490796154662:merge(control_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490796154663:.[, .(purchase_rate = mean(did_buy * weights, na.rm = TRUE)), by = .(class, campaign_id)] %>%
1490796154664:dcast(campaign_id ~ class)
1490796156503:recom_history_w_attribution %>%
1490796156518:merge(static_weights, all.x = TRUE, by = c('contact_id', 'campaign_id')) %>%
1490796156520:.[, .(purchase_rate = mean(did_buy * weights, na.rm = TRUE)), by = .(class, campaign_id)] %>%
1490796156522:dcast(campaign_id ~ class)
1490872822622:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490872822625:matching_data <- dt_with_class_buying_prob[
1490872822625:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490872822626:.(
1490872822628:contact_id,
1490872822629:campaign_id,
1490872822630:is_smart = ifelse(class == "smart", 1, 0),
1490872822630:buying_prob_category = cut(log(buying_prob), 50),
1490872822631:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490872822632:)
1490872822632:]
1490872822633:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490872822634:geom_bar() +
1490872822635:facet_wrap(~ campaign_id, ncol = 1)
1490872822636:print(p)
1490872822637:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490872822638:data = matching_data,
1490872822638:method = "exact")
1490872822640:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490872822641:matching_data[, table(is_matched, is_smart)] %>%
1490872822642:print()
1490872822643:matching_data[
1490872822644:,
1490872822645:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490872822646:by = .(is_smart, is_matched)
1490872822647:] %>%
1490872822648:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490872822650:print()
1490872822653:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490872822654:}
1490872825326:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490872862680:static_weights <- calculateMatchedWeights(recom_history_w_attribution, comparison_class = 'static')
1490873002886:vignette('plot_theme')
1490873047031:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873047032:matching_data <- dt_with_class_buying_prob[
1490873047033:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873047033:.(
1490873047034:contact_id,
1490873047035:campaign_id,
1490873047035:is_smart = ifelse(class == "smart", 1, 0),
1490873047036:buying_prob_category = cut(log(buying_prob), 50),
1490873047037:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873047038:)
1490873047039:]
1490873047040:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873047040:geom_bar() +
1490873047041:facet_wrap(~ campaign_id, ncol = 1) +
1490873047042:scale_x_continuous(labels = NULL) +
1490873047042:scale_color_discrete_ems(guide = 'Smart')
1490873047043:print(p)
1490873047045:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873047046:data = matching_data,
1490873047047:method = "exact")
1490873047049:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873047050:matching_data[, table(is_matched, is_smart)] %>%
1490873047051:print()
1490873047054:matching_data[
1490873047055:,
1490873047057:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873047058:by = .(is_smart, is_matched)
1490873047060:] %>%
1490873047061:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873047062:print()
1490873047064:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873047066:}
1490873048201:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490873056896:?scale_color_discrete_ems
1490873194191:?guide
1490873209259:?scale_color_discrete
1490873317773:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873317780:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873317780:geom_boxplot() +
1490873317781:ems_color_theme$scales$scale_fill_discrete()
1490873346867:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873346876:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873346877:geom_boxplot() +
1490873346878:ems_color_theme$scales$scale_fill_discrete(guide_legend('vmi'))
1490873358807:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873358815:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873358816:geom_boxplot()
1490873378063:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873378073:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873378073:geom_boxplot() + scale_fill_discrete(guide_legend('vmi'))
1490873491549:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873491556:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873491556:geom_boxplot() + scale_fill_discrete(guide_legend('vmi', labels = c('a', 'b', 'c')))
1490873509349:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873509358:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873509359:geom_boxplot() + scale_fill_discrete(guide_legend('vmi'), labels = c('a', 'b', 'c')))
1490873511013:ems_color_theme <- ggthemr::ggthemr(getThemePalette(), set_theme = FALSE)
1490873511021:ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
1490873511021:geom_boxplot() + scale_fill_discrete(guide_legend('vmi'), labels = c('a', 'b', 'c'))
1490873560671:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873560672:matching_data <- dt_with_class_buying_prob[
1490873560673:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873560673:.(
1490873560674:contact_id,
1490873560675:campaign_id,
1490873560676:is_smart = ifelse(class == "smart", 1, 0),
1490873560678:buying_prob_category = cut(log(buying_prob), 50),
1490873560679:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873560680:)
1490873560681:]
1490873560682:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873560683:geom_bar() +
1490873560684:facet_wrap(~ campaign_id, ncol = 1) +
1490873560685:scale_x_continuous(labels = NULL) +
1490873560686:scale_color_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490873560687:print(p)
1490873560688:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873560689:data = matching_data,
1490873560690:method = "exact")
1490873560692:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873560692:matching_data[, table(is_matched, is_smart)] %>%
1490873560694:print()
1490873560697:matching_data[
1490873560698:,
1490873560699:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873560700:by = .(is_smart, is_matched)
1490873560702:] %>%
1490873560702:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873560703:print()
1490873560707:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873560714:}
1490873562106:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490873582444:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873582446:matching_data <- dt_with_class_buying_prob[
1490873582447:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873582447:.(
1490873582447:contact_id,
1490873582448:campaign_id,
1490873582448:is_smart = ifelse(class == "smart", 1, 0),
1490873582448:buying_prob_category = cut(log(buying_prob), 50),
1490873582449:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873582449:)
1490873582449:]
1490873582450:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873582450:geom_bar() +
1490873582451:facet_wrap(~ campaign_id, ncol = 1) +
1490873582451:scale_x_continuous(labels = NULL) +
1490873582452:scale_fill_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490873582452:print(p)
1490873582453:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873582453:data = matching_data,
1490873582454:method = "exact")
1490873582455:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873582455:matching_data[, table(is_matched, is_smart)] %>%
1490873582456:print()
1490873582457:matching_data[
1490873582458:,
1490873582459:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873582459:by = .(is_smart, is_matched)
1490873582460:] %>%
1490873582461:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873582461:print()
1490873582462:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873582464:}
1490873585035:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490873603973:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873603975:matching_data <- dt_with_class_buying_prob[
1490873603975:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873603975:.(
1490873603976:contact_id,
1490873603976:campaign_id,
1490873603976:is_smart = ifelse(class == "smart", 1, 0),
1490873603977:buying_prob_category = cut(log(buying_prob), 50),
1490873603977:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873603977:)
1490873603978:]
1490873603978:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873603979:geom_bar() +
1490873603980:facet_wrap(~ campaign_id, ncol = 1) +
1490873603981:scale_x_continuous(labels = NULL) +
1490873603982:scale_fill_discrete(guide_legend('class'))
1490873603983:# , labels = c(comparison_class, 'smart'))
1490873603984:print(p)
1490873603985:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873603985:data = matching_data,
1490873603986:method = "exact")
1490873603987:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873603988:matching_data[, table(is_matched, is_smart)] %>%
1490873603988:print()
1490873603989:matching_data[
1490873603990:,
1490873603991:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873603992:by = .(is_smart, is_matched)
1490873603992:] %>%
1490873603993:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873603994:print()
1490873603995:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873603997:}
1490873608873:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490873635466:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873635466:matching_data <- dt_with_class_buying_prob[
1490873635467:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873635468:.(
1490873635469:contact_id,
1490873635469:campaign_id,
1490873635470:is_smart = ifelse(class == "smart", 1, 0),
1490873635470:buying_prob_category = cut(log(buying_prob), 50),
1490873635471:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873635471:)
1490873635471:]
1490873635472:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873635472:geom_bar() +
1490873635473:facet_wrap(~ campaign_id, ncol = 1) +
1490873635473:scale_x_discrete(labels = NULL) +
1490873635473:scale_fill_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490873635474:print(p)
1490873635475:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873635475:data = matching_data,
1490873635476:method = "exact")
1490873635477:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873635477:matching_data[, table(is_matched, is_smart)] %>%
1490873635478:print()
1490873635479:matching_data[
1490873635481:,
1490873635483:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873635484:by = .(is_smart, is_matched)
1490873635485:] %>%
1490873635486:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873635487:print()
1490873635488:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873635489:}
1490873637939:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490873704936:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873704938:matching_data <- dt_with_class_buying_prob[
1490873704939:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873704940:.(
1490873704941:contact_id,
1490873704942:campaign_id,
1490873704944:is_smart = ifelse(class == "smart", 1, 0),
1490873704945:buying_prob_category = cut(log(buying_prob), 50),
1490873704945:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873704946:)
1490873704947:]
1490873704949:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873704950:geom_bar() +
1490873704951:facet_wrap(~ campaign_id, ncol = 1) +
1490873704953:scale_x_discrete(labels = NULL) +
1490873704953:xlabel('Matching category (log buying probability bin)') +
1490873704954:scale_fill_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490873704955:print(p)
1490873704957:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873704958:data = matching_data,
1490873704958:method = "exact")
1490873704960:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873704961:matching_data[, table(is_matched, is_smart)] %>%
1490873704962:print()
1490873704964:matching_data[
1490873704965:,
1490873704966:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873704967:by = .(is_smart, is_matched)
1490873704969:] %>%
1490873704970:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873704972:print()
1490873704975:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873704977:}
1490873707047:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490873768602:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490873768603:matching_data <- dt_with_class_buying_prob[
1490873768604:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490873768605:.(
1490873768606:contact_id,
1490873768608:campaign_id,
1490873768609:is_smart = ifelse(class == "smart", 1, 0),
1490873768610:buying_prob_category = cut(log(buying_prob), 50),
1490873768611:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490873768612:)
1490873768612:]
1490873768614:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490873768615:geom_bar() +
1490873768616:facet_wrap(~ campaign_id, ncol = 1) +
1490873768616:scale_x_discrete('Matching category (log buying probability bin)', labels = NULL) +
1490873768617:scale_fill_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490873768618:print(p)
1490873768621:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490873768623:data = matching_data,
1490873768624:method = "exact")
1490873768625:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490873768626:matching_data[, table(is_matched, is_smart)] %>%
1490873768627:print()
1490873768628:matching_data[
1490873768629:,
1490873768630:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490873768630:by = .(is_smart, is_matched)
1490873768631:] %>%
1490873768631:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490873768632:print()
1490873768633:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490873768635:}
1490873769625:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490874751359:dt_with_class_buying_prob <- recom_history_w_attribution
1490874756215:matching_data <- dt_with_class_buying_prob[
1490874756216:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490874756217:.(
1490874756217:contact_id,
1490874756218:campaign_id,
1490874756218:is_smart = ifelse(class == "smart", 1, 0),
1490874756219:buying_prob_category = cut(log(buying_prob), 50),
1490874756220:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490874756220:)
1490874756221:]
1490874763057:comparison_class <- 'control'
1490874765266:matching_data <- dt_with_class_buying_prob[
1490874765267:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490874765268:.(
1490874765268:contact_id,
1490874765269:campaign_id,
1490874765270:is_smart = ifelse(class == "smart", 1, 0),
1490874765271:buying_prob_category = cut(log(buying_prob), 50),
1490874765272:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490874765272:)
1490874765274:]
1490874770943:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490874770943:geom_bar() +
1490874770944:facet_wrap(~ campaign_id, ncol = 1) +
1490874770945:scale_x_discrete('Matching category (log buying probability bin)', labels = NULL) +
1490874770945:scale_fill_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490874773618:p
1490874794041:calculateMatchedWeights <- function(dt_with_class_buying_prob, comparison_class = 'control') {
1490874794041:matching_data <- dt_with_class_buying_prob[
1490874794042:class %in% c("smart", comparison_class) & is.na(buying_prob) == FALSE,
1490874794042:.(
1490874794043:contact_id,
1490874794043:campaign_id,
1490874794044:is_smart = ifelse(class == "smart", 1, 0),
1490874794045:buying_prob_category = cut(log(buying_prob), 50),
1490874794046:sales_amount = ifelse(is.na(sales_amount), 0, sales_amount)
1490874794047:)
1490874794048:]
1490874794048:p <- ggplot(data = matching_data, aes(x = buying_prob_category, fill = factor(is_smart))) +
1490874794049:geom_bar() +
1490874794049:facet_wrap(~ campaign_id, ncol = 1) +
1490874794049:scale_x_discrete('Matching category (log buying probability bin)', labels = NULL) +
1490874794050:scale_fill_discrete(guide_legend('class'), labels = c(comparison_class, 'smart'))
1490874794050:print(p)
1490874794051:m.out <- matchit(is_smart ~ campaign_id + buying_prob_category,
1490874794052:data = matching_data,
1490874794052:method = "exact")
1490874794054:matching_data[, is_matched := ifelse(!is.na(m.out$subclass), "matched", "unmatched")]
1490874794055:matching_data[, table(is_matched, is_smart)] %>%
1490874794056:print()
1490874794059:matching_data[
1490874794061:,
1490874794062:.(n_purchase = sum(sales_amount > 0), sum_sales = sum(sales_amount)),
1490874794063:by = .(is_smart, is_matched)
1490874794064:] %>%
1490874794064:dcast(is_smart ~ is_matched, value.var = c("n_purchase", "sum_sales")) %>%
1490874794065:print()
1490874794066:data.table(match.data(m.out))[, .(contact_id, campaign_id, is_smart, weights)]
1490874794067:}
1490874796382:control_weights <- calculateMatchedWeights(recom_history_w_attribution)
1490882292358:exit()
1490882294306:q()
1490883652721:q()
1490958181540:install.packages("devtools")
1490958234054:library(data.table)
1490958252576:installed.packages('data.table', type = 'source')
1490958259445:install.packages('data.table', type = 'source')
1490958280403:library(data.table)
1490958290693:install.packages("ggplot2")
1490958637177:install.packages("packrat")
1490963752893:install.packages("magrittr")
1491202517075:library(caret)
1491202517600:library(ROCR)
1491202518473:source('global.R')
1491202534537:install.packages("RPostgreSQL")
1491202545038:source('global.R')
1491202551513:install.packages("yaml")
1491202554720:source('global.R')
1491202559567:install.packages("rjson")
1491202562849:source('global.R')
1491202567831:install.packages("plotly")
1491202630642:source("global.R")
1491202643915:install.packages('data.table', type='source')
1491202668138:library('data.table')
1491202676567:source("global.R")
1491202717292:install.packages("emsconnectr", type = 'source')
1491202729213:install.packages("emsconnectr", type = 'source')
1491203055465:install.packages("devtools")
1491203076299:install.packages("stringr")
1491203102599:devtools::install_github('rstats-db/bigrquery’)
1491203137621:devtools::install_github('rstats-db/bigrquery')
1491203154448:devtools::install_github('Rexamine/stringi')
1491203428751:install.packages('emsconnectr', type='source')
1491203443329:source('global.R')
1491203448724:install.packages("plotly")
1491203551141:source('global.R')
1491203558613:install.packages("shiny")
1491203618092:source('global.R')
1491203795638:library(caret)
1491203800383:install.packages('caret')
1491203825351:install.packages('ROCR')
1491203978611:library(caret)
1491204005999:install.packages("caret")
1491204030421:library(caret)
1491204046450:library(caret)
1491204052482:library(ROCR)
1491204055684:source('global.R')
1491204061533:END_DATE <- '2016-11-28'
1491204063696:getPurchaseData <- function(customer_name) {
1491204063697:readInRawData('purchase', customer_name = customer_name, end_date = END_DATE) %>%
1491204063718:.[!is.na(contact_id)] %>%
1491204063718:cleanRefunds() %>%
1491204063720:aggregateToDailyPurchase() %>%
1491204063721:createWeekSequence_()
1491204063722:}
1491204064525:getEmailRateData <- function(customer_name) {
1491204064538:readInRawData('email_rates', customer_name = customer_name, end_date = END_DATE) %>%
1491204064539:createWeekSequence_()
1491204064539:}
1491204065263:getEmailNumberData <- function(customer_name) {
1491204065263:readInRawData('email_numbers', customer_name = customer_name, end_date = END_DATE) %>%
1491204065264:createWeekSequence_()
1491204065265:}
1491204068150:purchase_dt <- getPurchaseData('evolution_slimming')
1491204071755:# email_rate_dt <- getEmailRateData('japancentre', start_date = '2015-05-04')
1491204071953:email_number_dt <- getEmailNumberData('evolution_slimming')
1491204082625:source('global.R')
1491204083813:customer <- 'evolution_slimming'
1491204086349:types_to_read <- c('viewed', 'added', 'purchased')
1491204086809:data_read <- sapply(
1491204086810:types_to_read,
1491204086811:function(type) readInPredictData(customer, type),
1491204086811:simplify = FALSE
1491204086812:)
1491204089378:all_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1491204091017:all_data <- addContactId(all_data, customer)
1491204101280:all_data
1491204139152:corres <- readEmailHashCorrespondence("evolution_slimming")
1491204174701:corres <- fread('data/evolution_slimming_email_hash_correspondence.csv')
1491204208670:corres <- corres[!is.na(email_hash) & email_hash != ''] %>% unique(by='email_hash')
1491204209994:corres
1491204256974:merge(all_data, corres, by = 'email_hash')
1491204262547:web_data <- merge(all_data, corres, by = 'email_hash')
1491204272056:all_data <- web_data
1491204273929:web_data <- generateWebWeeklyData(all_data) %>% createWeekSequence_()
1491204282215:all_data[, .N, keyby = as.Date(timestamp)][, diff := as.Date - shift(as.Date)][diff > 1]
1491204282490:all_data[, .N, keyby = as.Date(timestamp)][, .N, by = format(as.Date, '%b')]
1491204292710:splitData <- function(purchase_data, email_data, web_data = NULL, purchase_relevancy = PURCHASE_RELEVANCY, email_relevancy = EMAIL_RELEVANCY, email_aggregation_frequency = EMAIL_AGGREGATION_FREQ, email_features = c('num_click', 'num_open'), web_relevancy = WEB_RELEVANCY) {
1491204292711:default_pars <- list(
1491204292712:purchase_dt = purchase_data, email_dt = email_data, web_dt = web_data,
1491204292713:purchase_relevancy = purchase_relevancy, email_relevancy = email_relevancy,
1491204292713:email_aggregation_frequency = email_aggregation_frequency,
1491204292714:email_features = email_features
1491204292714:)
1491204292716:list(
1491204292717:train = do.call(
1491204292717:putTogetherDataForTargetPeriod,
1491204292718:c(target_year = 2016, target_week = 27, default_pars)
1491204292719:),
1491204292720:test = do.call(
1491204292721:putTogetherDataForTargetPeriod,
1491204292721:c(target_year = 2016, target_week = 29, default_pars)
1491204292722:)
1491204292723:)
1491204292724:}
1491204294934:data_6months_number <- splitData(purchase_dt, email_number_dt, purchase_relevancy = 24)
1491204306571:data_14months_number <- splitData(purchase_dt, email_number_dt, email_features = c('num_click', 'num_open'))
1491204330690:rfm6_glm <- train(
1491204330692:purchased ~ recency + frequency + monetary + bought_last_period,
1491204330692:data = data_6months_number$train[sum_click + bought_last_period > 0],
1491204330693:method = 'glm',
1491204330693:family = 'binomial'
1491204330693:)
1491204331124:summary(rfm6_glm)
1491204331125:rfm_glm <- train(
1491204331125:purchased ~ recency + frequency + monetary + bought_last_period,
1491204331126:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491204331126:method = 'glm',
1491204331126:family = 'binomial'
1491204331127:)
1491204331542:summary(rfm_glm)
1491204339998:install.packages("e1071")
1491204350521:rfm6_glm <- train(
1491204350522:purchased ~ recency + frequency + monetary + bought_last_period,
1491204350523:data = data_6months_number$train[sum_click + bought_last_period > 0],
1491204350523:method = 'glm',
1491204350524:family = 'binomial'
1491204350524:)
1491204361163:summary(rfm6_glm)
1491204361188:rfm_glm <- train(
1491204361189:purchased ~ recency + frequency + monetary + bought_last_period,
1491204361189:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491204361189:method = 'glm',
1491204361190:family = 'binomial'
1491204361190:)
1491204373958:summary(rfm_glm)
1491204383617:rfm_click <- train(
1491204383617:purchased ~ recency + frequency + monetary + bought_last_period + sum_click,
1491204383618:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491204383619:method = 'glm',
1491204383619:family = 'binomial'
1491204383619:)
1491204396939:summary(rfm_click)
1491204396962:rfm_click_open <- train(
1491204396962:purchased ~ recency + frequency + monetary + bought_last_period + sum_open + sum_click,
1491204396963:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491204396964:method = 'glm',
1491204396965:family = 'binomial'
1491204396966:)
1491204411785:summary(rfm_click_open)
1491204411805:rfm_click_open_web <- train(
1491204411806:purchased ~ recency + frequency + monetary + bought_last_period + sum_open + sum_click + sum_session,
1491204411806:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491204411807:method = 'glm',
1491204411807:family = 'binomial'
1491204411808:)
1491204411827:summary(rfm_click_open_web)
1491204544821:data_14months_number$train
1491204667612:web_data
1491204683666:data_14months_number <- splitData(purchase_dt, email_number_dt, email_features = c('num_click', 'num_open'))
1491204739968:names(data_14months_number$train)
1491204767424:web_data
1491204773398:debug(putTogetherDataForTargetPeriod)
1491204776208:data_14months_number <- splitData(purchase_dt, email_number_dt, email_features = c('num_click', 'num_open'))
1491205122949:packrat::restore(prompt = FALSE)
1491205149483:install.packages("SparseM")
1491205164572:packrat::restore(prompt = FALSE)
1491205193613:install.packages("cluster")
1491205200753:packrat::restore(prompt = FALSE)
1491205281112:devtools::install_github('Rexamine/stringi')
1491205644798:source('global.R')
1491205647611:source('global.R')
1491205668242:customer <- 'evolution_slimming'
1491205680148:types_to_read <- c('viewed', 'added', 'purchased')
1491205680542:data_read <- sapply(
1491205680544:types_to_read,
1491205680545:function(type) readInPredictData(customer, type),
1491205680545:simplify = FALSE
1491205680546:)
1491205683901:all_data <- rbindlist(lapply(data_read, cleanData), fill = TRUE)
1491205684410:all_data <- addContactId(all_data, customer)
1491205689752:all_data <- addContactId(all_data, customer)
1491205890723:source('global.R')
1491205894803:customer <- 'evolution_slimming'
1491205896604:all_predict_data <- getWebData(customer)
1491205922898:source('global.R')
1491205924402:customer <- 'evolution_slimming'
1491205925069:all_predict_data <- getWebData(customer)
1491206025915:source('global.R')
1491206032481:customer <- 'evolution_slimming'
1491206033056:all_predict_data <- getWebData(customer)
1491206050762:customer
1491206089864:source('global.R')
1491206090559:customer <- 'evolution_slimming'
1491206093034:all_predict_data <- getWebData(customer)
1491206223290:all_predict_data <- getWebData(customer)
1491206245533:debug(getWebData)
1491206246767:all_predict_data <- getWebData(customer)
1491206257130:debug(addContactId)
1491206267745:debug(readEmailHashCorrespondence)
1491206292754:email_hash_column <- getSqlResult(
1491206292755:'sql/get_email_hash_column.sql',
1491206292756:database_name = getEnvNameOfCustomer(getIdFromName(customer)),
1491206292756:customer_id = getIdFromName(customer)
1491206292756:)
1491206299722:getIdFromName(customer)
1491206306935:getEnvNameOfCustomer(getIdFromName(customer))
1491206322798:?getEnvNameOfCustomer
1491206343302:getEnvNameOfCustomer(290445673)
1491206353101:debug(getEnvNameOfCustomer)
1491206355510:getEnvNameOfCustomer(290445673)
1491206361883:customers
1491206442448:source('global.R')
1491206445320:customer <- 'evolution_slimming'
1491206447035:all_predict_data <- getWebData(customer)
1491206477015:getEnvNameOfCustomer(getIdFromName('evolution_slimming'))
1491206484633:all_predict_data <- getWebData(customer)
1491206490153:debug(readEmailHashCorrespondence)
1491206492102:all_predict_data <- getWebData(customer)
1491206501102:email_hash_column <- getSqlResult(
1491206501103:'sql/get_email_hash_column.sql',
1491206501104:database_name = getEnvNameOfCustomer(getIdFromName(customer)),
1491206501104:customer_id = getIdFromName(customer)
1491206501104:)
1491206509065:getEnvNameOfCustomer(getIdFromName(customer))
1491206513453:getIdFromName(customer)
1491206532014:getSqlResult(
1491206532015:+     'sql/get_email_hash_column.sql',
1491206532016:+     database_name = getEnvNameOfCustomer(getIdFromName(customer)),
1491206532019:+     customer_id = getIdFromName(customer)
1491206532033:+ )
1491206543638:getSqlResult(
1491206543639:'sql/get_email_hash_column.sql',
1491206543640:database_name = getEnvNameOfCustomer(getIdFromName(customer)),
1491206543640:customer_id = getIdFromName(customer)
1491206543640:)
1491206560222:getSqlResult(
1491206560222:'sql/get_email_hash_column.sql',
1491206560223:database_name = getEnvNameOfCustomer(getIdFromName(customer)),
1491206560223:customer_id = 290445673
1491206560224:)
1491206570143:getSqlResult(
1491206570144:'sql/get_email_hash_column.sql',
1491206570144:database_name = 'suite7',
1491206570147:customer_id = 290445673
1491206570148:)
1491206578653:getSqlResult(
1491206578653:'sql/get_email_hash_column.sql',
1491206578655:database_name = 'suite7',
1491206578655:customer_id = '290445673'
1491206578655:)
1491206593671:debug(getSqlResult)
1491206610150:all_predict_data <- getWebData(customer)
1491206621756:debug(queryFromFileOrQueryAndParams)
1491206643966:debug(substituteParamsInQuery)
1491206648869:query
1491206662329:all_params
1491206718066:params[[param_name]]
1491206742928:str_replace_all(query, str_c("#\\{", param_name,
1491206742929:"\\}"), value)
1491206752292:str_replace_all(query, str_c("#\\{", param_name,
1491206752292:"\\}"), as.character(value))
1491206765558:?getIdFromName
1491206777820:getIdFromName()
1491206783989:getIdFromName('evolution_slimming')
1491206787906:getIdFromName('evolution_slimming') %>% class
1491206807638:sessionInfo()
1491206838921:source('global.R')
1491206841921:customer <- 'evolution_slimming'
1491206842512:all_predict_data <- getWebData(customer)
1491206858653:source('global.R')
1491206859947:customer <- 'evolution_slimming'
1491206859948:all_predict_data <- getWebData(customer)
1491206865989:web_data <- generateWebWeeklyData(all_predict_data) %>% createWeekSequence_()
1491206878781:all_data[, .N, keyby = as.Date(timestamp)][, diff := as.Date - shift(as.Date)][diff > 1]
1491206879062:all_data[, .N, keyby = as.Date(timestamp)][, .N, by = format(as.Date, '%b')]
1491206889702:all_predict_data[, .N, keyby = as.Date(timestamp)][, diff := as.Date - shift(as.Date)][diff > 1]
1491206889744:all_predict_data[, .N, keyby = as.Date(timestamp)][, .N, by = format(as.Date, '%b')]
1491206903219:library(caret)
1491206905007:library(ROCR)
1491206906974:source('global.R')
1491206908840:END_DATE <- '2016-11-28'
1491206909465:END_DATE <- '2016-08-01'
1491206915335:getPurchaseData <- function(customer_name) {
1491206915338:readInRawData('purchase', customer_name = customer_name, end_date = END_DATE) %>%
1491206915339:.[!is.na(contact_id)] %>%
1491206915340:cleanRefunds() %>%
1491206915340:aggregateToDailyPurchase() %>%
1491206915341:createWeekSequence_()
1491206915342:}
1491206925723:END_DATE <- '2016-11-28'
1491206929372:getPurchaseData <- function(customer_name) {
1491206929372:readInRawData('purchase', customer_name = customer_name, end_date = END_DATE) %>%
1491206929373:.[!is.na(contact_id)] %>%
1491206929374:cleanRefunds() %>%
1491206929375:aggregateToDailyPurchase() %>%
1491206929375:createWeekSequence_()
1491206929376:}
1491206929955:getEmailRateData <- function(customer_name) {
1491206929956:readInRawData('email_rates', customer_name = customer_name, end_date = END_DATE) %>%
1491206929957:createWeekSequence_()
1491206929957:}
1491206930641:getEmailNumberData <- function(customer_name) {
1491206930642:readInRawData('email_numbers', customer_name = customer_name, end_date = END_DATE) %>%
1491206930643:createWeekSequence_()
1491206930644:}
1491206931874:purchase_dt <- getPurchaseData('evolution_slimming')
1491206932761:# email_rate_dt <- getEmailRateData('japancentre', start_date = '2015-05-04')
1491206932762:email_number_dt <- getEmailNumberData('evolution_slimming')
1491206939600:splitData <- function(purchase_data, email_data, web_data = NULL, purchase_relevancy = PURCHASE_RELEVANCY, email_relevancy = EMAIL_RELEVANCY, email_aggregation_frequency = EMAIL_AGGREGATION_FREQ, email_features = c('num_click', 'num_open'), web_relevancy = WEB_RELEVANCY) {
1491206939601:default_pars <- list(
1491206939602:purchase_dt = purchase_data, email_dt = email_data, web_dt = web_data,
1491206939602:purchase_relevancy = purchase_relevancy, email_relevancy = email_relevancy,
1491206939603:email_aggregation_frequency = email_aggregation_frequency,
1491206939603:email_features = email_features
1491206939603:)
1491206939604:list(
1491206939604:train = do.call(
1491206939605:putTogetherDataForTargetPeriod,
1491206939605:c(target_year = 2016, target_week = 27, default_pars)
1491206939606:),
1491206939606:test = do.call(
1491206939607:putTogetherDataForTargetPeriod,
1491206939607:c(target_year = 2016, target_week = 29, default_pars)
1491206939607:)
1491206939608:)
1491206939608:}
1491206939609:data_6months_number <- splitData(purchase_dt, email_number_dt, purchase_relevancy = 24)
1491206949456:data_14months_number <- splitData(purchase_dt, email_number_dt, email_features = c('num_click', 'num_open'))
1491206981259:names(data_14months_number)
1491206984548:names(data_14months_number$train)
1491207017355:debug(splitData)
1491207022067:data_14months_number <- splitData(purchase_dt, email_number_dt, email_features = c('num_click', 'num_open'))
1491207032363:debug(putTogetherDataForTargetPeriod)
1491207166679:source('global.R')
1491207167817:customer <- 'evolution_slimming'
1491207167914:all_predict_data <- getWebData(customer)
1491207172128:web_data <- generateWebWeeklyData(all_predict_data) %>% createWeekSequence_()
1491207180701:library(caret)
1491207182695:library(ROCR)
1491207182805:source('global.R')
1491207182835:# GET DATA =====================================================================
1491207182836:END_DATE <- '2016-11-28'
1491207182836:getPurchaseData <- function(customer_name) {
1491207182837:readInRawData('purchase', customer_name = customer_name, end_date = END_DATE) %>%
1491207182837:.[!is.na(contact_id)] %>%
1491207182837:cleanRefunds() %>%
1491207182838:aggregateToDailyPurchase() %>%
1491207182838:createWeekSequence_()
1491207182839:}
1491207182840:getEmailRateData <- function(customer_name) {
1491207182841:readInRawData('email_rates', customer_name = customer_name, end_date = END_DATE) %>%
1491207182842:createWeekSequence_()
1491207182843:}
1491207182844:getEmailNumberData <- function(customer_name) {
1491207182845:readInRawData('email_numbers', customer_name = customer_name, end_date = END_DATE) %>%
1491207182846:createWeekSequence_()
1491207182847:}
1491207184132:purchase_dt <- getPurchaseData('evolution_slimming')
1491207185387:email_number_dt <- getEmailNumberData('evolution_slimming')
1491207203722:purchase_dt
1491207221681:purchase_dt[, .N, keyby = .(year, week)]
1491207241713:web_dt[, .N, keyby = .(year, week)]
1491207247921:web_data[, .N, keyby = .(year, week)]
1491207284684:splitData <- function(purchase_data, email_data, web_data = NULL, purchase_relevancy = PURCHASE_RELEVANCY, email_relevancy = EMAIL_RELEVANCY, email_aggregation_frequency = EMAIL_AGGREGATION_FREQ, email_features = c('num_click', 'num_open'), web_relevancy = WEB_RELEVANCY) {
1491207284685:default_pars <- list(
1491207284685:purchase_dt = purchase_data, email_dt = email_data, web_dt = web_data,
1491207284686:purchase_relevancy = purchase_relevancy, email_relevancy = email_relevancy,
1491207284687:email_aggregation_frequency = email_aggregation_frequency,
1491207284687:email_features = email_features
1491207284688:)
1491207284689:list(
1491207284689:train = do.call(
1491207284689:putTogetherDataForTargetPeriod,
1491207284690:c(target_year = 2016, target_week = 44, default_pars)
1491207284690:),
1491207284691:test = do.call(
1491207284691:putTogetherDataForTargetPeriod,
1491207284691:c(target_year = 2016, target_week = 46, default_pars)
1491207284692:)
1491207284692:)
1491207284693:}
1491207323322:END_DATE <- '2016-11-28'
1491207326331:splitData <- function(purchase_data, email_data, web_data = NULL, purchase_relevancy = PURCHASE_RELEVANCY, email_relevancy = EMAIL_RELEVANCY, email_aggregation_frequency = EMAIL_AGGREGATION_FREQ, email_features = c('num_click', 'num_open'), web_relevancy = WEB_RELEVANCY) {
1491207326332:default_pars <- list(
1491207326333:purchase_dt = purchase_data, email_dt = email_data, web_dt = web_data,
1491207326333:purchase_relevancy = purchase_relevancy, email_relevancy = email_relevancy,
1491207326335:email_aggregation_frequency = email_aggregation_frequency,
1491207326335:email_features = email_features
1491207326336:)
1491207326337:list(
1491207326338:train = do.call(
1491207326339:putTogetherDataForTargetPeriod,
1491207326340:c(target_year = 2016, target_week = 44, default_pars)
1491207326341:),
1491207326342:test = do.call(
1491207326342:putTogetherDataForTargetPeriod,
1491207326343:c(target_year = 2016, target_week = 46, default_pars)
1491207326344:)
1491207326345:)
1491207326346:}
1491207328963:data_6months_number <- splitData(purchase_dt, email_number_dt, purchase_relevancy = 24)
1491207339893:data_14months_number <- splitData(purchase_dt, email_number_dt, email_features = c('num_click', 'num_open'))
1491207455613:names(data_14months_number)
1491207458996:names(data_14months_number$train)
1491207473713:debug(putTogetherDataForTargetPeriod)
1491207559109:putTogetherDataForTargetPeriod(purchase_dt = purchase_data, email_data, web_data, target_year = 2016, target_week = 44)
1491207595804:putTogetherDataForTargetPeriod(purchase_dt, email_number_dt, web_data, target_year = 2016, target_week = 44)
1491207607317:rfm
1491207645924:is.null(web_dt)
1491207652145:web
1491207684207:Reduce(function(...) merge(..., by = 'contact_id', all = TRUE), list_of_dts) %>%
1491207684209:fillZerosForNA_(cols = column_names_to_fill) %>%
1491207684209:.[complete.cases(.)] %>%  # keep only those who got emails
1491207684210:.[, bought_last_period := ifelse(recency == 0, 0, 1)] %>%
1491207684210:factorizePurchased_()
1491207749237:data_14months_number <- splitData(purchase_dt, email_number_dt, web_data, email_features = c('num_click', 'num_open'))
1491207783998:library(caret)
1491207786210:library(ROCR)
1491207786302:source('global.R')
1491207787267:source('global.R')
1491207787421:customer <- 'evolution_slimming'
1491207787695:all_predict_data <- getWebData(customer)
1491207791559:web_data <- generateWebWeeklyData(all_predict_data) %>% createWeekSequence_()
1491207799719:END_DATE <- '2016-11-28'
1491207801435:getPurchaseData <- function(customer_name) {
1491207801435:readInRawData('purchase', customer_name = customer_name, end_date = END_DATE) %>%
1491207801438:.[!is.na(contact_id)] %>%
1491207801439:cleanRefunds() %>%
1491207801439:aggregateToDailyPurchase() %>%
1491207801440:createWeekSequence_()
1491207801443:}
1491207802138:getEmailRateData <- function(customer_name) {
1491207802140:readInRawData('email_rates', customer_name = customer_name, end_date = END_DATE) %>%
1491207802141:createWeekSequence_()
1491207802141:}
1491207802656:getEmailNumberData <- function(customer_name) {
1491207802658:readInRawData('email_numbers', customer_name = customer_name, end_date = END_DATE) %>%
1491207802658:createWeekSequence_()
1491207802659:}
1491207803394:purchase_dt <- getPurchaseData('evolution_slimming')
1491207805143:email_number_dt <- getEmailNumberData('evolution_slimming')
1491207811209:splitData <- function(purchase_data, email_data, web_data = NULL, purchase_relevancy = PURCHASE_RELEVANCY, email_relevancy = EMAIL_RELEVANCY, email_aggregation_frequency = EMAIL_AGGREGATION_FREQ, email_features = c('num_click', 'num_open'), web_relevancy = WEB_RELEVANCY) {
1491207811210:default_pars <- list(
1491207811211:purchase_dt = purchase_data, email_dt = email_data, web_dt = web_data,
1491207811211:purchase_relevancy = purchase_relevancy, email_relevancy = email_relevancy,
1491207811212:email_aggregation_frequency = email_aggregation_frequency,
1491207811212:email_features = email_features
1491207811213:)
1491207811214:list(
1491207811215:train = do.call(
1491207811215:putTogetherDataForTargetPeriod,
1491207811217:c(target_year = 2016, target_week = 44, default_pars)
1491207811219:),
1491207811220:test = do.call(
1491207811221:putTogetherDataForTargetPeriod,
1491207811223:c(target_year = 2016, target_week = 46, default_pars)
1491207811224:)
1491207811226:)
1491207811227:}
1491207813708:data_14months_number <- splitData(purchase_dt, email_number_dt, web_data, email_features = c('num_click', 'num_open'))
1491207874351:names(data_14months_number$test)
1491207890232:rfm_glm <- train(
1491207890232:purchased ~ recency + frequency + monetary + bought_last_period,
1491207890233:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491207890234:method = 'glm',
1491207890234:family = 'binomial'
1491207890234:)
1491207910121:summary(rfm_glm)
1491207910150:rfm_click <- train(
1491207910151:purchased ~ recency + frequency + monetary + bought_last_period + sum_click,
1491207910151:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491207910151:method = 'glm',
1491207910152:family = 'binomial'
1491207910152:)
1491207928796:summary(rfm_click)
1491207928819:rfm_click_open <- train(
1491207928819:purchased ~ recency + frequency + monetary + bought_last_period + sum_open + sum_click,
1491207928820:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491207928820:method = 'glm',
1491207928821:family = 'binomial'
1491207928821:)
1491207946899:summary(rfm_click_open)
1491207946921:rfm_click_open_web <- train(
1491207946921:purchased ~ recency + frequency + monetary + bought_last_period + sum_open + sum_click + sum_session,
1491207946922:data = data_14months_number$train[sum_click + bought_last_period > 0],
1491207946922:method = 'glm',
1491207946922:family = 'binomial'
1491207946923:)
1491207966193:summary(rfm_click_open_web)
1491208105448:calculateAUC <- function(prediction, label) {
1491208105449:predictions <- prediction(prediction, label)
1491208105450:perf <- performance(predictions, measure = "auc")
1491208105450:round(perf@y.values[[1]]*100, 2)
1491208105451:}
1491208106151:createROCDf <- function(prediction, label) {
1491208106152:predictions <- prediction(prediction, label)
1491208106152:perf <- performance(predictions, measure = "tpr", x.measure = "fpr")
1491208106153:roc_df <- data.frame(
1491208106154:FPR = perf@x.values[[1]],
1491208106155:TPR = perf@y.values[[1]],
1491208106155:cutoff = perf@alpha.values[[1]]
1491208106156:)
1491208106157:}
1491208106966:plotROC <- function(models, ROCcolors = c('darkblue', 'darkgreen', 'darkred', 'orange', 'black')) {
1491208106967:results <- lapply(models, function(m) {
1491208106968:prediction <- predict(m$model, m$test, 'prob')$yes
1491208106969:label <- m$test$purchased
1491208106970:list(
1491208106970:ROCdf = createROCDf(prediction, label),
1491208106971:AUC = calculateAUC(prediction, label)
1491208106972:)
1491208106972:})
1491208106973:ROCplot <- ggplot() +
1491208106974:geom_segment(
1491208106975:aes(x = 0, y = 0, xend = 1, yend = 1),
1491208106975:linetype = "dotted", col = "black"
1491208106976:) +
1491208106977:scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, .1)) +
1491208106978:scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, .1)) +
1491208106979:xlab("False Positive Rate") + ylab("True Positive Rate")
1491208106980:for (i in seq_along(results)) {
1491208106981:ROCplot <- ROCplot +
1491208106982:geom_line(data = results[[i]]$ROCdf, aes(FPR, TPR), size = 2, col = ROCcolors[i])
1491208106983:}
1491208106985:n_estimation = nrow(models[[1]]$test)
1491208106986:ROCplot +
1491208106987:geom_text(
1491208106988:aes(
1491208106989:x = 0.55, y = seq_len(length(results))/10,
1491208106990:label = paste0(names(results), ': ', sapply(results, function(x) x$AUC), '%')
1491208106991:),
1491208106993:hjust = 0, col = ROCcolors[seq_len(length(results))]
1491208106995:) +
1491208106996:geom_text(
1491208106998:aes(
1491208106999:x = 0, y = 0.9, hjust = 0,
1491208107001:label = paste('Estimated for', format(n_estimation, big.mark = ','), 'persons')
1491208107003:)
1491208107005:)
1491208107007:}
1491208117169:models_14months <- list(
1491208117172:RFM_click = list(
1491208117173:model = rfm_click,
1491208117173:test = data_14months_number$test[sum_click + bought_last_period > 0]
1491208117174:),
1491208117175:RFM_click_open = list(
1491208117175:model = rfm_click_open,
1491208117176:test = data_14months_number$test[sum_click + bought_last_period > 0]
1491208117177:),
1491208117177:RFM_click_open_web = list(
1491208117178:model = rfm_click_open_web,
1491208117179:test = data_14months_number$test[sum_click + bought_last_period > 0]
1491208117180:)
1491208117181:)
1491208117230:plotROC(models_14months)
1491208140884:ggsave("figures/roc_evolution_slimming_email_web14months.png", scale = 0.9, width = 8, height = 8)
1491208505856:packrat::restore(prompt = FALSE)
1491208592560:install.packages("stringr")
1491208603291:packrat::restore(prompt = FALSE)
1491208631602:install.packages("nlme")
1491208639077:packrat::restore(prompt = FALSE)
1491208841674:install.packages("RcppEigen")
1491208848604:packrat::restore(prompt = FALSE)
1491209072270:install.packages("mgcv")
1491209080376:packrat::restore(prompt = FALSE)
1491209318448:packrat::status()
1491209367932:packrat::status()
1491211247395:install.packages("MatchIt")
1491211267268:library(MatchIt)
1491211271296:q()
1491899694521:suppressPackageStartupMessages(
1491899694522:source('global.R')
1491899694523:)
1491899701742:args = commandArgs(trailingOnly=TRUE)
1491899704294:if (length(args)==0) {
1491899704295:selected_customer <- DEFAULT_SELECTED_CUSTOMER
1491899704296:} else{
1491899704297:selected_customer <- args[1]
1491899704297:}
1491899709371:message(sprintf("Currently selected customer: %s", selected_customer))
1491899756443:recom_history <- getRecomHistory(selected_customer, refetch = TRUE)
1491899842943:str_c("hey", 1, "blue")
1491899852277:library(stringi)
1491899853619:str_c("hey", 1, "blue")
1491899876055:?str_replace_all
1491899895259:library(stringr)
1491899897760:?str_c
1491899908948:str_c("hey", 1, "bela")
1491899914299:str_c("hey", as.integer(1), "bela")
1491900070114:debug(getRecomHistory)
1491900074493:recom_history <- getRecomHistory(selected_customer, refetch = TRUE)
1491900084083:debug(getBigQueryResult)
