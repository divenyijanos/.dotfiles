{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"My",
				"MyClass\t(mock.py)"
			],
			[
				"ch",
				"character_classes"
			],
			[
				"chara",
				"character_classes\tparam"
			],
			[
				"cha",
				"character_classes"
			],
			[
				"char",
				"char_character_class"
			],
			[
				"magi",
				"magic_character_class"
			],
			[
				"Pisti",
				"PistiClass"
			],
			[
				"last",
				"lastPistiChar"
			],
			[
				"Pist",
				"PistiClass"
			],
			[
				"Pis",
				"PistiClass"
			],
			[
				"P",
				"PistiClass"
			],
			[
				"assertE",
				"assertIsInstance\tfunction"
			],
			[
				"purcs",
				"purchases"
			],
			[
				"True",
				"True\t(build.py)"
			],
			[
				"targe",
				"targetable_inactives"
			],
			[
				"curre",
				"current_timestamp"
			],
			[
				"split",
				"_split_integer_into_almost_equal_parts"
			],
			[
				"histo",
				"history_table_name"
			],
			[
				"Quer",
				"QueryToPandas"
			],
			[
				"initi",
				"initial_inactive_count"
			],
			[
				"_get_c",
				"_get_schema_info\t(data_store.py)"
			],
			[
				"_get_",
				"_get_schema_info\t(data_store.py)"
			],
			[
				"inac",
				"inactives_to_target"
			],
			[
				"_add",
				"_add_enter_timestamp_to_df_to_store\tfunction"
			],
			[
				"_get",
				"_get_inactive_count"
			],
			[
				"table_mock",
				"table_mock\tstatement"
			],
			[
				"query",
				"query_to_pandas"
			],
			[
				"Da",
				"DataFrame\t(target_integrationtest.py)"
			],
			[
				"df_incentiv",
				"df_incentives_w_ids"
			],
			[
				"df_in",
				"df_incentives_w_ids\tparam"
			],
			[
				"df_",
				"df_recommendations"
			],
			[
				"ad",
				"add_buying_probability_group_to_recommendations\tfunction"
			],
			[
				"add",
				"add_incentive_ids_to_recommendations"
			],
			[
				"cal",
				"calculate_profit_increase"
			],
			[
				"get",
				"get_output_schema\tfunction"
			],
			[
				"inp",
				"input_data_dict\tparam"
			],
			[
				"df_con",
				"df_contact_features"
			],
			[
				"input",
				"input_data_dict"
			],
			[
				"incent",
				"incentive_message"
			],
			[
				"expe",
				"expected_df_incentives_to_distribute"
			],
			[
				"df_to",
				"df_incentives_to_distribute\t(recommend.py)"
			],
			[
				"Inc",
				"IncentiveMessage\tclass"
			],
			[
				"proces",
				"process_message"
			],
			[
				"cre",
				"create_incentives_to_distribute"
			],
			[
				"mess",
				"message"
			],
			[
				"get_in",
				"get_incentives_to_distribute"
			],
			[
				"df_inc",
				"df_incentives_to_distribute"
			],
			[
				"mer",
				"merge_recom_history_to_distributed_incentives\tfunction"
			],
			[
				"df_incet",
				"df_incentives_prob_groups"
			],
			[
				"ince",
				"incentive_message\tstatement"
			],
			[
				"messag",
				"message_dict\t(recommend.py)"
			],
			[
				"df_incen",
				"df_incentives_to_distribute"
			],
			[
				"messa",
				"message_dict"
			],
			[
				"in",
				"create_incentive_content\tmodule"
			],
			[
				"pd",
				"pd"
			],
			[
				"GetI",
				"GetInputData\t(recommend.py)"
			],
			[
				"geti",
				"get_input_data\tmodule"
			],
			[
				"list_",
				"list_of_dicts_with_schema_info"
			],
			[
				"PandasTo",
				"PandasToTable\tclass"
			],
			[
				"pand",
				"pandas_to_table\tmodule"
			],
			[
				"blob",
				"blob_name\t(recommend.py)"
			],
			[
				"Pandas",
				"PandasToStorage"
			],
			[
				"Stor",
				"StorageToTable"
			],
			[
				"create_bucket",
				"create_bucket_patch"
			],
			[
				"assertIsNo",
				"assertIsNone\tfunction"
			],
			[
				"con",
				"Config\tclass"
			],
			[
				"s",
				"storage\t(__init__.py)"
			],
			[
				"Pan",
				"PandasToStorage"
			],
			[
				"num_",
				"num_probability_groups\tstatement"
			],
			[
				"Q",
				"QueryToPandas"
			],
			[
				"googl",
				"google_project\tfunction"
			],
			[
				"proct",
				"project_id"
			],
			[
				"lambda",
				"lambdas\tstatement"
			],
			[
				"del",
				"delete_blob\tfunction"
			],
			[
				"for",
				"format_recommendations_to_output_schema\tfunction"
			],
			[
				"gbq_",
				"gbq_table"
			],
			[
				"b",
				"bayesian_learning"
			],
			[
				"uplo",
				"upload_file_to_gcs\tfunction"
			],
			[
				"by_",
				"by_prob_group"
			],
			[
				"plotB",
				"plotRatesBySegments"
			],
			[
				"plotR",
				"plotRatesByCampaigns"
			],
			[
				"evolu",
				"evolution_slimming"
			],
			[
				"recom_his",
				"recom_history_w_visits"
			],
			[
				"recom",
				"recom_history"
			],
			[
				"mdc",
				"mdc\tMarkdown Codeblock"
			],
			[
				"campaign",
				"campaign_start_date"
			],
			[
				"position",
				"legend.position = \tArguments"
			],
			[
				"recom_",
				"recom_history_w_attribution"
			],
			[
				"en",
				"enriched_recom_history_data_%s.RData\t(load_enriched_recom_histories.R)"
			],
			[
				"attribution",
				"attribution_variants\t(calculate_purchase_attributions.R)"
			],
			[
				"selected",
				"selected_customer"
			],
			[
				"attr",
				"attribution_dt"
			],
			[
				"createV",
				"createVariantFileSuffix"
			],
			[
				"campa",
				"campaign_id\t(load_enriched_recom_histories.R)"
			],
			[
				"attrbi",
				"attribution_variants"
			],
			[
				"attri",
				"attribution_variants\t(calculate_purchase_attributions.R)"
			],
			[
				"attrib",
				"attribution_variants"
			],
			[
				"purchas",
				"purchases_si"
			],
			[
				"time",
				"time_window"
			],
			[
				"pur",
				"purchases_si"
			],
			[
				"attribu",
				"attributePurchasesToRecomHistory\t(purchase_attribution.R)"
			],
			[
				"custom",
				"customer_settings\t(global.R)"
			],
			[
				"evolutio",
				"evolution_slimming\t(dodo.py)"
			],
			[
				"campai",
				"campaign_start_date"
			],
			[
				"cam",
				"campaign_start_date"
			],
			[
				"predict",
				"predict_data\t(calculate_buying_prob.R)"
			],
			[
				"NL",
				"NL_female\t(project_values.R)"
			],
			[
				"excl",
				"excludeSmallCampaigns\t(tools.R)"
			],
			[
				"conver",
				"convertSendDayToDate\t(fetch_data.R)"
			],
			[
				"exc",
				"excludeIrrelevantCampaigns\t(tools.R)"
			],
			[
				"getR",
				"getRecipientShareForContactlist\t(calculate_metrics.R)"
			],
			[
				"getFir",
				"getListOfFirstSTOReceivers\t(tools.R)"
			],
			[
				"middle",
				"middle5075\t(tools.R)"
			],
			[
				"getCon",
				"getContactlistsForSegments\t(fetch_data.R)"
			],
			[
				"contactlists",
				"contactlists_dt"
			],
			[
				"gud",
				"guide_legend"
			],
			[
				"contact",
				"contactlist_name"
			],
			[
				"dcat",
				"dcast_formula"
			],
			[
				"REAL",
				"REAL_AKT_80_CONTROL"
			],
			[
				"REAL_AKT_",
				"REAL_AKT_20_STO"
			],
			[
				"histor",
				"history_summary"
			],
			[
				"plotO",
				"plotOpenRateEvolutionWithPast\t(customer-sto-explore.R)"
			],
			[
				"our_STO_",
				"our_STO_contactlist_id"
			],
			[
				"prior_changes",
				"prior_change_dates"
			],
			[
				"addWe",
				"addWeekendToSummary_\t(tools.R)"
			],
			[
				"campaigns_",
				"campaigns_to_restrict"
			],
			[
				"sendin",
				"sending_variability"
			],
			[
				"aggr",
				"aggregateVariability\t(calculate_metrics.R)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/jdivenyi/playground/ktgvet/expenses.csv",
			"settings":
			{
				"buffer_size": 156240,
				"encoding": "UTF-8 with BOM",
				"line_ending": "CR"
			}
		},
		{
			"file": "/Users/jdivenyi/playground/python-mock/assigner.py",
			"settings":
			{
				"buffer_size": 112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/jdivenyi/playground/python-mock/mock.py",
			"settings":
			{
				"buffer_size": 122,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from unittest.mock import Mock\n\ndef myfunc(arg):\n    values = {'a': 1, 'b': [1, 2]}\n    return values[arg]\n\nmymock = Mock()\nmymock.get.side_effect = myfunc\n\nmymock.get('a')\nmymock.get('b')\nmymock.get('b')\n",
			"file": "/Users/jdivenyi/playground/mock_script.py",
			"file_size": 199,
			"file_write_time": 131547132820000000,
			"settings":
			{
				"buffer_size": 205,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/jdivenyi/playground/python-mock/test_mock.py",
			"settings":
			{
				"buffer_size": 267,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mov",
				"File: Move"
			],
			[
				"ne",
				"File: New Folder Relative to Project Root"
			],
			[
				"newfol",
				"File: New File Relative to Project Root"
			],
			[
				"sendcod",
				"Preferences: SendCode Key Bindings"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			],
			[
				"sendco",
				"Preferences: SendCode Settings"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"clo",
				"Project: Close"
			],
			[
				"p",
				"Project: Close"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"newfo",
				"File: New Folder Relative to Project Root"
			],
			[
				"new",
				"Project Manager: Add New Project"
			],
			[
				"rean",
				"Project Manager: Rename Project"
			],
			[
				"add",
				"Project: Add Folder"
			],
			[
				"newp",
				"Project Manager: Add New Project"
			],
			[
				"proje",
				"Project: Close"
			],
			[
				"color",
				"MarkdownEditing: Change color scheme..."
			],
			[
				"synrm",
				"Set Syntax: R Markdown"
			],
			[
				"syntax mark",
				"Set Syntax: Markdown"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"view",
				"View: Toggle Minimap"
			],
			[
				":w",
				":w - Save"
			],
			[
				"col",
				"UI: Select Color Scheme"
			],
			[
				"ui",
				"UI: Select Theme"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"sele",
				"UI: Select Theme"
			],
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"select the",
				"UI: Select Theme"
			],
			[
				"pr",
				"Project: Close"
			],
			[
				"sublimerg",
				"Sublimerge: Compare to View..."
			],
			[
				"repl",
				"SendCode: Choose REPL Program"
			],
			[
				"file ren",
				"File: Rename"
			],
			[
				"git diff",
				"Git: Diff Tool Current File"
			],
			[
				"rep",
				"SendCode: Choose REPL Program"
			],
			[
				"move",
				"File: Move"
			],
			[
				"lin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"new fo",
				"File: New Folder Relative to Project Root"
			],
			[
				"projne",
				"Project Manager: Add New Project"
			],
			[
				"projcl",
				"Project: Close"
			],
			[
				"git di",
				"Git: Diff All Files"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"mo",
				"File: Move"
			],
			[
				":s",
				":w - Save"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"usag",
				"Anaconda: Find object usage"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"usa",
				"Anaconda: Find object usage"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"folder",
				"File: New Folder Relative to Project Root"
			],
			[
				"file",
				"File: Delete"
			],
			[
				"ana",
				"Anaconda: Find object usage"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"projeed",
				"Project: Edit"
			],
			[
				"anacodus",
				"Anaconda: Find object usage"
			],
			[
				"box",
				"Boxy Theme: Activation"
			],
			[
				"git dif",
				"Git: Diff Current File"
			],
			[
				"k",
				"Preferences: Key Bindings"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"find",
				"FindKeyConflicts: All Conflicts"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Discover Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"git stash",
				"Git: Stash List"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"sendr",
				"SendREPL: Choose REPL Program"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"edi",
				"Project: Edit Project"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"linter",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"projc",
				"Project: Close"
			],
			[
				"bh sele",
				"BracketHighlighter: Select Bracket Content"
			],
			[
				"bh ena",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"brak",
				"BracketHighlighter: Remove Brackets"
			],
			[
				"sulbimelin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"projenew",
				"Project Manager: Add New Project"
			],
			[
				"clos",
				"Project: Close"
			],
			[
				"wor",
				"Word Wrap: Toggle"
			],
			[
				"senr",
				"SendREPL: Choose REPL Program"
			],
			[
				"file brow",
				"File: Open In Browser - Production Server"
			],
			[
				"folder ne",
				"File: New Folder Relative to Current View"
			],
			[
				"filed",
				"File: Delete"
			],
			[
				"packremo",
				"Package Control: Remove Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"resour",
				"PackageResourceViewer: Open Resource"
			],
			[
				"bro",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"PackageResourceViewer: Extract Package"
			],
			[
				"packareRe",
				"Package Control: Remove Repository"
			],
			[
				"pakcres",
				"PackageResourceViewer: Extract Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"package ",
				"Preferences: Browse Packages"
			],
			[
				"mvo",
				"File: Move"
			],
			[
				"file d",
				"File: Delete"
			],
			[
				"file mo",
				"File: Move"
			],
			[
				"git pul",
				"Git: Pull"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"sql",
				"ST: Format Current SQL File"
			],
			[
				"gpus",
				"Git: Push"
			],
			[
				"git qu",
				"Git: Quick Commit (current file)"
			],
			[
				"instalp",
				"Package Control: Install Package"
			],
			[
				"removepa",
				"Package Control: Remove Package"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"REP",
				"SendREPL: Choose REPL Program"
			],
			[
				"git pu",
				"Git: Pull"
			],
			[
				"sublimerge:sh",
				"Sublimerge: Show Uncommited Changes..."
			],
			[
				"sublimerge",
				"Sublimerge: Show Changes Introduced in Revision..."
			],
			[
				"gcm",
				"Git: Commit"
			],
			[
				"gita",
				"Git: Add Current File"
			],
			[
				"sendrp",
				"SendREPL: Choose REPL Program"
			],
			[
				"proj",
				"Project: Add Folder"
			],
			[
				"poj",
				"Project: Edit Project"
			],
			[
				"senre",
				"SublimeLinter: Enable Linter"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"gt ad",
				"Git: Add All"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"gitc",
				"Git: Commit"
			],
			[
				"git a",
				"Git: Add All"
			],
			[
				"git",
				"Git: Toggle Annotations"
			],
			[
				"folde",
				"File: New Folder Relative to Project Root"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"e",
				"Project: Edit"
			],
			[
				"foldern",
				"File: New Folder Relative to Current View"
			],
			[
				"SEND",
				"SendREPL: Choose REPL Program"
			],
			[
				"REPL",
				"SendREPL: Choose REPL Program"
			]
		],
		"width": 476.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jdivenyi/playground",
		"/Users/jdivenyi/playground/99bottles",
		"/Users/jdivenyi/playground/99bottles/lib",
		"/Users/jdivenyi/playground/99bottles/test",
		"/Users/jdivenyi/playground/coding-dojo",
		"/Users/jdivenyi/playground/coding-dojo/dojo-pisti-class",
		"/Users/jdivenyi/playground/coding-dojo/dojo-pisti-class/__pycache__",
		"/Users/jdivenyi/playground/ddt",
		"/Users/jdivenyi/playground/ktgvet",
		"/Users/jdivenyi/playground/python-mock",
		"/Users/jdivenyi/playground/stata-r-probit"
	],
	"file_history":
	[
		"/Users/jdivenyi/playground/ktgvet/create_tables.py",
		"/Users/jdivenyi/projects/incentive-optimization/packrat/lib/x86_64-apple-darwin16.7.0/3.4.2/knitr/themes/acid.css",
		"/Users/jdivenyi/playground/ddt/tests.json",
		"/Users/jdivenyi/playground/ddt/test_ddt.py",
		"/Users/jdivenyi/playground/99bottles/lib/bottles.rb",
		"/Users/jdivenyi/playground/python-mock/assigner.py",
		"/Users/jdivenyi/playground/python-mock/mock.py",
		"/Users/jdivenyi/playground/python-mock/test_mock.py",
		"/Users/jdivenyi/playground/python-mock/__init__.py",
		"/Users/jdivenyi/playground/python-mock",
		"/Users/jdivenyi/playground/stata-r-probit/probit_reprex.R",
		"/Users/jdivenyi/playground/coding-dojo/pisti_class_kata/test_pisti_class.py",
		"/Users/jdivenyi/playground/coding-dojo/pisti_class_kata/pisti_class.py",
		"/Users/jdivenyi/playground/coding-dojo/pisti-class-kata/__init__.py",
		"/Users/jdivenyi/playground/benchmarks/dt_columns_regex.R",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/targeter_test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/targeter_one_contact_integrationtest.json",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/rabbit/messages/notify_participation/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/targeter.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/assignment.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/targeter_one_contact_integrationtest.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/report_results.sql",
		"/Users/jdivenyi/projects/programmatic-retention/small_customers_plan.md",
		"/Users/jdivenyi/talks/plotly/plotly.Rmd",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/targeter_multiple_contact_integrationtest.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/data_store_test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/assignment_test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/customer_meta.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/inactive_selector.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/customer_meta_integrationtest.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/build.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/.env",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/data_store.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/query_to_pandas/__init___test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/current_participants.sql",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/daily_remove.sql",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/query_to_pandas/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/target_integrationtest.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/inactive_selector_test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/external_queries_integrationtest.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/customer_meta_test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/select_inactives.sql",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/query_builder/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/config/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/pandas_to_table/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/storage_to_table/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/current_participants_integrationtest.py",
		"/Users/jdivenyi/sandbox/coding-dojo/test_try.py",
		"/Users/jdivenyi/.gitconfig",
		"/Users/jdivenyi/git",
		"/Users/jdivenyi/lg",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/__init___test.py",
		"/Users/jdivenyi/.zshrc",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/rabbit/__init__test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/rabbit/messages/trigger_aim/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/.flake8",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/config/__init___test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/emarsys/data_framework/job_runner/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/emarsys/data_framework/job_runner/__init___test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/query_builder/__init___test.py",
		"/Users/jdivenyi/.aliases",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/logger/__init__.py",
		"/Users/jdivenyi/Downloads/sample-data - history (1).csv",
		"/Users/jdivenyi/Library/Application Support/Sublime Text 3/Packages/User/Sublimerge 3.sublime-settings",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/external_queries_readme.txt",
		"/Users/jdivenyi/Downloads/sample-data - purchases (1).csv",
		"/Users/jdivenyi/.ssh/config",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/daily_add.sql",
		"/Users/jdivenyi/homeworks/Bergmann/hw_bergmann.R",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/reporting_results_integrationtest.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/requirements.txt",
		"/Users/jdivenyi/projects/predict-log-extractor-service/lib/predict/log_entry_purchase_csv_row_factory.py",
		"/Users/jdivenyi/projects/predict-log-extractor-service/.client.ini",
		"/Users/jdivenyi/homeworks/Dobsa/beugro_Dobsa_Daniel.R",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/one_contact_integrationtest.json",
		"/Users/jdivenyi/projects/programmatic-retention/aim-algo.md",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/job_runner/__init___test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/lib/google/big_query/job_runner/__init__.py",
		"/Users/jdivenyi/projects/programmatic-retention/sql/get_healthy_web_data.sql",
		"/Users/jdivenyi/.Rprofile",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/report_results.sql",
		"/Users/jdivenyi/.hammerspoon/app_hotkeys.lua",
		"/Users/jdivenyi/sandbox/target_sample.csv",
		"/Users/jdivenyi/sandbox/sample_purchases.csv",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/__init__.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/deterministic/__init__test.py",
		"/Users/jdivenyi/Library/Application Support/Sublime Text 3/Packages/User/app.sublime-snippet",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/deterministic/__init__.py",
		"/Users/jdivenyi/Library/Application Support/Sublime Text 3/Packages/User/ipdb.sublime-snippet",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/__init___test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/service_account.json",
		"/Users/jdivenyi/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/smart/__init__.py",
		"/Users/jdivenyi/.R/Makevars",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/.env.sample",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/simple/target.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/targeter/simple/target__test.py",
		"/Users/jdivenyi/projects/reactivation-participation-aim-service/workers/recommender/simple",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/recommend_test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/storage_to_table/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/recommend_integration_tests.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/get_input_data.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/__collect_incentive_usage_data.sql",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/recommend.py",
		"/Users/jdivenyi/homeworks/Berczi/HW_Emarsys_Berczi_Andras.txt",
		"/Users/jdivenyi/homeworks/Berczi/HW_Emarsys_Berczi_Andras.",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/storage_to_table/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/storage/pandas_to_storage/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/process_message.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/get_input_data_test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/create_incentive_content_test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/process_message_test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/create_incentive_content.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/bayesian_learning/df_equality_assertion.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/pandas_to_table/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/pandas_to_table/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/storage/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/workers/recommender/deterministic/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/query_to_table/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/query_to_table/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/job_runner/__init__.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/storage/pandas_to_storage/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/query_builder/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/storage/__init___test.py",
		"/Users/jdivenyi/projects/incentives-optimizer-service/lib/google/big_query/query_to_pandas/__init__.py"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 235.0,
		"where_history":
		[
			"",
			"workers/targeter/smart",
			"<project>",
			"",
			".",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"^[^,]*,[^,]*,[^,]*,[^,]*$",
			"^[^,]*,[^,]*,[^,]*$",
			"^[^,]*$",
			"^[^,]*,{4}$",
			"^[^,]*,{3}$",
			"^(.*)\\,(.*)\\,(.*)\\,(.*)$",
			"^(.*),(.*),(.*)$",
			"start",
			", character_classes",
			"PistiClass",
			"character_classes",
			"characters",
			"CharacterS",
			"Characters",
			"characters",
			"CharacterS",
			"Characters",
			"characters",
			"CharacterS",
			"Characters",
			"characters",
			"CharacterS",
			"Characters",
			"characters",
			"CharacterS",
			"Characters",
			"characters",
			"s",
			"addToMagicSplit",
			"checkIsInSameSet",
			"addPisti",
			"sets",
			"arr",
			"Pisti",
			"pisti",
			"Pisti",
			"pisti",
			"Pisti",
			"pisti",
			"Pisti",
			"pisti",
			"big_dt",
			"mydt",
			"_is_not_enough_inactives_to_target",
			"is_not_enough_inactives",
			"report",
			"4",
			"count",
			"converted_count",
			"sales_amount",
			"effective_hour",
			"1",
			"control",
			"effective_hour",
			"p",
			"n ",
			"n",
			"split",
			" self.message ",
			"2193",
			"reactivator",
			"inactive_df",
			"schedules",
			"_build_query",
			"_get_full_table_path",
			"get_message",
			"message",
			"reactivation",
			"reactivation.",
			"reactivation",
			"reactivation.",
			"reactivation",
			"data-dev",
			"reactivation",
			"5",
			"7",
			" \"",
			"control",
			"3",
			"2",
			"schema_inf",
			"_schema_info",
			"get_schema_info",
			"\"",
			"find_all",
			"'",
			"\\'",
			"\\\"",
			"\"",
			"contact_id",
			"_getAllInactives",
			"_removeCurrentParticipantsFromInactives",
			"_getCurrentParticipants",
			"_getAllInactives",
			"storeHistoryDF",
			"_getInactiveCount",
			"potential_number_of_contacts_in_segment",
			"getInactives",
			"inactives",
			"splitTreatControl",
			"filehandler",
			"splitTargetControl",
			"select_random_n_contacts",
			"table_name",
			"table_mock",
			"table_name",
			"history_expectaction",
			"jurney",
			"delete_gbq_table",
			"UTC",
			"_date",
			"MONTH",
			"assertTrue",
			"assertEqual",
			"'{{ current_timestamp }}'",
			"{{ current_timestamp }}",
			"upload_opens_if_not_present",
			"delete_gbq_table",
			"\\n",
			"current_date",
			"self",
			"current_date",
			"_pandas_to_table",
			"PandasToTable",
			"\\n",
			"effective_date",
			"dates",
			"query_to_pandas"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\'",
			"split_target_control",
			"select_random_contacts",
			"excludeSmallCampaigns",
			";"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/jdivenyi/playground/ktgvet/expenses.csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 156240,
						"regions":
						{
						},
						"selection":
						[
							[
								249,
								249
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/jdivenyi/playground/python-mock/assigner.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/jdivenyi/playground/python-mock/mock.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 122,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/jdivenyi/playground/mock_script.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 205,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"_anf_new": "",
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.sql"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "/Users/jdivenyi/playground/python-mock/test_mock.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 267,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 48.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 124.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "playground.sublime-project",
	"replace":
	{
		"height": 90.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"tar",
				"workers/targeter/smart/targeter_test.py"
			],
			[
				"ass",
				"workers/targeter/smart/assignment.py"
			],
			[
				"targeterm",
				"workers/targeter/smart/targeter_multiple_contact_integrationtest.py"
			],
			[
				"res",
				"workers/targeter/report_results.sql"
			],
			[
				"targeone",
				"workers/targeter/smart/targeter_one_contact_integrationtest.py"
			],
			[
				"target",
				"workers/targeter/smart/targeter_multiple_contact_integrationtest.py"
			],
			[
				"one",
				"workers/targeter/smart/targeter_one_contact_integrationtest.json"
			],
			[
				"bui",
				"build.py"
			],
			[
				".en",
				".env"
			],
			[
				"cusom",
				"workers/targeter/smart/customer_meta_integrationtest.py"
			],
			[
				"data",
				"workers/targeter/smart/data_store.py"
			],
			[
				"dataso",
				"workers/targeter/smart/data_store_test.py"
			],
			[
				"assi",
				"workers/targeter/smart/assignment_test.py"
			],
			[
				"target_",
				"workers/targeter/smart/targeter_test.py"
			],
			[
				"currep",
				"workers/targeter/smart/current_participants.sql"
			],
			[
				"dail",
				"workers/targeter/daily_remove.sql"
			],
			[
				"ex",
				"workers/targeter/external_queries_integrationtest.py"
			],
			[
				"targem",
				"workers/targeter/smart/targeter_multiple_contact_integrationtest.py"
			],
			[
				"query",
				"lib/google/big_query/query_to_pandas/__init___test.py"
			],
			[
				"quer",
				"lib/google/big_query/query_to_pandas/__init__.py"
			],
			[
				"curre",
				"workers/targeter/smart/current_participants.sql"
			],
			[
				"sele",
				"workers/targeter/smart/select_inactives.sql"
			],
			[
				"querytopan",
				"lib/google/big_query/query_to_pandas/__init___test.py"
			],
			[
				"config",
				"config/__init__.py"
			],
			[
				"cusot",
				"workers/targeter/smart/customer_meta_test.py"
			],
			[
				"inactive",
				"workers/targeter/smart/inactive_selector_test.py"
			],
			[
				"query_to_",
				"lib/google/big_query/query_to_pandas/__init___test.py"
			],
			[
				"ta",
				"workers/targeter/smart/target_integrationtest.py"
			],
			[
				"targe",
				"workers/targeter/smart/targeter_one_contact_integrationtest.json"
			],
			[
				"integration",
				"workers/targeter/smart/targeter_one_contact_integrationtest.py"
			],
			[
				"me",
				"workers/targeter/smart/customer_meta.py"
			],
			[
				"integ",
				"workers/targeter/smart/customer_meta_integrationtest.py"
			],
			[
				"integra",
				"workers/targeter/smart/current_participants_integrationtest.py"
			],
			[
				"conf",
				"config/__init__.py"
			],
			[
				"as",
				"workers/targeter/smart/assignment_test.py"
			],
			[
				"selec",
				"workers/targeter/smart/select_inactives.sql"
			],
			[
				"on",
				"workers/targeter/smart/targeter_one_contact_integrationtest.py"
			],
			[
				"cur",
				"workers/targeter/smart/current_participants.sql"
			],
			[
				"targ",
				"workers/targeter/smart/target_integrationtest.py"
			],
			[
				"buil",
				"build.py"
			],
			[
				"cus",
				"workers/targeter/smart/customer_meta.py"
			],
			[
				"bi",
				"lib/google/big_query/__init___test.py"
			],
			[
				"inac",
				"workers/targeter/smart/inactive_selector_test.py"
			],
			[
				"data_",
				"workers/targeter/smart/data_store_test.py"
			],
			[
				"big",
				"lib/google/big_query/__init___test.py"
			],
			[
				"big_",
				"lib/google/big_query/__init__.py"
			],
			[
				"repo",
				"workers/targeter/report_results.sql"
			],
			[
				"targeter",
				"workers/targeter/smart/targeter_one_contact_integrationtest.py"
			],
			[
				"targeter_on",
				"workers/targeter/smart/targeter_one_contact_integrationtest.json"
			],
			[
				"t",
				"workers/targeter/smart/targeter.py"
			],
			[
				"triggeraim",
				"lib/rabbit/messages/trigger_aim/__init__.py"
			],
			[
				"meta",
				"workers/targeter/smart/customer_meta_test.py"
			],
			[
				"cu",
				"workers/targeter/smart/current_participants.sql"
			],
			[
				"e",
				"workers/targeter/external_queries_integrationtest.py"
			],
			[
				"",
				"workers/targeter/daily_add.sql"
			],
			[
				"bu",
				"build.py"
			],
			[
				"dailrm",
				"workers/targeter/daily_remove.sql"
			],
			[
				"customer",
				"workers/targeter/smart/customer_meta_test.py"
			],
			[
				"cusm",
				"workers/targeter/smart/customer_meta_integrationtest.py"
			],
			[
				"logg",
				"lib/logger/__init__.py"
			],
			[
				"pandastota",
				"lib/google/pandas_to_table/__init__.py"
			],
			[
				"jso",
				"workers/targeter/smart/targeter_one_contact_integrationtest.json"
			],
			[
				"queryto",
				"lib/google/big_query/query_to_pandas/__init__.py"
			],
			[
				"curr",
				"workers/targeter/smart/current_participants.sql"
			],
			[
				"ql",
				"workers/targeter/report_results.sql"
			],
			[
				"datas",
				"workers/targeter/smart/data_store.py"
			],
			[
				"job",
				"lib/google/big_query/job_runner/__init___test.py"
			],
			[
				"rep",
				"workers/targeter/report_results.sql"
			],
			[
				"in",
				"workers/targeter/smart/target_integrationtest.py"
			],
			[
				"dat",
				"workers/targeter/smart/data_store_test.py"
			],
			[
				"inte",
				"workers/targeter/smart/target_integrationtest.py"
			],
			[
				"ina",
				"workers/targeter/smart/inactive_selector_test.py"
			],
			[
				"ser",
				"service_account.json"
			],
			[
				"sql",
				"workers/recommender/bayesian_learning/__collect_incentive_usage_data.sql"
			],
			[
				"recomte",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"recom",
				"workers/recommender/bayesian_learning/recommend.py"
			],
			[
				"storaget",
				"lib/google/storage_to_table/__init__.py"
			],
			[
				"storagtot",
				"lib/google/storage_to_table/__init___test.py"
			],
			[
				"pandas",
				"lib/google/storage/pandas_to_storage/__init__.py"
			],
			[
				"storato",
				"lib/google/storage_to_table/__init__.py"
			],
			[
				"stora",
				"lib/google/storage/__init__.py"
			],
			[
				"storage",
				"lib/google/storage/__init___test.py"
			],
			[
				"que",
				"lib/google/big_query/query_to_table/__init___test.py"
			],
			[
				"querytota",
				"lib/google/big_query/query_to_table/__init__.py"
			],
			[
				"big_quer",
				"lib/google/big_query/__init___test.py"
			],
			[
				"pand",
				"lib/google/storage/pandas_to_storage/__init__.py"
			],
			[
				"query_to_table",
				"lib/google/big_query/query_to_table/__init__.py"
			],
			[
				"reco",
				"workers/recommender/bayesian_learning/recommend.py"
			],
			[
				"deter",
				"workers/recommender/deterministic/__init__.py"
			],
			[
				"recomm_",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"__coll",
				"workers/recommender/bayesian_learning/__collect_incentive_usage_data.sql"
			],
			[
				"recoomm",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"recomgte",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"requ",
				"requirements.txt"
			],
			[
				"rec",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"buyin",
				"workers/recommender/bayesian_learning/buying_prob_cart_value.sql"
			],
			[
				"test",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"con",
				"workers/recommender/bayesian_learning/test_data/contact_features_286267097.csv"
			],
			[
				"inc",
				"workers/recommender/bayesian_learning/test_data/incentives_286267097.csv"
			],
			[
				"te",
				"workers/recommender/bayesian_learning/recommend_test.py"
			],
			[
				"req",
				"requirements.txt"
			],
			[
				"proj",
				"project_values.R"
			],
			[
				"c",
				"customer_settings.yml"
			],
			[
				"cust",
				"customer_settings.yml"
			],
			[
				"glo",
				"global.R"
			],
			[
				"pr",
				"project_values.R"
			],
			[
				"lo",
				"scripts/load_enriched_recom_histories.R"
			],
			[
				"load",
				"scripts/load_enriched_recom_histories.R"
			],
			[
				"mat",
				"src/match_recom_history_purchases.R"
			],
			[
				"purs",
				"sql/purchases_si.sql"
			],
			[
				"d",
				"dodo.py"
			],
			[
				"db",
				"db_config.yml"
			],
			[
				"enric",
				"scripts/load_enriched_recom_histories.R"
			],
			[
				"calcu",
				"scripts/calculate_purchase_attributions.R"
			],
			[
				"web",
				"scripts/incentive_effect_on_webactivity.Rmd"
			],
			[
				"predi",
				"src/clean_predict_data.R"
			],
			[
				"do",
				"dodo.py"
			],
			[
				"we",
				"scripts/webinar_plots.R"
			],
			[
				"proje",
				"project_values.R"
			],
			[
				"/",
				"sql/campaigns_for_segment.sql"
			],
			[
				"camp",
				"sql/campaigns_for_segment.sql"
			],
			[
				"gen",
				"scripts/generate_sto_data.R"
			],
			[
				"get",
				"scripts/generate_sto_data.R"
			],
			[
				"pro",
				"project_values.R"
			],
			[
				"histo",
				"scripts/check_history.R"
			],
			[
				"lib",
				"libraries.R"
			],
			[
				"customer_",
				"scripts/customer_sto_explore.R"
			],
			[
				"too",
				"src/tools.R"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/.sublime-projects/engagement-score.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 361.0,
		"last_filter": "buck",
		"selected_items":
		[
			[
				"buck",
				"_get_bucket_size"
			],
			[
				"assi",
				"Assignment"
			],
			[
				"test_split",
				"test_splitTreatControl_adds_segment_column"
			],
			[
				"split",
				"splitTargetControl"
			],
			[
				"select",
				"select_random_n_contacts"
			],
			[
				"exis",
				"_meta_gbq_exists"
			],
			[
				"dele",
				"delete_gbq_table"
			],
			[
				"delet",
				"delete_gbq_table"
			],
			[
				"dlee",
				"delete_gbq_table"
			],
			[
				"inac",
				"InactiveSelector"
			],
			[
				"stora",
				"StorageToTable"
			],
			[
				"smar",
				"SmartTargeter"
			],
			[
				"tar",
				"Targeter"
			],
			[
				"data",
				"DataStore"
			],
			[
				"",
				"PandasToTable"
			],
			[
				"que",
				"QueryBuilder"
			],
			[
				"calc",
				"calculate_beta_distr_params"
			],
			[
				"run_",
				"run_pipeline"
			],
			[
				"run_re",
				"run_recommendation"
			],
			[
				"pro",
				"process_message"
			],
			[
				"quer",
				"query_bigquery"
			],
			[
				"runp",
				"run_pipeline_example"
			],
			[
				"get",
				"get_input_data"
			],
			[
				"o",
				"export_output_data"
			],
			[
				"upl",
				"upload_file_to_gcs"
			],
			[
				"testproc",
				"test_process_message"
			],
			[
				"qu",
				"query_bigquery"
			],
			[
				"getin",
				"get_input_data"
			],
			[
				"pipe",
				"run_pipeline"
			],
			[
				"q",
				"query_bigquery"
			],
			[
				"bin",
				"binPurchases"
			],
			[
				"getCa",
				"getCampaignsForProgram"
			],
			[
				"getBanditNumbersForPast",
				"getBanditNumbersForPast"
			],
			[
				"add",
				"addSTOline"
			],
			[
				"myg",
				"myggsave"
			],
			[
				"hi",
				"getHistoricalActivityForContactlists"
			],
			[
				"calcuvar",
				"calculateVariabilityOfLastSends"
			],
			[
				"ad",
				"addPastData"
			],
			[
				"gener",
				"generateRelativeData"
			],
			[
				"summar",
				"calculateSummary"
			],
			[
				"calcul",
				"calculateSummary"
			],
			[
				"plotE",
				"plotEvolution"
			],
			[
				"sql",
				"createStringValuesForSQLWith"
			],
			[
				"ag",
				"aggregateSummaryToWeeks"
			],
			[
				"mat",
				"matchCampaignPairs"
			],
			[
				"getDA",
				"getDataForSegments"
			],
			[
				"aggre",
				"aggregateSummaryToWeeks"
			],
			[
				"calculsu",
				"calculateSummary"
			],
			[
				"report",
				"reportStatistics"
			],
			[
				"calculSha",
				"calculateShareOfCommonContacts"
			],
			[
				"rest",
				"restrictDataToContacts"
			],
			[
				"remo",
				"removeSTOFromName"
			],
			[
				"cre",
				"createStringListFromVector"
			],
			[
				"readSt",
				"readStoData"
			],
			[
				"createS",
				"createStData"
			],
			[
				"readRe",
				"readRelativeOpenClickRateData"
			],
			[
				"mul",
				"multiplot"
			]
		],
		"width": 796.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
